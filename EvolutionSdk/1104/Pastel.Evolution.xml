<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Pastel.Evolution</name>
    </assembly>
    <members>
        <member name="T:Pastel.Evolution.AccountBase">
            <summary>
            Provides basic account functionality.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AccountBase.Module">
            <summary>
            Each module type is associated with an Evolution module.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AccountBase.Code">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
            <summary>
            Gets or sets the record's code.  The corresponding database field is not necessarily called <c>code</c>.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AccountBase.Description">
            <summary>
            Gets or sets the record's description.  The database field corresponding to the code is not necessarily called <c>description</c>.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AccountBase.Active">
            <summary>Gets or sets the record's state.</summary>
        </member>
        <member name="M:Pastel.Evolution.AccountBase.OnSave">
            <summary>
            Persists the record to the database.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Address">
            <summary>
            Represents an address record used by various modules.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Address.Line1">
            <summary>
            Gets or sets the first line of the address.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Address.Line2">
            <summary>
            Gets or sets the second line of the address.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Address.Line3">
            <summary>
            Gets or sets the third line of the address.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Address.Line4">
            <summary>
            Gets or sets the fourth line of the address.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Address.Line5">
            <summary>
            Gets or sets the fifth line of the address.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Address.Line6">
            <summary>
            Gets or sets the sixth line of the address.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Address.PostalCode">
            <summary>
            Gets or sets the postal code of the address.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Address.#ctor(System.String,System.String,System.String)">
            <summary>
            Creates a new instance of an address record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Address.#ctor">
            <summary>
            Creates a new instance of an address record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Address.#ctor(System.String)">
            <summary>
            Creates a new instance of an address record from a multi line string.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Address.#ctor(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new instance of an address record.
            </summary>
            <param name="line1"></param>
            <param name="line2"></param>
            <param name="line3"></param>
            <param name="line4"></param>
            <param name="line5"></param>
            <param name="postalCode"></param>
        </member>
        <member name="M:Pastel.Evolution.Address.ToString">
            <summary>
            Converts the address into a block-formatted string void of any blank lines in between fields.
            </summary>
            <returns>The formatted address.</returns>
        </member>
        <member name="M:Pastel.Evolution.Address.ToString(System.Boolean)">
            <summary>
            Converts the address into a block-formatted string.
            </summary>
            <param name="compact">
            
            </param>
            <returns>The formatted address.</returns>
        </member>
        <member name="M:Pastel.Evolution.Address.Condense">
            <summary>
            Obtains a condensed version of the current address (stripped of blank lines).  Note that any changes made to the returned address will not affect the current address.
            Also note that the postal address will be out of place if less than 6 lines are populated.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.Agent">
            <summary>
            Represents an agent.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Agent.#ctor">
            <summary>Creates a new instance of the Agent class.</summary>
        </member>
        <member name="M:Pastel.Evolution.Agent.#ctor(System.Int32)">
            <summary>Creates a new instance of the Agent class.</summary>
            <param name="id">The agent ID in the database.</param>
            <exception cref="T:Pastel.Evolution.EvolutionException">ID does not exist in the database.</exception>
        </member>
        <member name="M:Pastel.Evolution.Agent.#ctor(System.String)">
            <summary>Creates a new instance of the Agent class.</summary>
            <param name="name">The agent login name in the database.</param>
            <exception cref="T:Pastel.Evolution.EvolutionException">Login name does not exist in the database.</exception>
        </member>
        <member name="M:Pastel.Evolution.Agent.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Agent.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.Agent.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.Agent.Find(System.String)">
            <summary>Finds an agent account ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Agent.FindByName(System.String)">
            <summary>
            Attempts to find an agent by its code and returns its ID.
            </summary>
            <param name="name">The name used to lookup the agent.</param>
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.Agent.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.Agent.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.</param>
            <seealso cref="M:Pastel.Evolution.Agent.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.Agent.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.Agent.GetByName(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.Agent.GetByName(System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="name">Specifies the agent name.</param>
            <seealso cref="M:Pastel.Evolution.Agent.Get(System.String)" />
            <seealso cref="M:Pastel.Evolution.Agent.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.Agent.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.Agent.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.Name">
            <summary>Gets or sets the agent name.</summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.DisplayName">
            <summary>Gets or sets the agent's display name.</summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.IsActive">
            <summary>Gets or sets the agent's display name.</summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.IsOutOfOffice">
            <summary>
            Determines whether this agent is out of office.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.CanAssignIncidents">
            <summary>
            Determines whether incidents can be assigned to this agent.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.CanSetOutOfOffice">
            <summary>
            Determines whether the agent can set itself out of office.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.Comments">
            <summary>
            Gets or sets comments for this agent.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.Description">
            <summary>
            Gets or sets the agent's description.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.EmailAddress">
            <summary>
            Gets or sets the agent's e-mail address.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.AccessibleBranches">
            <summary>
            Gets the agent's accessible branches
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.DefaultSalesRep">
            <summary>
            Gets or sets the agent's default sales representative
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Agent.SalesRepresentativeID">
            <summary>
            Gets or sets the agent's default sales representative ID
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Agent.SetPassword(System.String,System.String)">
            <summary>Sets a new password for the agent, along with a password reminder.</summary>
        </member>
        <member name="M:Pastel.Evolution.Agent.SetPassword(System.String)">
            <summary>Sets a new password for the agent.</summary>
        </member>
        <member name="M:Pastel.Evolution.Agent.Authenticate(System.String,System.String)">
            <summary>Authenticates the agent in the Evolution database.</summary>
            <param name="agentName">Specifies the agent name.</param>
            <param name="password">Specifies the agent password.</param>
            <returns>True if the agent exists in the database, is active, and the password supplied is correct; false otherwise.</returns>
        </member>
        <member name="M:Pastel.Evolution.Agent.Authenticate_Secure(System.String,System.String)">
            <summary>Securely authenticates the agent in the Evolution database.</summary>
            <param name="agentName">Specifies the agent name.</param>
            <param name="password">Specifies the agent password.</param>
            <returns>True if the agent exists in the database, is active, and the password supplied is correct; false otherwise.</returns>
        </member>
        <member name="M:Pastel.Evolution.Agent.CreateAsSalesRep(System.String)">
            <summary>Create the agent as a sales representative as well.</summary>
            <param name="code">Specifies the representative code.</param>
            <returns>True if the representative has successfully been initialized; false otherwise.</returns>
        </member>
        <member name="M:Pastel.Evolution.Agent.ListAccessibleBranches(System.String)">
            <summary>Gets a list of accessible branches.</summary>
            <param name="name">The agent login name in the database.</param>
            <returns>Table containing the accessible branches for the specific agent.</returns>
        </member>
        <member name="M:Pastel.Evolution.Agent.ListAccessibleBranches(System.Int32)">
            <summary>Gets a list of accessible branches.</summary>
            <param agentID="agentID">The agent id in the database.</param>
            <returns>Table containing the accessible branches for the specific agent.</returns>
        </member>
        <member name="T:Pastel.Evolution.AgingTerm">
            <summary>
            Represents customer and supplier aging terms.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.#ctor">
            <summary>Creates a new instance of aging terms.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.#ctor(System.Int32)">
            <summary>Creates a new instance of aging terms.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.#ctor(Pastel.Evolution.AgingModule,System.String)">
            <summary>Creates a new instance of aging terms.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.List(System.String,Pastel.Evolution.AgingModule)">
            <summary>Executes the List method.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <param name="module">Specifies the module.</param>
            <returns>The List.</returns>
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.Find(System.String)">
            <summary>Finds an aging terms record ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cCode = 'MNTH-STMT' or cDescription like '%Internal%'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.Find(System.String,Pastel.Evolution.AgingModule)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <param name="module">Specifies the module.</param>
            <returns>The Find.</returns>
            <seealso cref="M:Pastel.Evolution.AgingTerm.Find(System.String)" />
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.FindByCode(Pastel.Evolution.AgingModule,System.String)">
            <summary>
            Attempts to find aging terms by its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the aging terms.</param>
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.AgingTerm.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cCode = 'MNTH-STMT' or cDescription like '%Internal%'</param>
            <seealso cref="M:Pastel.Evolution.AgingTerm.Find(System.String)" />
            <seealso cref="!:AgingTerm(string)" />
            <seealso cref="!:GetByCode(string)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.AgingTerm.GetByCode(Pastel.Evolution.AgingModule,System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.AgingTerm.Get(System.String)" />
            <seealso cref="!:AgingTerm(string)" />
            <seealso cref="M:Pastel.Evolution.AgingTerm.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.AgingTerm.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.AgingTerm.Code">
            <summary>Gets or sets the Aging Term code.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgingTerm.Description">
            <summary>Gets or sets the aging term' description.</summary>
        </member>
        <member name="P:Pastel.Evolution.AllocationEntry.TransactionID">
            <summary>
            Gets the ID of the allocated transaction.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AllocationEntry.BalancingTransactionID">
            <summary>
            Gets the ID of the balancing transaction.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AllocationEntry.Transaction">
            <summary>
            Gets the allocated transaction.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AllocationEntry.BalancingTransaction">
            <summary>
            Represents the balancing transaction linked to this allocation.  After saving of allocations, it will exist on whichever transaction it relates to and not necessarily the current allocation collection.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AllocationEntry.Amount">
            <summary>
            Gets the allocation value.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AllocationEntry.ForeignAmount">
            <summary>
            Gets the foreign allocation value.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AllocationEntry.Date">
            <summary>
            Gets the allocation date.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.AllocationCollection.Add(Pastel.Evolution.DrCrTransaction)">
            <summary>
            Adds a transaction to the allocation collection, allocating the maximum value possible.
            </summary>
            <remarks>If the maximum allocable amount is zero, the standard exception will be raised.</remarks>
            <param name="transaction">The transaction to add to the collection.</param>
        </member>
        <member name="M:Pastel.Evolution.AllocationCollection.Add(Pastel.Evolution.DrCrTransaction,System.Double)">
            <summary>
            Adds a transaction to the allocation collection, allocating the value specified.
            </summary>
            <param name="transaction">The transaction to add to the collection.</param>
            <param name="amount">The allocation value (foreign currency value if foreign currencies are being allocated).</param>
        </member>
        <member name="M:Pastel.Evolution.AllocationCollection.Add(Pastel.Evolution.DrCrTransaction,System.Double,System.DateTime,System.String,System.String)">
            <summary>
            Adds a transaction to the allocation collection, allocating the value specified.
            </summary>
            <param name="transaction">The transaction to add to the collection.</param>
            <param name="amount">The allocation value (foreign currency value if foreign currencies are being allocated).</param>
            <param name="balancingDate"/>
            <param name="balancingDescription"/>
            <param name="balancingReference"/>
        </member>
        <member name="M:Pastel.Evolution.AllocationCollection.AddNonCascade(Pastel.Evolution.AllocationEntry)">
            <summary>
            Adds an allocation entry directly to the collection without updating the referenced transaction or the owner's outstanding value.
            </summary>
            <param name="allocation"></param>
        </member>
        <member name="M:Pastel.Evolution.AllocationCollection.Add(Pastel.Evolution.AllocationEntry)">
            <summary>
            Adds a transaction to the allocation collection.
            </summary>
            <param name="allocation">The allocation entry to add to the collection.</param>
        </member>
        <member name="M:Pastel.Evolution.AllocationCollection.Remove(Pastel.Evolution.AllocationEntry,System.Boolean)">
            <summary>
            Removes a transaction allocation, effectively unallocating it.
            </summary>
            <param name="allocation"></param>
            <param name="force"></param>
        </member>
        <member name="P:Pastel.Evolution.AllocationCollection.TotalAllocation">
            <summary>
            Gets the total allocated value of the collection.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AllocationCollection.TotalForeignAllocation">
            <summary>
            Gets the foreign total allocated value of the collection.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.AllocationCollection.RemoveAt(System.Int32,System.Boolean)">
            <summary>
            Removes an allocation from a specific index.
            </summary>
            <param name="index"></param>
            <param name="force"></param>
        </member>
        <member name="M:Pastel.Evolution.AllocationCollection.RemoveAt(System.Int64,System.Boolean)">
            <summary>
            Removes an allocation with a specific transaction id
            </summary>
            <param name="index"></param>
            <param name="force"></param>
        </member>
        <member name="M:Pastel.Evolution.AllocationCollection.Save">
            <summary>
            Saves the transaction's allocations back to the database, whilst also updating any referenced transactions.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.AutoNumberingScheme.IsEnabled">
            <summary>
            Gets whether Automatic Numbering is on.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.AutoNumberingScheme.UpperCaseOnly">
            <summary>
            Gets whether Automatic Numbering only allows Upper Case characters.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.AutoNumberingScheme.PadLength">
            <summary>
            Gets the Automatic Numbering pad length.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.AutoNumberingScheme.PrefixLength">
            <summary>
            Gets the Automatic Numbering prefix length.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.PostAPTrans">
            <summary>
            This class is a wrapper for the _bspPostAPTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.ReturnValue">
            <summary>
            Gets the return value from the _bspPostAPTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _bspPostAPTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.AutoIdx">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.TxDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.AccountLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.TrCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.Debit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.Credit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.CurrencyID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.ExchangeRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.ForeignDebit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.ForeignCredit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.TaxTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.Reference">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.Order_No">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.ExtOrderNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.AuditNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.Tax_Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.ForeignTaxAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.Project">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.Outstanding">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.ForeignOutstanding">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.InvNumKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.UserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.Reference2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.SettlementTermsID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.TxBranchID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.GLTaxAccountID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.cLineUserFields">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.SagePayExtra1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.SagePayExtra2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.SagePayExtra3">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.cHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostAPTrans.iKeyVersion">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostAPTrans.Execute">
            <summary>
            This method calls the _bspPostAPTrans stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostAPTrans.Exec(System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt64@)">
            <summary>
            This method calls the _bspPostAPTrans stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="txDate"></param>
            <param name="id"></param>
            <param name="accountLink"></param>
            <param name="trCodeID"></param>
            <param name="debit"></param>
            <param name="credit"></param>
            <param name="currencyID"></param>
            <param name="exchangeRate"></param>
            <param name="foreignDebit"></param>
            <param name="foreignCredit"></param>
            <param name="description"></param>
            <param name="taxTypeID"></param>
            <param name="reference"></param>
            <param name="order_No"></param>
            <param name="extOrderNum"></param>
            <param name="auditNumber"></param>
            <param name="tax_Amount"></param>
            <param name="foreignTaxAmount"></param>
            <param name="project"></param>
            <param name="outstanding"></param>
            <param name="foreignOutstanding"></param>
            <param name="invNumKey"></param>
            <param name="userName"></param>
            <param name="reference2"></param>
            <param name="settlementTermsID"></param>
            <param name="txBranchID"></param>
            <param name="gLTaxAccountID"></param>
            <param name="cLineUserFields"></param>
            <param name="sagePayExtra1"></param>
            <param name="sagePayExtra2"></param>
            <param name="sagePayExtra3"></param>
            <param name="cHash"></param>
            <param name="iKeyVersion"></param>
            <param name="autoIdx"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.PostGLTrans">
            <summary>
            This class is a wrapper for the _bspPostGLTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.ReturnValue">
            <summary>
            Gets the return value from the _bspPostGLTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _bspPostGLTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.AutoIdx">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.TxDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.AccountLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.TrCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.Debit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.Credit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.CurrencyID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.ExchangeRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.ForeignDebit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.ForeignCredit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.TaxTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.Reference">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.Order_No">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.ExtOrderNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.AuditNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.Tax_Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.ForeignTaxAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.Project">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.Period">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.Reconciled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.DrCrAccount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.JobCodeLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.MFPID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.UserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.cPayeeName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.bPrintCheque">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.Reference2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.TxBranchID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.RepID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.JCRepCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.IsJCDocLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.IsSTGLDocLine">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.iInvLineID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.cBankRef">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.bMaintainBranchID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.GLTaxAccountID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.cLineUserFields">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.xAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.MajorIndustryCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.TaxInfoCompanyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.TaxInfoCompanyRegistration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.TaxInfoTaxRegistration">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.ImportDeclarationID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.cHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostGLTrans.iKeyVersion">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostGLTrans.Execute">
            <summary>
            This method calls the _bspPostGLTrans stored procedure.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.PostARTrans">
            <summary>
            This class is a wrapper for the _bspPostARTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.ReturnValue">
            <summary>
            Gets the return value from the _bspPostARTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _bspPostARTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.AutoIdx">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.TxDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.AccountLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.TrCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.Debit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.Credit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.CurrencyID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.ExchangeRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.ForeignDebit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.ForeignCredit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.TaxTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.Reference">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.Order_No">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.ExtOrderNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.AuditNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.Tax_Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.ForeignTaxAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.Project">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.Outstanding">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.ForeignOutstanding">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.InvNumKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.RepID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.LinkAccCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.TillID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.UserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.Reference2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.SettlementTermsID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.TxBranchID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.iMBPropertyID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.iMBPortionID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.iMBServiceID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.iMBMeterID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.iMBPropertyPortionServiceID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.GLTaxAccountID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.JCRepCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.cLineUserFields">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.iTransactionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.SagePayExtra1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.SagePayExtra2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.SagePayExtra3">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.MajorIndustryCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.cHash">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARTrans.iKeyVersion">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostARTrans.Execute">
            <summary>
            This method calls the _bspPostARTrans stored procedure.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.PostStTrans">
            <summary>
            This class is a wrapper for the _bspPostStTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.ReturnValue">
            <summary>
            Gets the return value from the _bspPostStTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _bspPostStTrans stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.AutoIdx">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.TxDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.Id">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.AccountLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.TrCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.Debit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.Credit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.TaxTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.Reference">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.Order_No">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.ExtOrderNum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.AuditNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.Tax_Amount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.Project">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.Quantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.Cost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.WarehouseID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.JobCodeLink">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.TillID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.DrCrAccount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.UserName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.UpdateStock">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.UpdateStCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.InvNumKey">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.Reference2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.MFPID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.LotID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.CurrencyId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.ExchangeRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.ForeignDebit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.ForeignCredit">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.ForeignTax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.MFPLineID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.RepID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.ChargeComm">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.UpdateLatestCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.AdditionalCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.GLAccountID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.UpdateManualCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.LineNote">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.TxBranchID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.MFPWIPQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.JCWIPQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.PostEUNoTCID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.cLineUserFields">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.JobLineID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.QuantityR">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.QuantityInvoiced">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.BinLocationID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.xAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStTrans.MajorIndustryCode">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostStTrans.Execute">
            <summary>
            This method calls the _bspPostStTrans stored procedure.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.NextAuditNo">
            <summary>
            This class is a wrapper for the _bspNextAuditNo stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.NextAuditNo.ReturnValue">
            <summary>
            Gets the return value from the _bspNextAuditNo stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.NextAuditNo.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _bspNextAuditNo stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.NextAuditNo.Execute">
            <summary>
            This method calls the _bspNextAuditNo stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.NextAuditNo.Exec">
            <summary>
            This method calls the _bspNextAuditNo stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.InvoiceStoreLines">
            <summary>
            This class is a wrapper for the _bspInvoiceStoreLines stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.ReturnValue">
            <summary>
            Gets the return value from the _bspInvoiceStoreLines stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _bspInvoiceStoreLines stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.idInvoiceLines">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iInvoiceID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.DocType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iOrigLineID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iGrvLineID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iStockCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.cDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQuantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iUnitsOfMeasureStockingID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iUnitsOfMeasureCategoryID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iUnitsOfMeasureID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyToProcess">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyLastProcess">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyProcessed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyReserved">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyReservedChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.cLineNotes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fUnitPriceExcl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fUnitPriceIncl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fUnitPriceExclForeign">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fUnitPriceInclForeign">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fUnitCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fUnitCostForeign">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fLineDiscount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iTaxTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fTaxRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iPriceListNameID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.bIsSerialItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.bIsWhseItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iWarehouseID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iJobID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fAddCost">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fAddCostForeign">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.cTradeinItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iLineRepID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iLineProjectID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iLedgerAccountID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iModule">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.bChargeCom">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.bIsLotItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iLotID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.cLotNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.dLotExpiryDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iMFPID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iLineID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iLinkedLineID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.cLineUserFields">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iBranchID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iUnitPriceOverrideReasonID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iLineDiscountReasonID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iReturnReasonID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iLineDocketMode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fUnitPriceExclOrig">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fUnitPriceInclOrig">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fUnitPriceExclForeignOrig">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fUnitPriceInclForeignOrig">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iDeliveryMethodID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyDeliver">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.dDeliveryDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iDeliveryStatus">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.bPromotionApplied">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fPromotionPriceExcl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fPromotionPriceIncl">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.cPromotionCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fLength">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fWidth">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fHeight">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iPieces">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iPiecesToProcess">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iPiecesLastProcess">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iPiecesProcessed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iPiecesReserved">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iPiecesDeliver">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQuantityUR">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyChangeUR">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyToProcessUR">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyLastProcessUR">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyProcessedUR">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyReservedUR">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyReservedChangeUR">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fQtyDeliverUR">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iSalesWhseID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iAttributeGroupID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.xAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iMajorIndustryCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iCancellationReasonID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.iStockBinLocationID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.xBinLocations">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceStoreLines.fRecommendedRetailPrice">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.InvoiceStoreLines.Execute">
            <summary>
            This method calls the _bspInvoiceStoreLines stored procedure.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO">
            <summary>
            This class is a wrapper for the _bspInvoiceLinesUpdateOnSOPO stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.ReturnValue">
            <summary>
            Gets the return value from the _bspInvoiceLinesUpdateOnSOPO stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _bspInvoiceLinesUpdateOnSOPO stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.iInvoiceID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.DocType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.InvDocState">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.iStockCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.iWarehouseId">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.fQtyChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.fQtyReservedChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.iLotID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.iUnitsOfMeasureStockingID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.iUnitsOfMeasureID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.iBinLocationID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.xAttribute">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.Execute">
            <summary>
            This method calls the _bspInvoiceLinesUpdateOnSOPO stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.InvoiceLinesUpdateOnSOPO.Exec(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlXml)">
            <summary>
            This method calls the _bspInvoiceLinesUpdateOnSOPO stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="iInvoiceID"></param>
            <param name="docType"></param>
            <param name="invDocState"></param>
            <param name="iStockCodeID"></param>
            <param name="iWarehouseId"></param>
            <param name="fQtyChange"></param>
            <param name="fQtyReservedChange"></param>
            <param name="iLotID"></param>
            <param name="iUnitsOfMeasureStockingID"></param>
            <param name="iUnitsOfMeasureID"></param>
            <param name="iBinLocationID"></param>
            <param name="xAttribute"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.SNPostSerialNumber">
            <summary>
            This class is a wrapper for the _bspSNPostSerialNumber stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.ReturnValue">
            <summary>
            Gets the return value from the _bspSNPostSerialNumber stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _bspSNPostSerialNumber stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.SerialNumberID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.SerialNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.StockID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.TxType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.TxDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.TxReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.TxCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.ProjectID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.DrCrAccountID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.WarehouseID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.JobCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.MFPID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.LotID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.AuditNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.TxReference2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.MFPLineID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.iTxBranchID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.Quantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SNPostSerialNumber.BinLocationID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.SNPostSerialNumber.Execute">
            <summary>
            This method calls the _bspSNPostSerialNumber stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.SNPostSerialNumber.Exec(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt64@)">
            <summary>
            This method calls the _bspSNPostSerialNumber stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="serialNumber"></param>
            <param name="stockID"></param>
            <param name="txType"></param>
            <param name="txDate"></param>
            <param name="txReference"></param>
            <param name="txCodeID"></param>
            <param name="projectID"></param>
            <param name="drCrAccountID"></param>
            <param name="warehouseID"></param>
            <param name="jobCodeID"></param>
            <param name="mFPID"></param>
            <param name="lotID"></param>
            <param name="auditNumber"></param>
            <param name="txReference2"></param>
            <param name="mFPLineID"></param>
            <param name="iTxBranchID"></param>
            <param name="quantity"></param>
            <param name="binLocationID"></param>
            <param name="serialNumberID"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.SerialNumberLinkStore">
            <summary>
            This class is a wrapper for the _bspSerialNumberLinkStore stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SerialNumberLinkStore.ReturnValue">
            <summary>
            Gets the return value from the _bspSerialNumberLinkStore stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SerialNumberLinkStore.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _bspSerialNumberLinkStore stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SerialNumberLinkStore.SerialNumberLinkID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SerialNumberLinkStore.SerialNumberGroupID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.SerialNumberLinkStore.SerialMFID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.SerialNumberLinkStore.Execute">
            <summary>
            This method calls the _bspSerialNumberLinkStore stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.SerialNumberLinkStore.Exec(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt64@)">
            <summary>
            This method calls the _bspSerialNumberLinkStore stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="serialNumberGroupID"></param>
            <param name="serialMFID"></param>
            <param name="serialNumberLinkID"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.RefGetNext">
            <summary>
            This class is a wrapper for the _rspRefGetNext stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefGetNext.ReturnValue">
            <summary>
            Gets the return value from the _rspRefGetNext stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefGetNext.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _rspRefGetNext stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefGetNext.RefType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefGetNext.iBranchID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.RefGetNext.Execute">
            <summary>
            This method calls the _rspRefGetNext stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.RefGetNext.Exec(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32)">
            <summary>
            This method calls the _rspRefGetNext stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="refType"></param>
            <param name="iBranchID"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.RefCommit">
            <summary>
            This class is a wrapper for the _rspRefCommit stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefCommit.ReturnValue">
            <summary>
            Gets the return value from the _rspRefCommit stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefCommit.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _rspRefCommit stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefCommit.RefType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefCommit.RefNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefCommit.iBranchID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.RefCommit.Execute">
            <summary>
            This method calls the _rspRefCommit stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.RefCommit.Exec(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <summary>
            This method calls the _rspRefCommit stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="refType"></param>
            <param name="refNo"></param>
            <param name="iBranchID"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.RefRollback">
            <summary>
            This class is a wrapper for the _rspRefRollBack stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefRollback.ReturnValue">
            <summary>
            Gets the return value from the _rspRefRollBack stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefRollback.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _rspRefRollBack stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefRollback.RefType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefRollback.RefNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.RefRollback.iBranchID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.RefRollback.Execute">
            <summary>
            This method calls the _rspRefRollBack stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.RefRollback.Exec(System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <summary>
            This method calls the _rspRefRollBack stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="refType"></param>
            <param name="refNo"></param>
            <param name="iBranchID"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.LTPostLots">
            <summary>
            This class is a wrapper for the _espLTPostLots stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.ReturnValue">
            <summary>
            Gets the return value from the _espLTPostLots stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _espLTPostLots stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.iWhseID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.cLotNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.iStockID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.dExpiryDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.fTransQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.iTransAction">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.dTxDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.iTxAccountID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.cReference">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.cReference2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.iTrCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.cAuditNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.iStatusID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.iLotID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.fReservedQty">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.iTxBranchID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.LTPostLots.iBinLocationID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.LTPostLots.Execute">
            <summary>
            This method calls the _espLTPostLots stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.LTPostLots.Exec(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <summary>
            This method calls the _espLTPostLots stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="iWhseID"></param>
            <param name="cLotNumber"></param>
            <param name="iStockID"></param>
            <param name="dExpiryDate"></param>
            <param name="fTransQty"></param>
            <param name="iTransAction"></param>
            <param name="dTxDate"></param>
            <param name="iTxAccountID"></param>
            <param name="cReference"></param>
            <param name="cReference2"></param>
            <param name="iTrCodeID"></param>
            <param name="cAuditNumber"></param>
            <param name="iStatusID"></param>
            <param name="iLotID"></param>
            <param name="fReservedQty"></param>
            <param name="iTxBranchID"></param>
            <param name="iBinLocationID"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.UpdateSellPrices">
            <summary>
            This class is a wrapper for the _espUpdateSellPrices stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateSellPrices.ReturnValue">
            <summary>
            Gets the return value from the _espUpdateSellPrices stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateSellPrices.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _espUpdateSellPrices stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateSellPrices.StockID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.UpdateSellPrices.Execute">
            <summary>
            This method calls the _espUpdateSellPrices stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.UpdateSellPrices.Exec(System.Data.SqlTypes.SqlInt32)">
            <summary>
            This method calls the _espUpdateSellPrices stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="stockID"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.PostARPostDateCheques">
            <summary>
            This class is a wrapper for the _espPostARPostDateCheques stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.ReturnValue">
            <summary>
            Gets the return value from the _espPostARPostDateCheques stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _espPostARPostDateCheques stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.PDCID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.TxDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.AccountID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.TrCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.TaxTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.ProjectID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.RepID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.Reference">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.Reference2">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.Description">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.OrderNo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.Inclusive">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.Exclusive">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.Tax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.DiscTrCodeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.DiscTaxTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.DiscTaxLedgerAccID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.DiscDescription">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.DiscInclusive">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.DiscExclusive">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.DiscTax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.FCInclusive">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.FCExclusive">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.FCTax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.FCDiscInclusive">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.FCDiscExclusive">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.FCDiscTax">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.ExchangeRate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.ContraLedgerAccID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.DiscContraLedgerAccID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.GLControlID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.Cancelled">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.CancellationReason">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.iVMVoucherID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostARPostDateCheques.iARAPModule">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostARPostDateCheques.Execute">
            <summary>
            This method calls the _espPostARPostDateCheques stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostARPostDateCheques.Exec(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <summary>
            This method calls the _espPostARPostDateCheques stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="pDCID"></param>
            <param name="txDate"></param>
            <param name="accountID"></param>
            <param name="trCodeID"></param>
            <param name="taxTypeID"></param>
            <param name="projectID"></param>
            <param name="repID"></param>
            <param name="reference"></param>
            <param name="reference2"></param>
            <param name="description"></param>
            <param name="orderNo"></param>
            <param name="inclusive"></param>
            <param name="exclusive"></param>
            <param name="tax"></param>
            <param name="discTrCodeID"></param>
            <param name="discTaxTypeID"></param>
            <param name="discTaxLedgerAccID"></param>
            <param name="discDescription"></param>
            <param name="discInclusive"></param>
            <param name="discExclusive"></param>
            <param name="discTax"></param>
            <param name="fCInclusive"></param>
            <param name="fCExclusive"></param>
            <param name="fCTax"></param>
            <param name="fCDiscInclusive"></param>
            <param name="fCDiscExclusive"></param>
            <param name="fCDiscTax"></param>
            <param name="exchangeRate"></param>
            <param name="contraLedgerAccID"></param>
            <param name="discContraLedgerAccID"></param>
            <param name="gLControlID"></param>
            <param name="cancelled"></param>
            <param name="cancellationReason"></param>
            <param name="iVMVoucherID"></param>
            <param name="iARAPModule"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.PostPOSDeposit">
            <summary>
            This class is a wrapper for the _retspPostPOSDeposit stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSDeposit.ReturnValue">
            <summary>
            Gets the return value from the _retspPostPOSDeposit stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSDeposit.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _retspPostPOSDeposit stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSDeposit.idInvoiceDeposits">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSDeposit.iInvoiceID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSDeposit.fDepositAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSDeposit.fUnallocatedAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSDeposit.iPostARID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSDeposit.BranchID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostPOSDeposit.Execute">
            <summary>
            This method calls the _retspPostPOSDeposit stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostPOSDeposit.Exec(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt32)">
            <summary>
            This method calls the _retspPostPOSDeposit stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="idInvoiceDeposits"></param>
            <param name="iInvoiceID"></param>
            <param name="fDepositAmount"></param>
            <param name="fUnallocatedAmount"></param>
            <param name="iPostARID"></param>
            <param name="branchID"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.PostPOSTender">
            <summary>
            This class is a wrapper for the _retspPostPOSTender stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.ReturnValue">
            <summary>
            Gets the return value from the _retspPostPOSTender stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _retspPostPOSTender stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.idPOSTender">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.iPOSTransactionID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.iTenderTypeID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.fAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cNarrative">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cCardNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cCardHolder">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.dExpiryDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cEMVApplicationID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cEMVVerification">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cEMVTrCertificate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cEMVApplLabel">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cCardType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cAuthCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.dEFTDateTime">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cEMVTSI">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cEFTBudgetPeriod">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cAuthorisationID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cInstitutionID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cTransactionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cAccountType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cE0210RespCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cE0202RespCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.bChipCard">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.cEFTReferenceNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.bManualEFT">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.fAmountForeign">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.iCurrencyID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTender.BranchID">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostPOSTender.Execute">
            <summary>
            This method calls the _retspPostPOSTender stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostPOSTender.Exec(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt64@)">
            <summary>
            This method calls the _retspPostPOSTender stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="iPOSTransactionID"></param>
            <param name="iTenderTypeID"></param>
            <param name="fAmount"></param>
            <param name="cNarrative"></param>
            <param name="cCardNumber"></param>
            <param name="cCardHolder"></param>
            <param name="dExpiryDate"></param>
            <param name="cEMVApplicationID"></param>
            <param name="cEMVVerification"></param>
            <param name="cEMVTrCertificate"></param>
            <param name="cEMVApplLabel"></param>
            <param name="cCardType"></param>
            <param name="cAuthCode"></param>
            <param name="dEFTDateTime"></param>
            <param name="cEMVTSI"></param>
            <param name="cEFTBudgetPeriod"></param>
            <param name="cAuthorisationID"></param>
            <param name="cInstitutionID"></param>
            <param name="cTransactionType"></param>
            <param name="cAccountType"></param>
            <param name="cE0210RespCode"></param>
            <param name="cE0202RespCode"></param>
            <param name="bChipCard"></param>
            <param name="cEFTReferenceNumber"></param>
            <param name="bManualEFT"></param>
            <param name="fAmountForeign"></param>
            <param name="iCurrencyID"></param>
            <param name="branchID"></param>
            <param name="idPOSTender"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.PostPOSTransaction">
            <summary>
            This class is a wrapper for the _retspPostPOSTransaction stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.ReturnValue">
            <summary>
            Gets the return value from the _retspPostPOSTransaction stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _retspPostPOSTransaction stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.idPOSTransaction">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.iTillID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.dTransactionDate">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.iAgentID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.iAgentSessionID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.iTrCodesID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.iAccountID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.iTillTxType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.cAuditNumber">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.fAmount">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.fAmountTendered">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.fAmountChange">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.BranchID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.iInvNumID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostPOSTransaction.cTenderCurrencyList">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostPOSTransaction.Execute">
            <summary>
            This method calls the _retspPostPOSTransaction stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostPOSTransaction.Exec(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt64@)">
            <summary>
            This method calls the _retspPostPOSTransaction stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="iTillID"></param>
            <param name="dTransactionDate"></param>
            <param name="iAgentID"></param>
            <param name="iAgentSessionID"></param>
            <param name="iTrCodesID"></param>
            <param name="iAccountID"></param>
            <param name="iTillTxType"></param>
            <param name="cAuditNumber"></param>
            <param name="fAmount"></param>
            <param name="fAmountTendered"></param>
            <param name="fAmountChange"></param>
            <param name="branchID"></param>
            <param name="iInvNumID"></param>
            <param name="cTenderCurrencyList"></param>
            <param name="idPOSTransaction"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities">
            <summary>
            This class is a wrapper for the _bspUpdateAttributesQuantities stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.ReturnValue">
            <summary>
            Gets the return value from the _bspUpdateAttributesQuantities stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _bspUpdateAttributesQuantities stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.StockID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.WhseID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.LotID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.BinLocationID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.xAttributeChild">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.nOldField">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.nNewField">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.bQuantify">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.Execute">
            <summary>
            This method calls the _bspUpdateAttributesQuantities stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.UpdateAttributesQuantities.Exec(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlXml,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlBoolean)">
            <summary>
            This method calls the _bspUpdateAttributesQuantities stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="stockID"></param>
            <param name="whseID"></param>
            <param name="lotID"></param>
            <param name="binLocationID"></param>
            <param name="xAttributeChild"></param>
            <param name="nOldField"></param>
            <param name="nNewField"></param>
            <param name="bQuantify"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.UpdateIBTQuantities">
            <summary>
            This class is a wrapper for the _bspUpdateIBTQuantities stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.ReturnValue">
            <summary>
            Gets the return value from the _bspUpdateIBTQuantities stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _bspUpdateIBTQuantities stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.StockID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.FromWhseID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.ToWhseID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.LotID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.BinLocationID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.Quantity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.IBTEnum">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.IsExistingIBT">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.xAttributeChild">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.Execute">
            <summary>
            This method calls the _bspUpdateIBTQuantities stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.UpdateIBTQuantities.Exec(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlDouble,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlBoolean,System.Data.SqlTypes.SqlXml)">
            <summary>
            This method calls the _bspUpdateIBTQuantities stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="stockID"></param>
            <param name="fromWhseID"></param>
            <param name="toWhseID"></param>
            <param name="lotID"></param>
            <param name="binLocationID"></param>
            <param name="quantity"></param>
            <param name="iBTEnum"></param>
            <param name="isExistingIBT"></param>
            <param name="xAttributeChild"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.ARAPBatchCreateHistory">
            <summary>
            This class is a wrapper for the _espARAPBatchCreateHistory stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.ARAPBatchCreateHistory.ReturnValue">
            <summary>
            Gets the return value from the _espARAPBatchCreateHistory stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.ARAPBatchCreateHistory.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _espARAPBatchCreateHistory stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.ARAPBatchCreateHistory.BatchID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.ARAPBatchCreateHistory.iActionType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.ARAPBatchCreateHistory.iAgentID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.ARAPBatchCreateHistory.cBatchReference">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.ARAPBatchCreateHistory.Execute">
            <summary>
            This method calls the _espARAPBatchCreateHistory stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.ARAPBatchCreateHistory.Exec(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlString)">
            <summary>
            This method calls the _espARAPBatchCreateHistory stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="batchID"></param>
            <param name="iActionType"></param>
            <param name="iAgentID"></param>
            <param name="cBatchReference"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.PostStatistics">
            <summary>
            This class is a wrapper for the _pStatistics stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStatistics.ReturnValue">
            <summary>
            Gets the return value from the _pStatistics stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStatistics.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _pStatistics stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStatistics.idStats">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStatistics.dDTStamp">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.PostStatistics.xContainer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostStatistics.Execute">
            <summary>
            This method calls the _pStatistics stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.PostStatistics.Exec(System.Data.SqlTypes.SqlInt64,System.Data.SqlTypes.SqlDateTime,System.Data.SqlTypes.SqlXml)">
            <summary>
            This method calls the _pStatistics stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="idStats"></param>
            <param name="dDTStamp"></param>
            <param name="xContainer"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.Database.BatchPermissionsNew">
            <summary>
            This class is a wrapper for the _espBatchPermissionsNew stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.BatchPermissionsNew.ReturnValue">
            <summary>
            Gets the return value from the _espBatchPermissionsNew stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.BatchPermissionsNew.RecordsAffected">
            <summary>
            Gets the number of rows changed, inserted, or deleted by execution of the _espBatchPermissionsNew stored procedure.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.BatchPermissionsNew.BatchID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.BatchPermissionsNew.BatchType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.BatchPermissionsNew.AgentPermCreated">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.BatchPermissionsNew.AgentID">
            <summary>
            
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.Database.BatchPermissionsNew.PermissionType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.BatchPermissionsNew.Execute">
            <summary>
            This method calls the _espBatchPermissionsNew stored procedure.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.Database.BatchPermissionsNew.Exec(System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlString,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32,System.Data.SqlTypes.SqlInt32)">
            <summary>
            This method calls the _espBatchPermissionsNew stored procedure.
            </summary>
            <param name="connectionString">The connection string to use</param>
            <param name="batchID"></param>
            <param name="batchType"></param>
            <param name="agentPermCreated"></param>
            <param name="agentID"></param>
            <param name="permissionType"></param>
        </member>
        <member name="M:Pastel.Evolution.Internal.SprocWrapperBase.OnBeforeExecute(System.Data.SqlClient.SqlCommand)">
            <summary>
            This gives you opportunity to tinker with parameters right before execution
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.WarehouseIBTDefaults.TransactionCode">
            <summary>Gets the default IBT transaction code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.WarehouseIBTDefaults.TransactionCodeID">
            <summary>Gets or sets the default IBT transaction code id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.WarehouseIBTDefaults.AddCostTransactionCode">
            <summary>Gets or sets the default additional supplier cost transaction code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.WarehouseIBTDefaults.AddCostTransactionCodeID">
            <summary>Gets or sets the default additional supplier cost transaction code id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.WarehouseIBTDefaults.GITWarehouseID">
            <summary>Gets the default goods in transit warehouse id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.WarehouseIBTDefaults.VarianceWarehouseID">
            <summary>Gets the default variance warehouse id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.WarehouseIBTDefaults.DamagedWarehouseID">
            <summary>Gets the default damaged goods warehouse id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.WarehouseIBTDefaults.ReceivingCost">
            <summary>Gets the default receiving cost method.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.WarehouseIBTDefaults.IsLoanAccount">
            <summary>Validate if loan accounts are enabled for ibt transfers.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.WarehouseIBTDefaults.GlobalLoanAccount">
            <summary>Gets the global general ledger loan account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.WarehouseIBTDefaults.BranchLoanAccount">
            <summary>Gets the branch general ledger loan account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.InventoryDefaults._AdjustmentTransactionCode">
            <summary>
            Gets or sets the TransactionCode.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.InventoryDefaults._AdjustmentTransactionCodeID">
            <summary>
            Gets or sets the TransactionCode ID.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Internal.AuditNoManager">
            <summary>
            Contains audit numbering functionality.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.AuditNoManager.ReserveNext">
            <summary>
            Force an (minor) increment
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.AuditNoManager.SetDirty(System.Boolean)">
            <summary>
            Acknowledges the current sequence pool as committed (false, not dirty) or rolled back (pending reset)
            </summary>
            <param name="dirty"></param>
        </member>
        <member name="T:Pastel.Evolution.Internal.EvoSqlApiBase">
            <summary>
            Base unit used by other components in the API. Presents no integration benefits to end user.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.SqlQueryBuilder.Query(System.String)">
            <summary>
            Returns a new SqlQueryBuilder instance targeting the table specified
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.SqlQueryBuilder.FieldCollection.Add(System.String,System.String)">
            <param name="field">Field name</param>
            <param name="value">Field value (when updating) or alias (when selecting)</param>
        </member>
        <member name="T:Pastel.Evolution.Internal.TaxDefaults">
            <summary>
            Represents the various tax defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.TaxDefaults.ForceClientTaxIdentification">
            <summary>Specifies whether a client's tax identification should be forced or not.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.TaxDefaults.ForceSupplierTaxIdentification">
            <summary>Specifies whether a supplier's tax identification should be forced or not.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.TaxDefaults.ValidateClientTaxIdentification">
            <summary>Validate whether a client's tax identification is in the correct format.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.TaxDefaults.ValidateSupplierTaxIdentification">
            <summary>Validate whether a supplier's tax identification is in the correct format.</summary>
        </member>
        <member name="P:Pastel.Evolution.Internal.TaxDefaults.MajorIndustryCode">
            <summary>Specifies the default major industry code. Mainly Malaysian tax purposes</summary>
        </member>
        <member name="T:Pastel.Evolution.Internal.SARSTaxValidation">
            <summary>
            Class SARSTaxValidation is a utility to validate a customer or supplier
            identification number, tax number and registration number.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.SARSTaxValidation.Modules10SARSValidID(System.String,System.String@)">
            <summary>
            Validate for a valid identification number.
            </summary>
            <param name="ANumber">Identification number.</param>
            <param name="ErrMessage">Error message to be returned.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Pastel.Evolution.Internal.SARSTaxValidation.Modules10SARSValidTax(System.String,System.String@)">
            <summary>
            Validate for a valid tax number.
            </summary>
            <param name="ANumber">Tax number.</param>
            <param name="ErrMessage">Error message to be returned.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Pastel.Evolution.Internal.SARSTaxValidation.SARSValidRegistration(System.String,System.String@)">
            <summary>
            Validate for a valid registration number.
            </summary>
            <param name="ANumber">Registration number.</param>
            <param name="ErrMessage">Error message to be returned.</param>
            <returns>True or false.</returns>
        </member>
        <member name="T:Pastel.Evolution.Internal.TaxIdentification">
            <summary>
            TaxIdentification is a class used to encapsulate the functionality of validating
            a customer or supplier identification number, tax number and registration number.  
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Internal.TaxIdentification.ValidateString(System.String,Pastel.Evolution.Internal.TaxIdentification.TValidateOptions,System.String@)">
            <summary>
            Validate the supplied string.
            </summary>
            <param name="CheckStr">The plain text string to validate.</param>
            <param name="ValidItems">Type of patern to validate on.</param>
            <param name="ErrMessage">Error message to be returned.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Pastel.Evolution.Internal.TaxIdentification.Modules10SARSValidID(System.String,System.String@)">
            <summary>
            Validate for a valid identification number.
            </summary>
            <param name="ANumber">Identification number.</param>
            <param name="ErrMessage">Error message to be returned.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Pastel.Evolution.Internal.TaxIdentification.Modules10SARSValidTax(System.String,System.String@)">
            <summary>
            Validate for a valid tax number.
            </summary>
            <param name="ANumber">Tax number.</param>
            <param name="ErrMessage">Error message to be returned.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Pastel.Evolution.Internal.TaxIdentification.SARSValidRegistration_NGORegNumValidated(System.String)">
            <summary>
            Validate for a NGO registration number.
            </summary>
            <param name="RegNumber">Registration number.</param>
            <returns>True or false.</returns>
        </member>
        <member name="M:Pastel.Evolution.Internal.TaxIdentification.SARSValidRegistration(System.String,System.String@)">
            <summary>
            Validate for a valid registration number.
            </summary>
            <param name="ANumber">Registration number.</param>
            <param name="ErrMessage">Error message to be returned.</param>
            <returns>True or false.</returns>
        </member>
        <member name="T:Pastel.Evolution.SupplierDiscMatrixHeader">
            <summary>
            Represents an Evolution supplier discount matrix header.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrixHeader.#ctor">
            <summary>Creates a new instance of a supplier discount matrix header.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrixHeader.#ctor(System.Int32)">
            <summary>Creates a new instance of a supplier discount matrix header.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrixHeader.#ctor(System.String)">
            <summary>Creates a new instance of a supplier discount matrix header.</summary>
            <param name="description">Specifies the description of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.SupplierDiscMatrixHeader.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.SupplierDiscMatrixHeader.Place">
            <summary>Gets or sets the axis code.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierDiscMatrixHeader.Position">
            <summary>Gets or sets the position.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierDiscMatrixHeader.Description">
            <summary>Gets or sets the description.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrixHeader.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrixHeader.FindByDescription(System.String)">
            <summary>Attempts to find a discount matrix header by its description and returns its ID.</summary>
            <param name="description">The description used to lookup the record.</param>
            <seealso cref="M:Pastel.Evolution.SupplierDiscMatrixHeader.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrixHeader.Get(System.String)">
            <summary>Returns the [first] group object with the description specified; otherwise, returns null.</summary>
            <param name="criteria"> Eg. Description like '1_B%'</param>
            <seealso cref="M:Pastel.Evolution.SupplierDiscMatrixHeader.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrixHeader.GetByDescription(System.String)">
            <summary>Returns a discount matrix header object corresponding to the description specified; otherwise, returns null.</summary>
            <param name="description">Specifies the description.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrixHeader.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrixHeader.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrixHeader.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.SupplierDiscMatrix">
            <summary>
            Represents an Evolution supplier discount matrix catalog.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrix.#ctor">
            <summary>Creates a new instance of a supplier discount matrix catalog.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrix.#ctor(System.Int32)">
            <summary>Creates a new instance of a supplier discount matrix catalog.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrix.#ctor(System.Int32,System.Int32)">
            <summary>Creates a new instance of a supplier discount matrix catalog.</summary>
            <param name="xPosition">Specifies the X-position of the existing record.</param>
            <param name="yPosition">Specifies the Y-position of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.SupplierDiscMatrix.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.SupplierDiscMatrix.XPosition">
            <summary>Gets or sets the x position.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierDiscMatrix.YPosition">
            <summary>Gets or sets the y position.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierDiscMatrix.Percentage">
            <summary>Gets or sets the description.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrix.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Pastel.Evolution.SupplierDiscMatrix.FindByPosition(System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Pastel.Evolution.SupplierDiscMatrix.Get(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Pastel.Evolution.SupplierDiscMatrix.GetByPosition(System.Int32,System.Int32)" -->
        <member name="M:Pastel.Evolution.SupplierDiscMatrix.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrix.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrix.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.SupplierDiscMatrix.PurchasesDiscMatrixOwner">
            <summary>
            Represents a owner of a discount matrix column and row.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierDiscMatrix.PurchasesDiscMatrixOwner.#ctor(System.String,System.String)">
            <summary>Creates a new instance of a purchases discount matrix owner.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierDiscMatrix.PurchasesDiscMatrixOwner.XPos">
            <summary>Gets or sets the x position. Representing the discount matrix row pertaining to a supplier.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierDiscMatrix.PurchasesDiscMatrixOwner.YPos">
            <summary>Gets or sets the y position. Representing the discount matrix column pertaining to an inventory item.</summary>
        </member>
        <member name="T:Pastel.Evolution.Supplier">
            <summary>
            Represents a supplier account.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Supplier.#ctor">
            <summary>Creates a new instance of a supplier account.</summary>
        </member>
        <member name="M:Pastel.Evolution.Supplier.#ctor(System.Int32)">
            <summary>Creates a new instance of a supplier account.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Supplier.#ctor(System.String)">
            <summary>Creates a new instance of a supplier account.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Title">
            <summary>Gets or sets the account's title.</summary>
            <summary>Gets or sets the account's title.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.IDNumber">
            <summary>Gets or sets the account's id number.</summary>
            <summary>Gets or sets the id number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Initials">
            <summary>Gets or sets the account's initials.</summary>
            <summary>Gets or sets the initials.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.ContactPerson">
            <summary>Gets or sets the account's contact person.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.PhysicalAddress">
            <summary>Gets or sets the account's physical address.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Addressee">
            <summary>Gets or sets the account's addressee.</summary>
            <remarks>This would generally be the same as the account description,except where the company name will not be useful in locating the recipient when shipping letters/statements.</remarks>
            <seealso cref="P:Pastel.Evolution.Supplier.DeliverTo" />
        </member>
        <member name="P:Pastel.Evolution.Supplier.PostalAddress">
            <summary>Gets or sets the account's postal address.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.DeliverTo">
            <summary>Gets or sets the account's addressee.</summary>
            <remarks>This would generally be the same as the account description,except where the company name will not be useful in locating the recipientwhen shipping goods.</remarks>
            <seealso cref="P:Pastel.Evolution.Supplier.Addressee" />
        </member>
        <member name="P:Pastel.Evolution.Supplier.Telephone">
            <summary>Gets or sets the telephone number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Telephone2">
            <summary>Gets or sets the 2nd telephone number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Fax1">
            <summary>Gets or sets the fax number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Fax2">
            <summary>Gets or sets the 2nd fax number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.AccountTerms">
            <summary>Gets or sets the account terms.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.ChargeTax">
            <summary>Gets or sets the account's taxable status.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.DefaultTaxRate">
            <summary>Gets or sets the account's default tax rate.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.DefaultTaxRateID">
            <summary>Gets or sets the account's default tax rate id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.TaxNumber">
            <summary>Gets or sets the tax number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Registration">
            <summary>Gets or sets the registration number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.CreditLimit">
            <summary>Gets or sets the credit limit.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.InterestRate">
            <summary>Gets or sets the account's interest rate.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.SettlementDiscountPercent">
            <summary>Gets or sets the account's settlement discount percentage.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.IsOnHold">
            <summary>Gets or sets whether or not the account is on hold.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.BalanceBroughtForward">
            
        </member>
        <member name="P:Pastel.Evolution.Supplier.EmailAddress">
            <summary>Gets or sets the account's email address.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.BankID">
            <summary>Gets or sets the account's bank id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Bank">
            <summary>Gets or sets the account's bank.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.BankBranchCode">
            <summary>Gets or sets the account's bank branch code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.BankAccountNo">
            <summary>Gets or sets the account's bank account number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.BankAccountType">
            <summary>Gets or sets the account's bank account type.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.AutomaticDiscount">
            <summary>Gets or sets the account's automatic discount percentage.</summary>
            <remarks>Acceptable values : 0 - 100.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Supplier.DiscountMatrixRow">
            <summary>Gets or sets the account's discount matrix row.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.AccountBalance">
            <summary>Gets the account's current balance.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.CheckTerms">
            <summary>Gets or sets whether or not the account's terms will be checked before posting a transaction.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.UseEmail">
            <summary>Gets or sets the account's use email.</summary>
            <remarks>This field's use is largely deprecated.</remarks>
            <seealso cref="P:Pastel.Evolution.Supplier.EmailRemittance" />
            <seealso cref="P:Pastel.Evolution.Supplier.StatementZipPassword" />
        </member>
        <member name="P:Pastel.Evolution.Supplier.BusinessTypeID">
            <summary>Gets or sets the account's business type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.BusinessType">
            <summary>Gets or sets the account's business type.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.BusinessClassID">
            <summary>Gets or sets the account's business class id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.BusinessClass">
            <summary>Gets or sets the account's business class.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.CountryID">
            <summary>Gets or sets the account's country id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Country">
            <summary>Gets or sets the account's country.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.AccountDescription">
            <summary>Gets or sets the account's account description.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Webpage">
            <summary>Gets or sets the account's website address.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Timestamp">
            <summary>Gets the account's timestamp.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.GroupID">
            <summary>Gets or sets the account's group id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Group">
            <summary>Gets or sets the account's group.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.AreasID">
            <summary>Gets or sets the account's area id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Areas">
            <summary>Gets or sets the account's area.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.BankReferenceNo">
            <summary>Gets or sets the account's bank reference number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.CurrencyID">
            <summary>Gets or sets the account's currency id. 0 indicates local currency.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Currency">
            <summary>Gets or sets the account's currency. null indicates home currency.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.PrintRemittance">
            <summary>Gets or sets the whether or not the account requires a printed statement.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.EmailRemittance">
            <summary>Gets or sets the whether or not the account requires an emailed statement.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.StatementZipPassword">
            <summary>Gets or sets the account's emailed statement's zip password.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.IsForeignCurrencyAccount">
            <summary>Whether or not the account is a foreign currency account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.AutoPaymentMethod">
            <summary>Gets or sets the account's automatic payment method.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.ForeignAccountBalance">
            <summary>Gets the account's foreign account balance.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.DiscMtrxID">
            <summary>Gets or sets the ID of the discount matrix row associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.DiscountMatrix">
            <summary>Gets or sets the account's discount matrix row .Gets or sets the discount matrix record associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Module">
            <summary>Gets the account's Evolution module.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Code">
            <summary>Gets or sets the account's code.</summary>
            <remarks>This maps to the account field in Evolution.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Description">
            <summary>Gets or sets the account's description.</summary>
            <remarks>This maps to the account's name in Evolution.</remarks>
        </member>
        <member name="M:Pastel.Evolution.Supplier.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria"> Eg. Account = 'CASH001' or Name like '%CASH%'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Supplier.FindByCode(System.String)">
            <summary>Finds the database ID of a record matching the specified code.</summary>
            <param name="code">Specifies the code.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Supplier.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria"> Eg. Account = 'CASH001' or Name like '%CASH%'</param>
            <seealso cref="M:Pastel.Evolution.Supplier.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.Supplier.GetByCode(System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.Supplier.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Supplier.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.Supplier.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.Supplier.LinkedInventory">
            <summary>Gets the stock item's linked supplier collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.Supplier.Active">
            <summary>Gets or sets the record's operational state.</summary>
        </member>
        <member name="M:Pastel.Evolution.Supplier.SetUserField(System.String,System.Object)">
            <summary> Sets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <param name="fieldValue">Specifies the user defined field value.</param>
        </member>
        <member name="M:Pastel.Evolution.Supplier.GetUserField(System.String)">
            <summary> Gets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <returns>The user defined field value.</returns>
        </member>
        <member name="T:Pastel.Evolution.SupplierBatch">
            <summary>
            Represents an Evolution supplier batch.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierBatch.#ctor">
            <summary>Creates a new instance of a supplier batch.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierBatch.#ctor(System.Int32)">
            <summary>Creates a new instance of a supplier batch.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SupplierBatch.#ctor(System.String)">
            <summary>Creates a new instance of a supplier batch.</summary>
            <param name="batchNumber">Specifies the batch number of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SupplierBatch.#ctor(System.String,System.String)">
            <summary>Creates a new instance of a supplier batch.</summary>
            <param name="batchNumber">Specifies the batch number of the existing record.</param>
            <param name="batchRef">Specifies the batch reference number of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SupplierBatch.Find(System.String)">
            <summary>Finds and returns the id of the first batch matching the supplied criteria. E.g. cBatchNumber = 'ARB001'</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierBatch.FindByNumber(System.String)">
            <summary>Attempts to find a supplier batch by its batch number and returns its ID.</summary>
            <param name="number">The number used to lookup the batch.</param>
            <seealso cref="M:Pastel.Evolution.SupplierBatch.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first batch matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierBatch.Get(System.Int32)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="id">The id passed to the SQL query.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierBatch.List(System.String)">
            <summary>Lists all batches for the supplied criteria.</summary>
            <remarks>Pseudo-tables: Core, Supplier</remarks>
            <param name="criteria">E.g. Supplier.Account = 'SUP001' and (OrderNum = 'SO209302')</param>
        </member>
        <member name="T:Pastel.Evolution.SupplierGroup">
            <summary>
            Represents a supplier group.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierGroup.#ctor">
            <summary>Creates a new instance of  a group.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierGroup.#ctor(System.Int32)">
            <summary>Creates a new instance of  a group.</summary>
            <param name="id">The ID of the group in the database.</param>
        </member>
        <member name="M:Pastel.Evolution.SupplierGroup.#ctor(System.String)">
            <summary>Creates a new instance of  a group.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SupplierGroup.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierGroup.FindByCode(System.String)">
            <summary>Attempts to find an AR group by its code and returns its ID.</summary>
            <param name="code">The account code used to lookup the account.</param>
            <seealso cref="M:Pastel.Evolution.SupplierGroup.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierGroup.Get(System.String)">
            <summary>Returns the [first] group object with the account code specified; otherwise, returns null.</summary>
            <param name="criteria"> Eg. Code like '1_B%'</param>
            <seealso cref="M:Pastel.Evolution.SupplierGroup.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierGroup.GetByCode(System.String)">
            <summary>Returns a group object corresponding to the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierGroup.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierGroup.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.SupplierGroup.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.Code">
            <summary>Gets or sets the group's code.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.Description">
            <summary>Gets or sets the group description.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.DiscountMatrixRow">
            <summary>Gets or sets the group's discount matrix row.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.TimeStamp">
            <summary>Gets or sets the group's modification timestamp.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.ControlAccountID">
            <summary>Gets or sets the group's override control account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.ControlAccount">
            <summary>Gets or sets the group's override control account.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.TaxControlAccountID">
            <summary>Gets or sets the group's override tax control account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.TaxControlAccount">
            <summary>Gets or sets the group's override tax control account.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.ForeignProfitAccountID">
            <summary>Gets or sets the group's foreign profit account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.ForeignLossAccountID">
            <summary>Gets or sets the group's foreign loss account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.DiscMtrxID">
            <summary>Gets or sets the ID of the discount matrix row associated with the group.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierGroup.DiscountMatrix">
            <summary>Gets or sets the group's discount matrix row .Gets or sets the discount matrix record associated with the group.</summary>
        </member>
        <member name="T:Pastel.Evolution.SupplierTransaction">
            <summary>Represents a supplier transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierTransaction.#ctor">
            <summary>Creates a new instance of  a supplier transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierTransaction.#ctor(System.Int64)">
            <summary>Creates a new instance of  a supplier transaction.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SupplierTransaction.CalculateTax">
            <summary>Calculates the tax amount on the transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierTransaction.CalculateTaxSplits">
            <summary>Calculates the tax amount from split allocations.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Module">
            <summary>Gets the Evolution module this record belongs to, used in internal validation.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Account">
            <summary>Gets or sets the Account to which the transaction gets posted. This is a mandatory field.</summary>
            <seealso cref="P:Pastel.Evolution.SupplierTransaction.Supplier" />
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Supplier">
            <summary>Gets or sets the transaction's supplier account (maps directly to Account).</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.AccountID">
            <summary>Gets or sets the ID of the Account to which the transaction gets posted.</summary>
            <seealso cref="P:Pastel.Evolution.SupplierTransaction.Account" />
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Date">
            <summary>Gets or sets the date on which the transaction takes place. This often differs from the actual posting date but defaults to the <i>current</i> date.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.TransactionCode">
            <summary>Gets or sets the <see cref="P:Pastel.Evolution.SupplierTransaction.TransactionCode"/> record associated with this transaction, as maintained in Accounts Payable > Maintenance > Transaction Types.  Transaction codes/types govern General Ledger integration. This is a mandatory field.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.TransactionCodeID">
            <summary>Gets or sets the ID of the <see cref="P:Pastel.Evolution.SupplierTransaction.TransactionCode"/> record associated with this transaction, which governs General Ledger integration.</summary>
            <seealso cref="P:Pastel.Evolution.SupplierTransaction.TransactionCode" />
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.OrderNo">
            <summary>Gets or sets the transaction order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.ExtOrderNo">
            <summary>Gets or sets the transaction's external order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Project">
            <summary>Gets or sets the <see cref="P:Pastel.Evolution.SupplierTransaction.Project"/> record associated with this transaction. When using Project Tracking, this field must be specified whereverapplicable.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.ProjectID">
            <summary>Gets or sets the ID of the <see cref="P:Pastel.Evolution.SupplierTransaction.Project"/> record associated with this transaction. When using Project Tracking, this field must be specified wherever applicable.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Description">
            <summary>Gets or sets the transaction description that - togeter with the <see cref="P:Pastel.Evolution.SupplierTransaction.Reference"/> - appears on the account's statement by default. This is a mandatory field.</summary>
            <remarks>The <see cref="P:Pastel.Evolution.SupplierTransaction.Reference"/> is usually a sequencial code whereas the description is more general, e.g. a transaction might have the reference "PMB128901" and the description "Payment - Thank You".</remarks>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Outstanding">
            <summary>Gets the transaction's outstanding amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.ForeignOutstanding">
            <summary>Gets the transaction's foreign outstanding amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Reference">
            <summary>Gets or sets the transaction reference that - together with the <see cref="P:Pastel.Evolution.SupplierTransaction.Description"/> - appears on the customer statement by default. This is a mandatory field.</summary>
            <remarks>The <see cref="P:Pastel.Evolution.SupplierTransaction.Reference"/> is usually quite "cryptic" (numbered sequenceetc.) whereas the description is more friendly, e.g. a transaction might have thereference "PMB128901" and the description "Payment - Thank You".</remarks>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Reference2">
            <summary>Gets or sets an additional transaction reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Debit">
            <summary>
            Gets the transaction's debit value, the value of which is determined by the
            <see cref="P:Pastel.Evolution.SupplierTransaction.Amount"/> and <see cref="P:Pastel.Evolution.SupplierTransaction.TransactionCode"/> properties.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.ForeignDebit">
            <summary>Gets the transaction's foreign debit value, which is determined by the <see cref="P:Pastel.Evolution.SupplierTransaction.ForeignAmount"/> and <see cref="P:Pastel.Evolution.SupplierTransaction.TransactionCode"/> properties.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Credit">
            <summary>
            Gets the transaction's credit value, the value of which is determined by the
            <see cref="P:Pastel.Evolution.SupplierTransaction.Amount"/> and <see cref="P:Pastel.Evolution.SupplierTransaction.TransactionCode"/> properties.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.ForeignCredit">
            <summary>Gets the transaction's foreign credit value, which is determined by the <see cref="P:Pastel.Evolution.SupplierTransaction.ForeignAmount"/> and <see cref="P:Pastel.Evolution.SupplierTransaction.TransactionCode"/> properties.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.TaxRate">
            <summary>
            Gets or sets the <see cref="P:Pastel.Evolution.SupplierTransaction.TaxRate"/> record associated with this
            transaction. If a tax type is specified, a tax amount is automatically calculated, but
            can be overridden.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Tax">
            <summary>
            Gets or sets the transaction tax amount (automatically rounded to 2 decimals).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.ForeignTax">
            <summary>
            Gets or sets the transaction foreign tax amount (automatically rounded to 2 decimals). Note that setting this will switch the entry mode to foreign and recalculate the Amount property.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Audit">
            <summary>Gets the transaction's audit number.</summary>
            <remarks>The audit number is 0 when unposted.  After posting, it will reflect the transaction's posted audit number.</remarks>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.ModID">
            <summary>Gets or sets the transaction's evolution module id.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Currency">
            <summary>
            Gets the foreign currency in use on this transaction, determined by the specified account.  A null value indicates local currency.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Amount">
            <summary>Gets or sets the (gross) transaction value.  Negative values are allowed and will result in inverted debits and credits.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.ForeignAmount">
            <summary>
            Gets or sets the foreign transaction value.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.SplitAllocations">
            <summary>Gets the transaction's split allocation collection, used to split the contra account posting to various GL accounts.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.Allocations">
            <summary>Gets the transaction's allocation collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.SplitTaxAllocations">
            <summary>Gets the transaction's split tax allocation collection, used to split the tax account posting to various GL accounts.</summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.OverrideCreditAccount">
            <summary>
            Gets or sets the GL account to use when posting the transaction's credit leg, overriding the credit account configured in the transaction type.
            When posting a debit transaction, the credit account will actually be debited; I.e. this represents the creditors control account.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SupplierTransaction.OverrideDebitAccount">
            <summary>
            Gets or sets the GL account to use when posting the transaction's debit leg, overriding the debit account configured in the transaction type.
            When posting a debit transaction, the debit account will actually be credited.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SupplierTransaction.List(System.String)">
            <summary>
            Returns a System.Data.DataTable object containing the database records from the PostAR table matching the supplied criteria.
            </summary>
            <param name="criteria">The SQL criteria used to locate the record, e.g. <c>Reference like '1___'</c></param>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to include 
            the single quotes around string literals and append additional criteria with <c>and</c>.</remarks>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierTransaction.List(Pastel.Evolution.AccountBase,System.String)">
            <summary>
            Returns a System.Data.DataTable object containing the database records from the PostAR/PostAP table matching the supplied criteria and 
            limited to the specified account.
            </summary>
            <param name="account">The supplier account by which to filter the transaction list.</param>
            <param name="criteria">The SQL criteria used to locate the record, e.g. <c>Reference like '1___'</c></param>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to include 
            the single quotes around string literals and append additional criteria with <c>and</c>.</remarks>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierTransaction.Find(System.String)">
            <summary>
            Finds a transaction ID.
            </summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. Reference = 'INV001' or Description like '%Invoice%'</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.SupplierTransaction.Find(Pastel.Evolution.AccountBase,System.String)">
            <summary>
            Finds a transaction ID.
            </summary>
            <param name="account">The supplier account by which to filter the transaction list.</param>
            <param name="criteria">The criteria passed to the SQL query.  Eg. Reference = 'INV001' or Description like '%Invoice%'</param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.Area">
            <summary>
            Represents a geographical area to which accounts can be linked.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Area.#ctor">
            <summary>Creates a new instance of the Area class.</summary>
        </member>
        <member name="M:Pastel.Evolution.Area.#ctor(System.Int32)">
            <summary>Creates a new instance of an existing Area record.</summary>
            <param name="id">The ID of the existing Area.</param>
            <exception cref="T:Pastel.Evolution.EvolutionException">Specified ID does not exist in the database.</exception>
        </member>
        <member name="M:Pastel.Evolution.Area.#ctor(System.String)">
            <summary>Creates a new instance of the Area class.</summary>
            <param name="code">Specifies the area code.</param>
        </member>
        <member name="M:Pastel.Evolution.Area.Find(System.String)">
            <summary>Finds the ID of an existing area.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Area.OnSave">
            <summary>
            Persists the record to the database.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Area.OnDelete">
            <summary>
            Removes the record from the database, provided it is not referenced by other records.
            </summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException"/>
        </member>
        <member name="M:Pastel.Evolution.Area.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.Area.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Area.Description">
            <summary>
            Gets or sets the area description.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AgentGroup">
            <summary>
            Represents an group.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.AgentGroup.#ctor">
            <summary>Creates a new instance of the agent group class.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentGroup.#ctor(System.Int32)">
            <summary>Creates a new instance of the agent group class.</summary>
            <param name="id">The group ID in the database.</param>
            <exception cref="T:Pastel.Evolution.EvolutionException">ID does not exist in the database.</exception>
        </member>
        <member name="M:Pastel.Evolution.AgentGroup.#ctor(System.String)">
            <summary>Creates a new instance of the agent group class.</summary>
            <param name="name">The group login name in the database.</param>
        </member>
        <member name="M:Pastel.Evolution.AgentGroup.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentGroup.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentGroup.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentGroup.Find(System.String)">
            <summary>Finds an group account ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentGroup.FindByName(System.String)">
            <summary>
            Attempts to find an group by its code and returns its ID.
            </summary>
            <param name="name">The name used to lookup the agent group.</param>
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.AgentGroup.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.AgentGroup.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.</param>
            <seealso cref="M:Pastel.Evolution.AgentGroup.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.AgentGroup.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.AgentGroup.GetByName(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentGroup.GetByName(System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="name">Specifies the group name.</param>
            <seealso cref="M:Pastel.Evolution.AgentGroup.Get(System.String)" />
            <seealso cref="M:Pastel.Evolution.AgentGroup.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.AgentGroup.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.AgentGroup.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentGroup.Name">
            <summary>Gets or sets the group name.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentGroup.Description">
            <summary>Gets or sets the group's description.</summary>
        </member>
        <member name="T:Pastel.Evolution.Customer">
            <summary>
            Represents a customer account.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Customer._Refresh">
            <summary>
            Experimental method.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Customer.#ctor">
            <summary>Creates a new instance of  a customer account.</summary>
        </member>
        <member name="M:Pastel.Evolution.Customer.#ctor(System.Int32)">
            <summary>Creates a new instance of  a customer account.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Customer.#ctor(System.String)">
            <summary>Creates a new instance of  a customer account.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.Customer.Item(System.String)">
            <summary>Gets an account object possessing the given code.</summary>
            <returns>The account matching the supplied code.</returns>
            <exception cref="T:Pastel.Evolution.RecordNotExistsException"/>
        </member>
        <member name="P:Pastel.Evolution.Customer.Title">
            <summary>Gets or sets the account's title (Mr., Mrs. etc.) if the account represents a person.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Initials">
            <summary>Gets or sets the account's initials if the account represents a person.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.ContactPerson">
            <summary>Gets or sets the account's contact person.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.DefaultDeliveryAddress">
            <summary>Gets the account's default delivery address.  A new address is created on the fly if one does not exist.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.PhysicalAddress">
            <summary>Gets or sets the account's physical address.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Addressee">
            <summary>Gets or sets the account's addressee.</summary>
            <remarks>This would generally be the same as the account description,except where the company name will not be useful in locating the recipientwhen shipping letters/statements.</remarks>
            <seealso cref="P:Pastel.Evolution.Customer.DeliverTo" />
        </member>
        <member name="P:Pastel.Evolution.Customer.PostalAddress">
            <summary>Gets or sets the account's physical address.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.DeliverTo">
            <summary>Gets or sets the account's addressee.</summary>
            <remarks>This would generally be the same as the account description,except where the company name will not be useful in locating the recipientwhen shipping goods.</remarks>
            <seealso cref="P:Pastel.Evolution.Customer.Addressee" />
        </member>
        <member name="P:Pastel.Evolution.Customer.Telephone">
            <summary>Gets or sets the account's primary telephone number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Telephone2">
            <summary>Gets or sets the account's secondary telephone number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.CellPhone">
            <summary>Gets or sets the mobile number associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Fax">
            <summary>Gets or sets the account's fax number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.AccountTerms">
            <summary>Gets or sets the account terms. (temporary property)</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.ChargeTax">
            <summary>Gets or sets whether or not to charge the account VAT.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.DefaultTaxRate">
            <summary>Gets or sets the account's default tax rate.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.DefaultTaxRateID">
            <summary>Gets or sets the account's default tax rate id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.TaxNumber">
            <summary>Gets or sets the account's VAT number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Registration">
            <summary>Gets or sets the account's registration (company, CC, etc.) number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.CreditLimit">
            <summary>Gets or sets the account's credit limit.</summary>
            <remarks>Generally, once an account reaches its credit limit, nofurther sales are allowed.  This is not enforced by the SDK and needs tobe checked by calling application if required.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Customer.SalesRepID">
            <summary>Gets or sets the sales representative ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.InterestRate">
            <summary>Gets or sets the account's interest rate as used by the interest charging utilityin Evolution (valid values: 0-100).</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.SettlementDiscount">
            <summary>Gets or sets the settlement discount percentage applied when receiving payments through the Evolution front-end (valid values: 0-100).</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.IsOnHold">
            <summary>Gets or sets whether or not the account is on hold.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.AgingTermID">
            <summary>Gets or sets ID of the customer aging terms associated with the account.</summary>
            <summary>Gets or sets ID of the customer aging terms associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.AgingTerm">
            <summary>Gets or sets the customer aging terms associated with the account.</summary>
            <summary>Gets or sets the customer aging terms associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.EmailAddress">
            <summary>Gets or sets the email address associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.BankID">
            <summary>Gets or sets the ID of the bank record associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Bank">
            <summary>Gets or sets the bank associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.BankBranchCode">
            <summary>Gets or sets the account's bank branch code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.BankAccountNo">
            <summary>Gets or sets the account's bank account number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.BankAccountType">
            <summary>Gets or sets the account's bank account type.</summary>
            <summary>Gets or sets the account's bank account type.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.AutomaticDiscount">
            <summary>Gets or sets the discount percentage (valid values: 0-100) automatically appliedto inventory documents.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.MainAccountID">
            <summary>Gets the main account's ID (0 if none)</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.MainAccount">
            <summary>Gets or sets the account's main account.</summary>
            <remarks>The main account relates to the customer account consolidationmodule which the transactions from one or more debtor accounts under a single main account</remarks>
        </member>
        <member name="P:Pastel.Evolution.Customer.IsCashDebtor">
            <summary>Gets or sets whether the account is a cash debtor.</summary>
            <remarks>Cash debtors are handled slightly differently to other accounts by Evolution.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Customer.AccountBalance">
            <summary>Gets the current balance on the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.CheckTerms">
            <summary>Gets or sets whether or not to check the terms on the account before posting debit transactions.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.UseEmail">
            <summary>Gets or sets whether or not to use the account's e-mail address.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.DefaultIncidentTypeID">
            <summary>Gets or sets the account's default incident type ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.BusinessTypeID">
            <summary>Gets or sets the account's business type ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.BusinessType">
            <summary>Gets or sets the account's business type.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.BusinessClassID">
            <summary>Gets or sets the account's business class ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.BusinessClass">
            <summary>Gets or sets the account's business class.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.CountryID">
            <summary>Gets or sets the ID of the country associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Country">
            <summary>Gets or sets the account's country.Gets or sets the country record associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.AgentID">
            <summary>Gets or sets the ID of the agent associated withthe account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Timestamp">
            <summary>Gets the date/time on which the account was last modified.</summary>
            <summary>Gets the date/time on which the account was last modified.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.AccountDescription">
            <summary>Gets or sets an additional description on the account.</summary>
            <seealso cref="P:Pastel.Evolution.Customer.Description" />
        </member>
        <member name="P:Pastel.Evolution.Customer.Webpage">
            <summary>Gets or sets the web address associated with the account.</summary>
            <summary>Gets or sets the web address associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.GroupID">
            <summary>Gets or sets ID of the customer group associated with the account.</summary>
            <summary>Gets or sets ID of the customer group associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Group">
            <summary>Gets or sets the customer group associated with the account.</summary>
            <summary>Gets or sets the customer group associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.AreaID">
            <summary>Gets or sets the ID of the Area record associated with the account.</summary>
            <summary>Gets or sets the ID of the Area record associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Area">
            <summary>Gets or sets the account's area.</summary>
            <summary>Gets or sets the Area record associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.BankReferenceNo">
            <summary>Gets or sets the reference number to use in bank transaction exports etc.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.CurrencyID">
            <summary>Gets or sets the account's currency id. 0 indicates local currency.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Currency">
            <summary>Gets or sets the account's currency. A null value indicates home currency.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.PrintStatement">
            <summary>Gets or sets whether or not the customer account requires a physical statement.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.EmailStatement">
            <summary>Gets or sets whether or not the customer account's statement should be emailed.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.EmailSourceDocument">
            <summary>Gets or sets whether or not the customer's source documents should be emailed.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.PrintSourceDocument">
            <summary>Gets or sets whether or not the customer's source documents should be printed.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.ElectronicDocumentAcceptance">
            <summary>Gets or sets whether or not the customer accepts electronic invoices as originals.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.StatementZipPassword">
            <summary>Gets or sets the password to the zip file when emailing and zipping a statement.  Passed as clear text but encrypted in the database.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.IsForeignCurrencyAccount">
            <summary>Gets or sets whether the account transacts in a foreign currency.</summary>
            <remarks>False for home-currency accounts, true for other currencies.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Customer.ForeignAccountBalance">
            <summary>Gets the current balance on the account in its foreign currency.</summary>
            <remarks>For local accounts, this balance is the same as the <see cref="P:Pastel.Evolution.Customer.AccountBalance"/>.</remarks>
            <seealso cref="P:Pastel.Evolution.Customer.Currency" />
            <seealso cref="P:Pastel.Evolution.Customer.IsForeignCurrencyAccount" />
        </member>
        <member name="P:Pastel.Evolution.Customer.PromptTaxNumber">
            <summary>Gets or sets whether or not a prompt should be raised when selling to this account when it does not have a <see cref="P:Pastel.Evolution.Customer.TaxNumber"/> specified.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.DiscMtrxID">
            <summary>Gets or sets the ID of the discount matrix row associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.DiscountMatrix">
            <summary>Gets or sets the account's discount matrix row .Gets or sets the discount matrix record associated with the account.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.Module">
            <summary>Gets the Evolution module this record belongs to,  Used in internal validation.</summary>
        </member>
        <member name="P:Pastel.Evolution.Customer.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Customer.Code">
            <summary>Gets or sets the account's code.</summary>
            <remarks>This field maps to the Account database field. This is a mandatory field.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Customer.Description">
            <summary>Gets or sets the account's name.</summary>
        </member>
        <member name="M:Pastel.Evolution.Customer.Find(System.String)">
            <summary>Finds a customer account ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. Account = 'CASH001' or Name like '%CASH%'</param>
        </member>
        <member name="M:Pastel.Evolution.Customer.FindByCode(System.String)">
            <summary>Attempts to find an AR account by its account code and returns its ID.</summary>
            <param name="code">The account code used to lookup the account.</param>
            <seealso cref="M:Pastel.Evolution.Customer.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.Customer.Get(System.String)">
            <summary>Returns the [first] customer object matching the criteria specified; otherwise, returns null.</summary>
            <param name="criteria"> Eg. Account = 'CASH001' or Name like '%CASH%'</param>
            <seealso cref="M:Pastel.Evolution.Customer.Find(System.String)" />
        </member>
        <member name="M:Pastel.Evolution.Customer._Select(System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Customer.GetByCode(System.String)">
            <summary>Returns a customer object corresponding to the code specified; otherwise, returns null.</summary>
            <param name="code">
            </param>
        </member>
        <member name="M:Pastel.Evolution.Customer.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Customer.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.Customer.List(System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the Client table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Account like '1___'</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.Customer.List(System.String,System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the Client table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Account like '1___'</param>
            <param name="sortOrder">The SQL order by clause to use, e.g. DCBalance desc, Account</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="P:Pastel.Evolution.Customer.Active">
            <summary>Gets or sets the account's operational state.</summary>
            <remarks>Inactive records cannot be used when posting transactions.</remarks>
        </member>
        <member name="M:Pastel.Evolution.Customer.SetUserField(System.String,System.Object)">
            <summary> Sets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <param name="fieldValue">Specifies the user defined field value.</param>
        </member>
        <member name="M:Pastel.Evolution.Customer.GetUserField(System.String)">
            <summary> Gets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <returns>The user defined field value.</returns>
        </member>
        <member name="T:Pastel.Evolution.CustomerBatch">
            <summary>
            Represents an Evolution customer batch.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerBatch.#ctor">
            <summary>Creates a new instance of a customer batch.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerBatch.#ctor(System.Int32)">
            <summary>Creates a new instance of a customer batch.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CustomerBatch.#ctor(System.String)">
            <summary>Creates a new instance of a customer batch.</summary>
            <param name="batchNumber">Specifies the batch number of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CustomerBatch.#ctor(System.String,System.String)">
            <summary>Creates a new instance of a customer batch.</summary>
            <param name="batchNumber">Specifies the batch number of the existing record.</param>
            <param name="batchRef">Specifies the batch reference number of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CustomerBatch.Find(System.String)">
            <summary>Finds and returns the id of the first batch matching the supplied criteria. E.g. cBatchNumber = 'ARB001'</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerBatch.FindByNumber(System.String)">
            <summary>Attempts to find a customer batch by its batch number and returns its ID.</summary>
            <param name="number">The number used to lookup the batch.</param>
            <seealso cref="M:Pastel.Evolution.CustomerBatch.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first batch matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerBatch.Get(System.Int32)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="id">The id passed to the SQL query.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerBatch.List(System.String)">
            <summary>Lists all batches for the supplied criteria.</summary>
            <remarks>Pseudo-tables: Core, Customer</remarks>
            <param name="criteria">E.g. Customer.Account = 'CASH001' and (OrderNum = 'SO209302')</param>
        </member>
        <member name="T:Pastel.Evolution.CustomerGroup">
            <summary>
            Represents a customer group.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerGroup.#ctor">
            <summary>Creates a new instance of  a group.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerGroup.#ctor(System.Int32)">
            <summary>Creates a new instance of  a group.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CustomerGroup.#ctor(System.String)">
            <summary>Creates a new instance of  a group.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CustomerGroup.Find(System.String)">
            <summary>Returns the id of the first record found matching the criteria. Eg. code = 'abc'</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>ID of the record found; if not found, -1</returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerGroup.FindByCode(System.String)">
            <summary>Attempts to find an AR group by its code and returns its ID.</summary>
            <param name="code">The account code used to lookup the account.</param>
            <seealso cref="M:Pastel.Evolution.CustomerGroup.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerGroup.Get(System.String)">
            <summary>Returns the [first] group object with the account code specified; otherwise, returns null.</summary>
            <param name="criteria"> Eg. Code like '1_B%'</param>
            <seealso cref="M:Pastel.Evolution.CustomerGroup.Find(System.String)" />
        </member>
        <member name="M:Pastel.Evolution.CustomerGroup.GetByCode(System.String)">
            <summary>Returns a group object corresponding to the code specified; otherwise, returns null.</summary>
            <param name="code">
            </param>
        </member>
        <member name="M:Pastel.Evolution.CustomerGroup.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerGroup.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.CustomerGroup.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.Code">
            <summary>Gets or sets the group's code.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.Description">
            <summary>Gets or sets the group description.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.DiscountMatrixRow">
            <summary>Gets or sets the group's discount matrix row.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.TimeStamp">
            <summary>Gets or sets the group's modification timestamp.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.ControlAccountID">
            <summary>Gets or sets the group's control account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.ControlAccount">
            <summary>Gets or sets the group's override GL account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.TaxControlAccountID">
            <summary>Gets or sets the group's tax control account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.TaxControlAccount">
            <summary>Gets or sets the group's override tax GL control account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.ForeignProfitAccountID">
            <summary>Gets or sets the group's foreign profit account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.ForeignLossAccountID">
            <summary>Gets or sets the group's foreign loss account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.DiscMtrxID">
            <summary>Gets or sets the ID of the discount matrix row associated with the group.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerGroup.DiscountMatrix">
            <summary>Gets or sets the group's discount matrix row .Gets or sets the discount matrix record associated with the group.</summary>
        </member>
        <member name="T:Pastel.Evolution.CustomerTransaction">
            <summary>Represents a customer transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerTransaction.#ctor">
            <summary>Creates a new instance of  a transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerTransaction.#ctor(System.Int64)">
            <summary>Creates a new instance of  a transaction.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CustomerTransaction.CalculateTax">
            <summary>Calculates the tax amount on the transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerTransaction.CalculateTaxSplits">
            <summary>Calculates the tax amount from split allocations.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Module">
            <summary>Gets the Evolution module this record belongs to, used in internal validation.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Account">
            <summary>Gets or sets the Account to which the transaction gets posted. This is amandatory field.</summary>
            <seealso cref="P:Pastel.Evolution.CustomerTransaction.Customer" />
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Customer">
            <summary>Gets or sets the transaction's customer account (maps directly to Account).</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.AccountID">
            <summary>Gets or sets the ID of the Account to which the transaction gets posted.</summary>
            <seealso cref="P:Pastel.Evolution.CustomerTransaction.Account" />
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Date">
            <summary>Gets or sets the date on which the transaction takes place. This often differs from the actual posting date but defaults to the <i>current</i> date.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.TransactionCode">
            <summary>Gets or sets the <see cref="P:Pastel.Evolution.CustomerTransaction.TransactionCode"/> record associated with this transaction, as maintained in Accounts Receivable > Maintenance > Transaction Types.  Transaction codes/types govern General Ledger integration. This is a mandatory field.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.TransactionCodeID">
            <summary>Gets or sets the ID of the <see cref="P:Pastel.Evolution.CustomerTransaction.TransactionCode"/> record associated with this transaction, which governs General Ledger integration.</summary>
            <seealso cref="P:Pastel.Evolution.CustomerTransaction.TransactionCode" />
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.OrderNo">
            <summary>Gets or sets the transaction order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.ExtOrderNo">
            <summary>Gets or sets the transaction's external order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Project">
            <summary>Gets or sets the <see cref="P:Pastel.Evolution.CustomerTransaction.Project"/> record associated with this transaction. When using Project Tracking, this field must be specified wherever applicable.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.ProjectID">
            <summary>Gets or sets the ID of the <see cref="P:Pastel.Evolution.CustomerTransaction.Project"/> record associated with this transaction. When using Project Tracking, this field must be specified wherever applicable.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Description">
            <summary>Gets or sets the transaction description that - togeter with the <see cref="P:Pastel.Evolution.CustomerTransaction.Reference"/> - appears on the account's statement by default. This is a mandatory field.</summary>
            <remarks>The <see cref="P:Pastel.Evolution.CustomerTransaction.Reference"/> is usually a sequencial code whereas the description is more general, e.g. a transaction might have the reference "PMB128901" and the description "Payment - Thank You".</remarks>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Outstanding">
            <summary>Gets the transaction's outstanding amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.ForeignOutstanding">
            <summary>Gets the transaction's foreign outstanding amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Reference">
            <summary>Gets or sets the transaction reference that - together with the <see cref="P:Pastel.Evolution.CustomerTransaction.Description"/> - appears on the customer statement by default. This is a mandatory field.</summary>
            <remarks>The <see cref="P:Pastel.Evolution.CustomerTransaction.Reference"/> is usually quite "cryptic" (numbered sequenceetc.) whereas the description is more friendly, e.g. a transaction might have thereference "PMB128901" and the description "Payment - Thank You".</remarks>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Reference2">
            <summary>Gets or sets an additional transaction reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Debit">
            <summary>
            Gets the transaction's debit value, the value of which is determined by the
            <see cref="P:Pastel.Evolution.CustomerTransaction.Amount"/> and <see cref="P:Pastel.Evolution.CustomerTransaction.TransactionCode"/> properties.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.ForeignDebit">
            <summary>Gets the transaction's foreign debit value, which is determined by the <see cref="P:Pastel.Evolution.CustomerTransaction.ForeignAmount"/> and <see cref="P:Pastel.Evolution.CustomerTransaction.TransactionCode"/> properties.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Credit">
            <summary>
            Gets the transaction's credit value, the value of which is determined by the
            <see cref="P:Pastel.Evolution.CustomerTransaction.Amount"/> and <see cref="P:Pastel.Evolution.CustomerTransaction.TransactionCode"/> properties.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.ForeignCredit">
            <summary>Gets the transaction's foreign credit value, which is determined by the <see cref="P:Pastel.Evolution.CustomerTransaction.ForeignAmount"/> and <see cref="P:Pastel.Evolution.CustomerTransaction.TransactionCode"/> properties.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.TaxRate">
            <summary>
            Gets or sets the <see cref="P:Pastel.Evolution.CustomerTransaction.TaxRate"/> record associated with this
            transaction. If a tax type is specified, a tax amount is automatically calculated, but
            can be overridden.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.TaxRateID">
            <summary>Gets or sets the transaction's tax type id.</summary>
            <seealso cref="P:Pastel.Evolution.CustomerTransaction.TaxRate" />
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Tax">
            <summary>Gets or sets the transaction tax amount (automatically rounded to 2 decimals).</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.ForeignTax">
            <summary>
            Gets or sets the transaction foreign tax amount (automatically rounded to 2 decimals). Note that setting this will switch the entry mode to foreign and recalculate the Amount property.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Audit">
            <summary>Gets the transaction's audit number.</summary>
            <remarks>The audit number is 0 when unposted.  After posting, it will reflect the transaction's posted audit number.</remarks>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.ModID">
            <summary>Gets or sets the transaction's evolution module id.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Currency">
            <summary>
            Gets the foreign currency in use on this transaction, determined by the specified account.  A null value indicates local currency.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.PostDated">
            <summary>Gets or sets whether the transaction is a Post Dated Transaction.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.TransactionType">
            <summary>Gets or sets the transaction type.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerTransaction.SetDocumentKey(System.Int64)">
            <param name="id">
            </param>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Amount">
            <summary>Gets or sets the (gross) transaction value.  Negative values are allowed and will result in inverted debits and credits.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.ForeignAmount">
            <summary>
            Gets or sets the foreign transaction value.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.SplitAllocations">
            <summary>Gets the transaction's split allocation collection, used to split the contra account posting to various GL accounts.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.Allocations">
            <summary>Gets the transaction's allocation collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.SplitTaxAllocations">
            <summary>Gets the transaction's split tax allocation collection, used to split the tax account posting to various GL accounts.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.SalesRep">
            <summary>Gets or sets the Sales Rep.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.OverrideDebitAccount">
            <summary>
            Gets or sets the GL account to use when posting the transaction's debit leg, overriding the debit account configured in the transaction type.
            When posting a credit transaction, the debit account will actually be credited; I.e. this represents the debtors control account.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerTransaction.OverrideCreditAccount">
            <summary>
            Gets or sets the GL account to use when posting the transaction's credit leg, overriding the credit account configured in the transaction type.
            When posting a credit transaction, the credit account will actually be debited.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerTransaction.List(System.String)">
            <summary>
            Returns a System.Data.DataTable object containing the database records from the PostAR table matching the supplied criteria.
            </summary>
            <param name="criteria">The SQL criteria used to locate the record, e.g. <c>Reference like '1___'</c></param>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to include 
            the single quotes around string literals and append additional criteria with <c>and</c>.</remarks>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerTransaction.List(Pastel.Evolution.AccountBase,System.String)">
            <summary>
            Returns a System.Data.DataTable object containing the database records from the PostAR/PostAP table matching the supplied criteria and 
            limited to the specified account.
            </summary>
            <param name="account">The customer account to which to limit the transaction listing.</param>
            <param name="criteria">The SQL criteria used to locate the record, e.g. <c>Reference like '1___'</c></param>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to include 
            the single quotes around string literals and append additional criteria with <c>and</c>.</remarks>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerTransaction.Find(System.String)">
            <summary>
            Finds a transaction ID.
            </summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. Reference = 'INV001' or Description like '%Invoice%'</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerTransaction.Find(Pastel.Evolution.AccountBase,System.String)">
            <summary>
            Finds a transaction ID.
            </summary>
            <param name="account">The customer account by which to filter the transaction list.</param>
            <param name="criteria">The criteria passed to the SQL query.  Eg. Reference = 'INV001' or Description like '%Invoice%'</param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.PostDatedCheque">
            <summary>
            Represents a post dated transaction.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.PostDatedCheque.List(System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the _etblPostDatedCheques table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. cpdcReference like '1___'</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.PostDatedCheque.List(System.String,System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the _etblPostDatedCheques table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. cpdcReference like '1___'</param>
            <param name="sortOrder">The SQL order by clause to use, e.g. cpdcReference, etc </param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.PostDatedCheque.Find(System.String)">
            <summary>Finds a post dated Cheque ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cpdcReference = 'CH001'</param>
        </member>
        <member name="M:Pastel.Evolution.PostDatedCheque.Get(System.String)">
            <summary>Returns the [first] post dated cheque object matching the criteria specified; otherwise, returns null.</summary>
            <param name="criteria"> Eg. cpdcReference = 'CH001'</param>
            <seealso cref="M:Pastel.Evolution.PostDatedCheque.Find(System.String)" />
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.CustomerID">
            <summary>Gets or sets the Customer's ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.Customer">
            <summary>Gets or sets the Customer.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.Date">
            <summary>Gets or sets the Transaction's Date.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.TransactionCodeID">
            <summary>Gets or sets the Transaction Code's ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.TransactionCode">
            <summary>Gets or sets the Transaction Code.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.TaxTypeID">
            <summary>Gets or sets the TaxRate's ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.TaxType">
            <summary>Gets or sets the TaxRate.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.DiscountTaxRateID">
            <summary>Gets or sets the Discount TaxRate's ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.DiscountTaxType">
            <summary>Gets or sets the Discount TaxRate.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.ProjectID">
            <summary>Gets or sets the Project's ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.Project">
            <summary>Gets or sets the Project.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.SalesRepID">
            <summary>Gets or sets the Sales Rep's ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.SalesRep">
            <summary>Gets or sets the Sales Rep.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.ContraGLAccountID">
            <summary>Gets or sets the Contra General Ledger's ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.ContraGLAccount">
            <summary>Gets or sets the Contra General Ledger.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.Cancelled">
            <summary>Gets or sets whether the Post Dated Cheque is Cancelled.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.CancelledReason">
            <summary>Gets or sets the Post Dated Cheque Cancelled Reason.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.Reference">
            <summary>Gets or sets the Transaction Reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.Description">
            <summary>Gets or sets the Transaction Description.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.Reference2">
            <summary>Gets or sets the Transaction Reference 2.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.OrderNumber">
            <summary>Gets or sets the Transaction Order Number.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.Amount">
            <summary>Gets or sets the (gross) transaction value.  Negative values are allowed and will result in inverted debits and credits.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.ForeignAmount">
            <summary>
            Gets or sets the foreign transaction value.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.DiscountAmount">
            <summary>Gets or sets the discount value.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.ForeignDiscountAmount">
            <summary>
            Gets or sets the foreign discount value.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.ExchangeRate">
            <summary>Gets or sets the applicable exchange rate, expressed as [home currency]/[foreign currency].  Defaults to applicable exchange rate for the transaction date.</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.Tax">
            <summary>Gets or sets the post dated cheque tax amount (automatically rounded to 2 decimals).</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.ForeignTax">
            <summary>
            Gets or sets the post dated cheque foreign tax amount (automatically rounded to 2 decimals).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.DiscountTax">
            <summary>Gets or sets the post dated cheque discount tax amount (automatically rounded to 2 decimals).</summary>
        </member>
        <member name="P:Pastel.Evolution.PostDatedCheque.DiscountForeignTax">
            <summary>
            Gets or sets the post dated cheque discount foreign tax amount (automatically rounded to 2 decimals).
            </summary>
        </member>
        <member name="T:Pastel.Evolution.CustomerDiscMatrixHeader">
            <summary>
            Represents an Evolution customer discount matrix header.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrixHeader.#ctor">
            <summary>Creates a new instance of a customer discount matrix header.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrixHeader.#ctor(System.Int32)">
            <summary>Creates a new instance of a customer discount matrix header.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrixHeader.#ctor(System.String)">
            <summary>Creates a new instance of a customer discount matrix header.</summary>
            <param name="description">Specifies the description of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.CustomerDiscMatrixHeader.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.CustomerDiscMatrixHeader.Place">
            <summary>Gets or sets the axis code.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerDiscMatrixHeader.Position">
            <summary>Gets or sets the position.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerDiscMatrixHeader.Description">
            <summary>Gets or sets the description.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrixHeader.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrixHeader.FindByDescription(System.String)">
            <summary>Attempts to find a discount matrix header by its description and returns its ID.</summary>
            <param name="description">The description used to lookup the record.</param>
            <seealso cref="M:Pastel.Evolution.CustomerDiscMatrixHeader.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrixHeader.Get(System.String)">
            <summary>Returns the [first] group object with the description specified; otherwise, returns null.</summary>
            <param name="criteria"> Eg. Description like '1_B%'</param>
            <seealso cref="M:Pastel.Evolution.CustomerDiscMatrixHeader.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrixHeader.GetByDescription(System.String)">
            <summary>Returns a discount matrix header object corresponding to the description specified; otherwise, returns null.</summary>
            <param name="description">Specifies the description.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrixHeader.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrixHeader.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrixHeader.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.CustomerDiscMatrix">
            <summary>
            Represents an Evolution customer discount matrix catalog.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrix.#ctor">
            <summary>Creates a new instance of a customer discount matrix catalog.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrix.#ctor(System.Int32)">
            <summary>Creates a new instance of a customer discount matrix catalog.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrix.#ctor(System.Int32,System.Int32)">
            <summary>Creates a new instance of a customer discount matrix catalog.</summary>
            <param name="xPosition">Specifies the X-position of the existing record.</param>
            <param name="yPosition">Specifies the Y-position of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.CustomerDiscMatrix.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.CustomerDiscMatrix.XPosition">
            <summary>Gets or sets the x position.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerDiscMatrix.YPosition">
            <summary>Gets or sets the y position.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerDiscMatrix.Percentage">
            <summary>Gets or sets the description.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrix.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Pastel.Evolution.CustomerDiscMatrix.FindByPosition(System.Int32,System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:Pastel.Evolution.CustomerDiscMatrix.Get(System.String)" -->
        <!-- Badly formed XML comment ignored for member "M:Pastel.Evolution.CustomerDiscMatrix.GetByPosition(System.Int32,System.Int32)" -->
        <member name="M:Pastel.Evolution.CustomerDiscMatrix.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrix.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrix.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.CustomerDiscMatrix.SalesDiscMatrixOwner">
            <summary>
            Represents a owner of a discount matrix column and row.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CustomerDiscMatrix.SalesDiscMatrixOwner.#ctor(System.String,System.String)">
            <summary>Creates a new instance of a sales discount matrix owner.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerDiscMatrix.SalesDiscMatrixOwner.XPos">
            <summary>Gets or sets the x position. Representing the discount matrix row pertaining to a customer.</summary>
        </member>
        <member name="P:Pastel.Evolution.CustomerDiscMatrix.SalesDiscMatrixOwner.YPos">
            <summary>Gets or sets the y position. Representing the discount matrix column pertaining to an inventory item.</summary>
        </member>
        <member name="T:Pastel.Evolution.SalesRepresentative">
            <summary>
            Represents an Evolution sales representative.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.#ctor">
            <summary>Creates a new instance of  a representative.</summary>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.#ctor(System.Int32)">
            <summary>Creates a new instance of  a representative.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.#ctor(System.String)">
            <summary>Creates a new instance of  a representative.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.SalesRepresentative.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.FindByCode(System.String)">
            <summary>Attempts to find a representative by its code and returns its ID.</summary>
            <param name="code">The code used to lookup the record.</param>
            <seealso cref="M:Pastel.Evolution.SalesRepresentative.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.FindByName(System.String)">
            <summary>Attempts to find a representative by its name and returns its ID.</summary>
            <param name="name">The name used to lookup the record.</param>
            <seealso cref="M:Pastel.Evolution.SalesRepresentative.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.Get(System.String)">
            <summary>Returns the [first] group object with the code specified; otherwise, returns null.</summary>
            <param name="criteria"> Eg. Code like '1_B%'</param>
            <seealso cref="M:Pastel.Evolution.SalesRepresentative.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.GetByCode(System.String)">
            <summary>Returns a representative object corresponding to the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.GetByName(System.String)">
            <summary>Returns a representative object corresponding to the name specified; otherwise, returns null.</summary>
            <param name="name">Specifies the name.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.SalesRepresentative.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.SalesRepresentative.Code">
            <summary>Gets or sets the representative's code.</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesRepresentative.Description">
            <summary>Gets or sets the representative's name.</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesRepresentative.Address1">
            <summary>Gets or sets the representative's address line 1.</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesRepresentative.Address2">
            <summary>Gets or sets the representative's address2.</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesRepresentative.Address3">
            <summary>Gets or sets the representative's address3.</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesRepresentative.Address4">
            <summary>Gets or sets the representative's address4.</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesRepresentative.Bank">
            <summary>Gets or sets the representative's bank.</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesRepresentative.Comment1">
            <summary>Gets or sets the representative's comment1.</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesRepresentative.Comment2">
            <summary>Gets or sets the representative's comment2.</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesRepresentative.OnHold">
            <summary>Gets or sets the representative's status.</summary>
        </member>
        <member name="T:Pastel.Evolution.AttributeWrappers">
            <summary>
            Represents the wrapper class for attributes.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AttributeWrappers.AttributeGroups">
            <summary>
            Represents an attribute group
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroups.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroups.Code">
            <summary>Gets the attribute group code.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroups.Description">
            <summary>Gets the attribute group description.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroups.ModuleType">
            <summary>Gets the attribute module type.</summary>
        </member>
        <member name="M:Pastel.Evolution.AttributeWrappers.AttributeGroups.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeWrappers.AttributeGroups.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.AttributeWrappers.AttributeTypes">
            <summary>
            Represents an attribute type
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeTypes.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeTypes.Name">
            <summary>Gets the attribute type name.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeTypes.Description">
            <summary>Gets the attribute type description.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeTypes.LinkedID">
            <summary>Gets the attribute linked id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeTypes.IsActive">
            <summary>Gets the attribute active status.</summary>
        </member>
        <member name="M:Pastel.Evolution.AttributeWrappers.AttributeTypes.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeWrappers.AttributeTypes.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.AttributeWrappers.AttributeValues">
            <summary>
            Represents an attribute value
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeValues.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeValues.Code">
            <summary>Gets the attribute value code.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeValues.Value">
            <summary>Gets the attribute value.</summary>
        </member>
        <member name="M:Pastel.Evolution.AttributeWrappers.AttributeValues.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeWrappers.AttributeValues.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks">
            <summary>
            Represents an attribute group link to types
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.AttributeGroup">
            <summary>Gets the attribute group link.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.AttributeType">
            <summary>Gets the attribute type link.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.DefaultValue">
            <summary>Gets the default attribute value link.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.EntryType">
            <summary>Gets the attribute entry type.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.ColumnEntry">
            <summary>Gets the attribute column entry.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.ForceEntry">
            <summary>Gets the attribute force entry.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.TrackBalances">
            <summary>Gets the attribute group to track ledger balances.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.TrackQuantity">
            <summary>Gets the attribute group to track inventory quantity.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.TrackCost">
            <summary>Gets the attribute group to track inventory cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.IsActiveGroupType">
            <summary>Gets the attribute group active status.</summary>
        </member>
        <member name="M:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeWrappers.AttributeGroupLinks.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.AttributeWrappers.AttributeValueTypeLinks">
            <summary>
            Represents an attribute type link to values
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeValueTypeLinks.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeValueTypeLinks.AttributeType">
            <summary>Gets the attribute type link.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeWrappers.AttributeValueTypeLinks.AttributeValue">
            <summary>Gets the default attribute value link.</summary>
        </member>
        <member name="M:Pastel.Evolution.AttributeWrappers.AttributeValueTypeLinks.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeWrappers.AttributeValueTypeLinks.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.AttributeTypeValueCollection">
            <summary>
            Represents the atrribute type value collection.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AttributeTxQuantityGroupCollection">
            <summary>
            Represents the atrribute transaction quantity group collection.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AttributeTxQuantityCollection">
            <summary>
            Represents the atrribute transaction quantity collection.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AttributeCollection">
            <summary>
            Represents the atrribute class collection.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AttributeItemQuantityGroupCollection">
            <summary>
            Represents the item atrribute group quantity collection.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AttributeItemQuantityCollection">
            <summary>
            Represents the item atrribute quantity collection.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AttributeTypeValue">
            <summary>
            Represents the atrribute type and value combined.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AttributeGroupType">
            <summary>
            Represents the atrribute group and type combined.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeGroupType.Code">
            <summary>Gets or sets the attribute group code.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeGroupType.Description">
            <summary>Gets or sets the attribute group's description.</summary>
        </member>
        <member name="T:Pastel.Evolution.AttributeType">
            <summary>
            Represents an attribute type
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeType.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.AttributeType.Name">
            <summary>Gets or sets the attribute type name.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeType.Description">
            <summary>Gets or sets the attribute type description.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeType.LinkedID">
            <summary>Gets or sets the attribute linked id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeType.IsActive">
            <summary>Gets or sets the attribute active status.</summary>
        </member>
        <member name="M:Pastel.Evolution.AttributeType.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeType.ReturnName(System.Int32)">
            <summary>Returns the attribute type.</summary>
            <param name="typeID">Specifies the typeID.</param>
            <returns>The case sensitive attibute type name; empty string if no record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeType.ReturnName(System.String)">
            <summary>Returns the attribute type.</summary>
            <param name="name">Specifies the name.</param>
            <returns>The case sensitive attibute type name; empty string if no record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeType.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeType.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.AttributeType.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="T:Pastel.Evolution.AttributeValue">
            <summary>
            Represents an attribute value
            </summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeValue.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.AttributeValue.Code">
            <summary>Gets or sets the attribute value code.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeValue.Value">
            <summary>Gets or sets the attribute value.</summary>
        </member>
        <member name="P:Pastel.Evolution.AttributeValue.AttributeType">
            <summary>Gets or sets the attribute type.</summary>
        </member>
        <member name="M:Pastel.Evolution.AttributeValue.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeValue.ReturnValue(System.Int32)">
            <summary>Returns the attribute value.</summary>
            <param name="valueID">Specifies the valueID.</param>
            <returns>The case sensitive attibute value; empty string if no record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeValue.ReturnValue(System.String)">
            <summary>Returns the attribute value.</summary>
            <param name="value">Specifies the value.</param>
            <returns>The case sensitive attibute value; empty string if no record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeValue.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.AttributeValue.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.AttributeValue.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="T:Pastel.Evolution.AttributesHelper">
            <summary>
            Represents the helper class for an attribute.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.Attribute(Pastel.Evolution.AttributeTypeValue)">
            <summary>Transform an attribute type value into attribute xml format.</summary>
            <param name="attTypeValue">The attribute type value.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.Attributes(Pastel.Evolution.AttributeGroupType)">
            <summary>Returns a list of xml type attributes.</summary>
            <param name="attGroupType">The attribute group type.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeGroup(System.Int32)">
            <summary>Transform an attribute group into attribute group xml format.</summary>
            <param name="groupID">The attribute group ID.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeGroup(Pastel.Evolution.AttributeGroupType)">
            <summary>Transform an attribute group type into attribute group xml format.</summary>
            <param name="attGroupType">The attribute group type.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeGroup(AttributeGroup)">
            <summary>Transform an attribute group into attribute group xml format.</summary>
            <param name="attGroup">The attribute group.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeGroupToXml(Pastel.Evolution.AttributeGroupType)">
            <summary>Instantiate an attribute group to xml attribute group format.</summary>
            <param name="attGroupType">The attribute group type.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.Attribute(Attribute)">
            <summary>Transform an attribute into attribute xml format.</summary>
            <param name="attribute">The attribute.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.Attributes(Pastel.Evolution.AttributeTxQuantityCollection)">
            <summary>Returns a list of xml type attributes.</summary>
            <param name="attTxQuantity">The attribute transaction quantity collection.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.Attributes(AttributeTxQuantity)">
            <summary>Returns a list of xml type attributes.</summary>
            <param name="attTxQuantity">The attribute transaction quantity.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeTxQuantity(Pastel.Evolution.AttributeTxQuantityCollection,Pastel.Evolution.QuantitySource,Pastel.Evolution.QuantityGroupType)">
            <summary>Transform an attribute transaction quantity collection into attribute transaction quantity xml format.</summary>
            <param name="attTxQuantity">The inventory item attribute transaction quantity.</param>
            <param name="qtySource">Specifies the source of quantities to be initiated.</param>
            <param name="qtyGrpType">Specifies the type of attribute group quantities to be initiated.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeTxQuantities(Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.QuantitySource,Pastel.Evolution.QuantityGroupType)">
            <summary>Returns a list of xml type transaction quantities.</summary>
            <param name="txQtyGrp">The inventory item attribute transaction quantity group.</param>
            <param name="qtySource">Specifies the source of quantities to be initiated.</param>
            <param name="qtyGrpType">Specifies the type of attribute group quantities to be initiated.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeTxQuantityGroup(Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.QuantitySource,Pastel.Evolution.QuantityGroupType)">
            <summary>Transform an attribute transaction quantity group collection into attribute transaction quantity group xml format.</summary>
            <param name="attTxQuantity">The inventory item attribute transaction quantity.</param>
            <param name="qtySource">Specifies the source of quantities to be initiated.</param>
            <param name="qtyGrpType">Specifies the type of attribute group quantities to be initiated.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeTxQuantityGroupToXml(AttributeGroup,Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.QuantitySource,Pastel.Evolution.QuantityGroupType)">
            <summary>Instantiate an inventory source line group to a xml attribute group format.</summary>
            <param name="attGroup">The inventory item attribute group.</param>
            <param name="txQtyGrp">The inventory item attribute transaction quantity group.</param>
            <param name="qtySource">Specifies the source of quantities to be initiated.</param>
            <param name="qtyGrpType">Specifies the type of attribute group quantities to be initiated.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeTxQuantityGroupToXmlInverse(AttributeGroup,Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.QuantitySource,Pastel.Evolution.QuantityGroupType)">
            <summary>Instantiate an inventory source line group to a xml attribute group format with inverse quantities.</summary>
            <param name="attGroup">The inventory item attribute group.</param>
            <param name="txQtyGrp">The inventory item attribute transaction quantity group.</param>
            <param name="qtySource">Specifies the source of quantities to be initiated.</param>
            <param name="qtyGrpType">Specifies the type of attribute group quantities to be initiated.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeQuantity(Pastel.Evolution.AttributeTxQuantityCollection,Pastel.Evolution.IBTAction)">
            <summary>Transform an attribute transaction quantity into attribute quantity xml format.</summary>
            <param name="attTxQuantity">The inventory item attribute transaction quantity.</param>
            <param name="ibtAction">The specific ibt action taken.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeQuantities(Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.IBTAction)">
            <summary>Returns a list of xml type attribute item quantities.</summary>
            <param name="txQtyGrp">The inventory item attribute transaction quantity group.</param>
            <param name="ibtAction">The specific ibt action taken.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeQuantityGroup(Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.IBTAction)">
            <summary>Transform an attribute group transaction quantity into attribute group quantity xml format.</summary>
            <param name="txQtyGrp">The inventory item attribute transaction quantity group.</param>
            <param name="ibtAction">The specific ibt action taken.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeQuantity(Pastel.Evolution.AttributeTxQuantityCollection)">
            <summary>Transform an attribute transaction quantity into attribute quantity xml format.</summary>
            <param name="attTxQuantity">The inventory item attribute transaction quantity.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeQuantities(Pastel.Evolution.AttributeTxQuantityGroupCollection)">
            <summary>Returns a list of xml type attribute item quantities.</summary>
            <param name="txQtyGrp">The inventory item attribute transaction quantity group.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.AttributeQuantityGroup(Pastel.Evolution.AttributeTxQuantityGroupCollection)">
            <summary>Transform an attribute group transaction quantity into attribute group quantity xml format.</summary>
            <param name="txQtyGrp">The inventory item attribute transaction quantity group.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.ListAttribute(Pastel.Evolution.AttributeTypeValue)">
            <summary>Transform an attribute type value into attribute xml format.</summary>
            <param name="attTypeValue">The attribute type value.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.ListAttributes(Pastel.Evolution.AttributeGroupType)">
            <summary>Returns a list of xml type attributes.</summary>
            <param name="attGroupType">The attribute group type.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.ListAttribute(Attribute)">
            <summary>Transform an attribute type value into attribute xml format.</summary>
            <param name="att">The attribute.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesHelper.ListAttributes(Pastel.Evolution.AttributeItemQuantityCollection)">
            <summary>Returns a list of xml type attributes.</summary>
            <param name="attItemQty">The attribute item quantity collection.</param>
        </member>
        <member name="T:Pastel.Evolution.AttributesSerialization">
            <summary>
            Represents the serialization of an attribute.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.DeserializeGroup(System.String)">
            <summary>Deserialize an attribute group.</summary>
            <param name="xmlString">The xml string to be deserialized to an attribute group.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.SerializeGroup(AttributeGroup)">
            <summary>Serialize an attribute group.</summary>
            <param name="attGroup">The attribute group to be serialized to a xml string.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.DeserializeQuantity(System.String)">
            <summary>Deserialize an attribute quantity.</summary>
            <param name="xmlString">The xml string to be deserialized to an attribute quantity.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.SerializeQuantity(AttributeQuantity)">
            <summary>Serialize an attribute quantity.</summary>
            <param name="attQuantity">The attribute quantity to be serialized to a xml string.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.IBTLineAttribute(AttributeGroup,Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.QuantitySource,Pastel.Evolution.QuantityGroupType)">
            <summary>Serialize an inter branch transfer line attribute.</summary>
            <param name="group">The attribute group.</param>
            <param name="txQuantityGroup">The attribute transaction quantity group.</param>
            <param name="source">The attribute quantity source.</param>
            <param name="groupType">The attribute quantity group type.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.IBTItemAttribute(AttributeGroup,Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.IBTAction)">
            <summary>Serialize an inter branch transfer inventory item attribute.</summary>
            <param name="group">The attribute group.</param>
            <param name="txQuantityGroup">The attribute transaction quantity group.</param>
            <param name="ibtAction">The ibt action taken.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.JobLineAttribute(AttributeGroup,Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.QuantitySource,Pastel.Evolution.QuantityGroupType)">
            <summary>Serialize a job card line attribute.</summary>
            <param name="group">The attribute group.</param>
            <param name="txQuantityGroup">The attribute transaction quantity group.</param>
            <param name="source">The attribute quantity source.</param>
            <param name="groupType">The attribute quantity group type.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.JobItemAttribute(AttributeGroup,Pastel.Evolution.AttributeTxQuantityGroupCollection)">
            <summary>Serialize a job card inventory item attribute.</summary>
            <param name="group">The attribute group.</param>
            <param name="txQuantityGroup">The attribute transaction quantity group.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.OrderDetailAttribute(AttributeGroup,Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.QuantitySource,Pastel.Evolution.QuantityGroupType)">
            <summary>Serialize an order detail attribute.</summary>
            <param name="group">The attribute group.</param>
            <param name="txQuantityGroup">The attribute transaction quantity group.</param>
            <param name="source">The attribute quantity source.</param>
            <param name="groupType">The attribute quantity group type.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.InventoryTransactionAttribute(AttributeGroup,Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.QuantitySource,Pastel.Evolution.QuantityGroupType)">
            <summary>Serialize an inventory transaction attribute.</summary>
            <param name="group">The attribute group.</param>
            <param name="txQuantityGroup">The attribute transaction quantity group.</param>
            <param name="source">The attribute quantity source.</param>
            <param name="groupType">The attribute quantity group type.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.InventoryTransactionAttributeInverse(AttributeGroup,Pastel.Evolution.AttributeTxQuantityGroupCollection,Pastel.Evolution.QuantitySource,Pastel.Evolution.QuantityGroupType)">
            <summary>Serialize an inventory transaction attribute with inverse quantities.</summary>
            <param name="group">The attribute group.</param>
            <param name="txQuantityGroup">The attribute transaction quantity group.</param>
            <param name="source">The attribute quantity source.</param>
            <param name="groupType">The attribute quantity group type.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.ParseAttributeQuantity(System.Object,Pastel.Evolution.XMLParseType)">
            <summary>Parse the inventory attribute quantity xml.</summary>
            <param name="xmlObject">The xml object to be parsed.</param>
            <param name="parseType">The xml type to be parsed.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.ParseAttributeTxQuantity(System.Object,Pastel.Evolution.XMLParseType)">
            <summary>Parse the inventory attribute transaction quantity xml.</summary>
            <param name="xmlObject">The xml object to be parsed.</param>
            <param name="parseType">The xml type to be parsed.</param>
        </member>
        <member name="M:Pastel.Evolution.AttributesSerialization.InsertLeadingChar(System.Object)">
            <summary>Transform leading character back into TypeValue xml element.</summary>
            <param name="xmlObject">The xml object to be tranformed.</param>
        </member>
        <member name="M:Pastel.Evolution.BatchLock.#ctor(System.Int32)">
            <summary>Creates a new instance of a batch checkout.</summary>
            <param name="id">Specifies the ID of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.BatchLock.#ctor(System.Object,System.Int64)">
            <summary>Creates a new instance of a batch checkout.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchLock.BatchClass">
            <summary>Gets the batch checkout class type.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchLock.BatchID">
            <summary>Gets the batch checkout id.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchLock.NetworkUser">
            <summary>Gets the batch checkout network user.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchLock.Agent">
            <summary>Gets the batch checkout agent.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchLock.CheckoutGUID">
            <summary>Gets the batch checkout GUID number.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchLock.IncludeOpenBatches">
            <summary>Gets the batch checkout setting to include open batches.</summary>
        </member>
        <member name="M:Pastel.Evolution.BatchLock.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.BatchCheckout.#ctor(System.Int32)">
            <summary>Creates a new instance of a batch chekout.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.BatchCheckout.#ctor(System.Object,System.Int64)">
            <summary>Creates a new instance of a batch chekout.</summary>
            <param name="type">Specifies the type of the existing record.</param>
            <param name="batchID">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.BatchCheckout.ValidateBatchCheckOut(System.Object,System.Int64,Pastel.Evolution.BatchLockType)">
            <summary>Validate if a specific batch has been locked down for viewing or editing.</summary>
            <param name="type">Specifies the type of batch to be validated for checkout. E.g. : Purchase Order</param>
            <param name="id">Specifies the id of the batch.</param>
            <param name="id">Specifies the origin of the checkout. E.g. : Evolution Application | SDK API</param>
            <returns>True or false; depending on whether the batch has successfully been added.</returns>
        </member>
        <member name="M:Pastel.Evolution.BatchCheckout.ValidateBatchCheckOut(System.Object,System.String,Pastel.Evolution.BatchLockType)">
            <summary>Validate if a specific batch has been locked down for viewing or editing.</summary>
            <param name="type">Specifies the type of batch to be validated for checkout. E.g. : Purchase Order</param>
            <param name="id">Specifies the unique identifier.</param>
            <param name="id">Specifies the origin of the checkout. E.g. : Evolution Application | SDK API</param>
            <returns>True or false; depending on whether the batch has successfully been added.</returns>
        </member>
        <member name="M:Pastel.Evolution.BatchCheckout.Add(System.Object,System.Int64)">
            <summary>Add a batch checkout which will lock down the specific batch for viewing or editing.</summary>
            <param name="type">Specifies the type of batch to be added as checked out. E.g. : Purchase Order</param>
            <param name="id">Specifies the id of the batch.</param>
            <returns>True or false; depending on whether the batch has successfully been added.</returns>
        </member>
        <member name="M:Pastel.Evolution.BatchCheckout.Add(System.Object,System.String)">
            <summary>Add a batch checkout which will lock down the specific batch for viewing or editing.</summary>
            <param name="type">Specifies the type of batch to be added as checked out. E.g. : Purchase Order</param>
            <param name="orderNumber">Specifies the document order number. E.g. : 'PO0001'</param>
            <returns>True or false; depending on whether the batch has successfully been added.</returns>
        </member>
        <member name="M:Pastel.Evolution.BatchCheckout.Remove(System.Object)">
            <summary>Remove an existing batch checkout which has been added using the 'Add' method.</summary>
            <param name="type">Specifies the type of batch to be removed from checkout. E.g. : Purchase Order</param>
            <returns>True or false; depending on whether the batch has successfully been removed.</returns>
        </member>
        <member name="M:Pastel.Evolution.BatchCheckout.RemoveAll(System.Object)">
            <summary>Remove all batch checkouts for the sdk agent for a specific batch type.</summary>
            <param name="type">Specifies the type of batch to be removed from checkout. E.g. : Purchase Order</param>
            <returns>True or false; depending on whether the group of batches has successfully been removed.</returns>
        </member>
        <member name="T:Pastel.Evolution.DCModule">
            <summary>
            Describes the module of the batch type.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.BatchModule">
            <summary>
            Describes the various modules which can be added to the batch.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.BatchHistoryAction">
            <summary>
            Describes the action type which can be performed on batch history transactions.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:Pastel.Evolution.BatchBase" -->
        <member name="M:Pastel.Evolution.BatchBase.Initialise">
            <summary>
            Reverts the batch to an unsaved, version 0 (see remarks) state.
            </summary>
            <remarks>Version 0: When using the Revert method, the batch is set to an unsaved state, allowing it to be saved as another batch. It does not; however, revert back to the last saved state, but rather assumes the current state as far as batch detail is concerned.</remarks>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.IsLoading">
            <summary>
            Will be true while the batch is busy loading detail.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.IsProcessing">
            <summary>
            Will be true while the batch is busy processing transactions.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.Audit">
            <summary>Gets the audit number of the last transaction processed by this document.  This value defaults to 0, and will not be available on recalled documents.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.AllowGLContraSplit">
            <summary>Gets or sets the default option to allow for ledger contra splits.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.EnterTaxOnGlContraSplit">
            <summary>Gets or sets the default option to enter tax on ledger contra splits.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.EnterSplitLinesExclusive">
            <summary>Gets or sets the default option to enter contra splits as exclusive.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.DefaultTaxAccount">
            <summary>Gets or sets the default tax account pertaining to ledger lines.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.ClearAfterPost">
            <summary>Gets or sets the default option to clear batch after post.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.AllowDuplicateReferences">
            <summary>Gets or sets the default option to allow for duplicate references.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.ShowGlContra">
            <summary>Gets or sets the default option to show the ledger contra account.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.DefaultModule">
            <summary>Gets or sets the default line module.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.TaxMode">
            <summary>Gets or sets the default tax mode.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.DCModule">
            <summary>Gets or sets the batch module type.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.BatchNo">
            <summary>Gets or sets the batch number.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.Description">
            <summary>Gets or sets the batch description.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.Reference">
            <summary>Gets or sets the batch reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.OriginalBatchNo">
            <summary>Gets or sets the original batch number.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.OriginalDescription">
            <summary>Gets or sets the original batch description.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.CreatedAgent">
            <summary>Gets or sets the agent whom created the batch.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.CreatedAgentID">
            <summary>Gets or sets the agentID whom created the batch.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchBase.Detail">
            <summary>Gets the batch detail collection representing the body of the batch.</summary>
            <seealso cref="T:Pastel.Evolution.BatchDetail" />
        </member>
        <member name="M:Pastel.Evolution.BatchBase.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.BatchBase.BeforeAddDetail(Pastel.Evolution.BatchDetail,System.ComponentModel.CancelEventArgs)">
            <summary>
            Called before adding a BatchDetail record to the collection.  This is not called while loading a record from the database.
            </summary>
            <param name="detailRecord"></param>
            <param name="e"></param>
        </member>
        <member name="M:Pastel.Evolution.BatchBase.Process">
            <summary>Posts the batch to the various accounts and ledgers applicable.</summary>
            <returns>The generated reference number.</returns>
        </member>
        <member name="M:Pastel.Evolution.BatchBase.Process(System.Boolean)">
            <summary>Posts the batch to the various accounts and ledgers applicable.</summary>
            <remarks>Use this method when a batch reference has already been generated outside the Evolution system.</remarks>
            <param name="clearAfterPost">Specifies wether the batch should be cleared after processing the batch.</param>
            <returns>The reference number supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.BatchBase.ClearBatchAfterPost">
            <summary>Removes the detail as well as contra split records from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.BatchBase.ClearBatchReference">
            <summary>Clear the batch reference number from the batch when processed.</summary>
        </member>
        <member name="M:Pastel.Evolution.BatchBase.OnDelete">
            <summary>
            Not supported.  Use the delete facility from inside Evolution.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.BatchBase.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.BatchBase.Clone">
            <summary>Creates an exact copy of an existing batch.</summary>
            <returns>The cloned batch.</returns>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplit.#ctor">
            <summary>Creates a new instance of a batch contra split record.</summary>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplit.#ctor(System.Int32)">
            <summary>Creates a new instance of a batch contra split record.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.GLAccount">
            <summary>
            Gets or sets the line's ledger account. Maps directly to the Account property but null if invalid.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.GLAccountID">
            <summary>Gets or sets the ledger id.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.Description">
            <summary>Gets or sets the line's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.AmountExclusive">
            <summary>Gets or sets the line's exclusive amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.AmountInclusive">
            <summary>Gets or sets the line's inclusive amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.AmountExclusiveForeign">
            <summary>Gets or sets the line's exclusive foreign amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.AmountInclusiveForeign">
            <summary>Gets or sets the line's inclusive foreign amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.TaxAmount">
            <summary>Gets the line's tax amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.TaxAmountForeign">
            <summary>Gets the line's tax amount foreign.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.TaxType">
            <summary>Gets or sets the line's tax type.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.TaxTypeID">
            <summary>Gets or sets the tax type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.Project">
            <summary>
            Gets or sets the line's project.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.ProjectID">
            <summary>Gets or sets the project id.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.TaxAccount">
            <summary>
            Gets or sets the line's tax account.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplit.TaxAccountID">
            <summary>Gets or sets the tax account id.</summary>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplit.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="T:Pastel.Evolution.BatchContraSplitCollection">
            <summary>
            Represents a collection of batch contra split items, typically owned by a given batch detail record.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.BatchContraSplitCollection.CollectionChanged">
            <summary>
            Occurs when detail records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchContraSplitCollection.Item(System.Int32)">
            <summary>
            Gets a batch contra split object by its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplitCollection.Add(Pastel.Evolution.BatchContraSplit)">
            <summary>Appends a batch contra split object to the batch detail.</summary>
            <param name="contraSplitRecord">Specifies the contra split record</param>
            <remarks>Take note that upon being added to line detail, the contra split record will assume the detail line's project.</remarks>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplitCollection.Add(System.String,System.String,System.Double)">
            <summary>Appends a batch contra split object to the batch detail.</summary>
            <param name="glAccount">Specifies the contra ledger account code</param>
            <param name="description">Specifies the contra line's description.</param>
            <param name="amount">Specifies the contra line's amount</param>
            <remarks>Take note that upon being added to line detail, the contra split record will assume the detail line's project.</remarks>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplitCollection.Add(System.String,System.String,System.Double,System.String)">
            <summary>Appends a batch contra split object to the batch detail.</summary>
            <param name="glAccount">Specifies the contra ledger account code</param>
            <param name="description">Specifies the contra line's description.</param>
            <param name="amount">Specifies the contra line's amount</param>
            <param name="taxType">Specifies the contra line's tax type code</param>
            <remarks>Take note that upon being added to line detail, the contra split record will assume the detail line's project.</remarks>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplitCollection.Add(System.String,System.String,System.Double,System.String,System.String)">
            <summary>Appends a batch contra split object to the batch detail.</summary>
            <param name="glAccount">Specifies the contra ledger account code</param>
            <param name="description">Specifies the contra line's description.</param>
            <param name="amount">Specifies the contra line's amount</param>
            <param name="taxType">Specifies the contra line's tax type code</param>
            <param name="project">Specifies the contra line's project code</param>
            <remarks>Take note that upon being added to line detail, the contra split record will assume the detail line's project.</remarks>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplitCollection.Remove(Pastel.Evolution.BatchContraSplit)">
            <summary>
            Removes the specified contra split line from the collection
            </summary>
            <param name="contraSplitRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplitCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a contra split record using its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplitCollection.Save">
            <summary>
            Calls the Save method on each contra split record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplitCollection.Delete">
            <summary>
            Calls the Delete method on each contra split record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplitCollection.CalcExclAmount(System.Double,System.String)">
            <summary>
            Calculate the exclusive amount depending on the tax mode either being exclusive or inclusive. 
            </summary>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplitCollection.CalcTaxAmount(System.Double,System.String)">
            <summary>
            Calculate the tax amount depending on the tax mode either being exclusive or inclusive. 
            </summary>
        </member>
        <member name="M:Pastel.Evolution.BatchContraSplitCollection.ObjectTypeExists(System.String,System.Type)">
            <summary>
            Validate if the specific object type exists wihin the database
            </summary>
        </member>
        <member name="M:Pastel.Evolution.BatchDetail.#ctor">
            <summary>Creates a new instance of a batch detail record.</summary>
        </member>
        <member name="M:Pastel.Evolution.BatchDetail.#ctor(System.Int32)">
            <summary>Creates a new instance of a batch detail record.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.BatchDetail.#ctor(System.Int32,Pastel.Evolution.BatchBase)">
            <summary>Creates a new instance of a batch detail record.</summary>
            <param name="id">Specifies the id of the existing record.</param>
            <param name="batch">Specifies the batch owner for the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.TransactionCode">
            <summary>
            Gets or sets the line's transaction code.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.TransactionCodeID">
            <summary>Gets or sets the transaction code id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the TransactionCode ID rather than the TransactionCode since
            setting the TransactionCode ID actually instantiates a TransactionCode object for validation.
            <seealso cref="T:Pastel.Evolution.InventoryItem" />
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.AccountID">
            <summary>
            Gets or sets the Account ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.GLAccount">
            <summary>
            Gets or sets the line's ledger account. Maps directly to the Account property but null if invalid.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.GLAccountID">
            <summary>Gets or sets the ledger id.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.Supplier">
            <summary>
            Gets or sets the line's supplier. Maps directly to the Account property but null if invalid.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.SupplierID">
            <summary>Gets or sets the supplier id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the SupplierID rather than the Supplier since
            setting the supplier ID actually instantiates a Supplier object for validation.
            <seealso cref="T:Pastel.Evolution.InventoryItem" />
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.Customer">
            <summary>
            Gets or sets the line's customer. Maps directly to the Account property but null if invalid.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.CustomerID">
            <summary>Gets or sets the customer id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the CustomerID rather than the Customer since
            setting the customer ID actually instantiates a Customer object for validation.
            <seealso cref="T:Pastel.Evolution.InventoryItem" />
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.GLContraAccount">
            <summary>
            Gets or sets the line's contra ledger account.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.GLContraAccountID">
            <summary>Gets or sets the contra ledger id.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.Currency">
            <summary>Gets or sets the currency.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.CurrencyID">
            <summary>Gets or sets the document's currency ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.ExchangeRate">
            <summary>Gets or sets the exchange rate.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.PostDated">
            <summary>Gets or sets if the transaction is post dated.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.Reference">
            <summary>Gets or sets the line's reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.Description">
            <summary>Gets or sets the line's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.OrderNumber">
            <summary>Gets or sets the line's order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.AmountExclusive">
            <summary>Gets or sets the line's exclusive amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.AmountExclusiveForeign">
            <summary>Gets or sets the line's exclusive foreign amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.AmountInclusive">
            <summary>Gets the line's inclusive amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.AmountInclusiveForeign">
            <summary>Gets or sets the line's inclusive foreign amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.TaxType">
            <summary>Gets or sets the line's tax type.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.TaxMode">
            <summary>
            Gets or sets the line's tax mode.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.Project">
            <summary>
            Gets or sets the line's project.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.ProjectID">
            <summary>Gets or sets the project id.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.Representative">
            <summary>
            Gets or sets the line's sales representative.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.RepresentativeID">
            <summary>Gets or sets the sales representative id.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.SettlementTerm">
            <summary>
            Gets or sets the line's settlement term.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.SettlementTermID">
            <summary>Gets or sets the settlement term id.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.IsDebit">
            <summary>Gets or sets if the transaction is a debit.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.ContraSplit">
            <summary>Gets the batch contra split collection representing the gl contra account split of the batch detail.</summary>
            <seealso cref="P:Pastel.Evolution.BatchDetail.ContraSplit" />
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.HasContraSplit">
            <summary>Gets whether the transaction has contra split lines instantiated.</summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.TaxIndustry">
            <summary>
            Gets or sets the Tax Industry.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetail.TaxIndustryID">
            <summary>
            Gets or sets the Tax Industry Code ID.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.BatchDetail.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.BatchDetail.Initialise">
            <summary> Reverts the detail line to an unsaved state.</summary>
        </member>
        <member name="T:Pastel.Evolution.BatchDetailCollection">
            <summary>
            Represents a collection of batch detail items, typically owned by a given batch document record.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.BatchDetailCollection.CollectionChanged">
            <summary>
            Occurs when detail records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.BatchDetailCollection.Item(System.Int32)">
            <summary>
            Gets a batch detail object by its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.BatchDetailCollection.Add(Pastel.Evolution.BatchDetail)">
            <summary>
            Appends a batch detail object to the batch.
            </summary>
            <remarks>Take note that upon being added to a document, the detail record will assume the document's sales representative and project.</remarks>
        </member>
        <member name="M:Pastel.Evolution.BatchDetailCollection.Remove(Pastel.Evolution.BatchDetail)">
            <summary>
            Removes the specified order detail line from the collection
            </summary>
            <param name="detailRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.BatchDetailCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a detail record using its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.BatchDetailCollection.Save">
            <summary>
            Calls the Save method on each detail record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.BatchDetailCollection.Process">
            <summary>Calls the Process method on each detail record</summary>
        </member>
        <member name="M:Pastel.Evolution.BatchDetailCollection.Delete">
            <summary>Calls the Delete method on each detail record</summary>
        </member>
        <member name="T:Pastel.Evolution.Branch">
            <summary>
            Represents a bank record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Branch.#cctor">
            <summary>Creates a new instance of the Bank class.</summary>
        </member>
        <member name="M:Pastel.Evolution.Branch.#ctor(System.Int32)">
            <summary>Creates a new instance of the Branch class.</summary>
            <param name="id">Specifies the id.</param>
        </member>
        <member name="M:Pastel.Evolution.Branch.CompareScope(Pastel.Evolution.Branch,Pastel.Evolution.Branch)">
            <summary>
            Compares the relative scope of two branches and returns an integer value that indicates their relationship to one another.
            </summary>
            <param name="branchA"></param>
            <param name="branchB"></param>
            <returns>Returns 1 if branch</returns>
        </member>
        <member name="M:Pastel.Evolution.Branch.Find(System.String)">
            <summary>Returns the id of the first record found matching specified criteria. Eg. cBranchDescription = 'abc'</summary>
            <param name="criteria">
            </param>
            <returns>ID of the record found; if not found, -1</returns>
        </member>
        <member name="M:Pastel.Evolution.Branch._Select(System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Branch.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Branch.List(System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the Client table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Account like '1___'</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.Branch.List(System.String,System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the Client table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Account like '1___'</param>
            <param name="sortOrder">The SQL order by clause to use, e.g. DCBalance desc, Account</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.Branch.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="P:Pastel.Evolution.Branch.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Branch.Code">
            <summary>Gets or sets the branch code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Branch.Description">
            <summary>Gets or sets the bank name.</summary>
        </member>
        <member name="P:Pastel.Evolution.Branch.Active">
            <summary>Gets or sets the bank's state.</summary>
        </member>
        <member name="T:Pastel.Evolution.Designation">
            <summary>
            Represents a designation which can be assigned to persons.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Designation.#ctor">
            <summary>Creates a new instance of a designation.</summary>
        </member>
        <member name="M:Pastel.Evolution.Designation.#ctor(System.Int32)">
            <summary>Creates a new instance of a designation.</summary>
            <param name="id">The database ID of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Designation.#ctor(System.String)">
            <summary>Creates a new instance of a designation.</summary>
            <param name="description">The designation name of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Designation.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Designation.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Designation.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.Designation.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the SQL criteria.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.Designation.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Designation.Description">
            <summary>Gets or sets the designation description.</summary>
        </member>
        <member name="T:Pastel.Evolution.Department">
            <summary>
            Represents a business department which can be assigned to accounts.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Department.#ctor">
            <summary>Creates a new instance of a department.</summary>
        </member>
        <member name="M:Pastel.Evolution.Department.#ctor(System.Int32)">
            <summary>Creates a new instance of a department.</summary>
            <param name="id">The database ID of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Department.#ctor(System.String)">
            <summary>Creates a new instance of a department.</summary>
            <param name="description">The department name of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Department.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Department.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Department.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.Department.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the SQL criteria.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.Department.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Department.Description">
            <summary>Gets or sets the department description.</summary>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.TraceLevel(System.Diagnostics.TraceLevel)">
            <summary>
            Set the trace switch configuration 
            </summary>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.Initialise(System.String,System.String,System.String,System.String)">
            <summary>
            Initialises the database connections required by the SDK.
            </summary>
            <param name="commonConnectionString">Connection string to use when connecting to the common Evolution database.</param>
            <param name="connectionString">Connection string to use when connecting to the Evolution accounting database.</param>
            <param name="serialNumber">Your SDK serial number.</param>
            <param name="authKey">Your SDK authorisation key.</param>   
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.Initialise(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initialises the database connections required by the SDK.  This version of the method assumes the common database is on the same server as the 
            accounting database, and is able to uses the same login credentials.
            </summary>
            <param name="database">The Evolution accounting database.</param>
            <param name="commonDatabase">The Evolution common database.</param>
            <param name="serialNumber">Your SDK serial number.</param>
            <param name="authKey">Your SDK authorisation key.</param>
            <param name="server">The SQL database server name or IP address.</param>
            <param name="user">The SQL login.</param>
            <param name="password">The SQL password.</param>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.Initialise(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Initialises the database connections required by the SDK.  This version of the method assumes the common database is called 'EvolutionCommon',
            is on the same server as the accounting database, and is able to uses the same login credentials.
            </summary>
            <param name="database">The Evolution accounting database.</param>
            <param name="serialNumber">Your SDK serial number.</param>
            <param name="authKey">Your SDK authorisation key.</param>
            <param name="server">The SQL database server name or IP address.</param>
            <param name="user">The SQL login.</param>
            <param name="password">The SQL password.</param>
        </member>
        <member name="P:Pastel.Evolution.DatabaseContext.DBConnection">
            <summary>
            The SqlConnection object used by all database calls in the API.  Transaction scope is managed automatically using the BeginTran, CommitTran and RollBackTran methods
            </summary>
        </member>
        <member name="P:Pastel.Evolution.DatabaseContext.DBTransaction">
            <summary>
            The SQL transaction in progress (if any).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.DatabaseContext.CommonDBTransaction">
            <summary>
            The SQL transaction in progress to the common database (if any).
            </summary>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.CreateConnection(System.String)">
            <summary>
            Creates a connection to a Pastel Evolution database.  Use this method if you have a connection string available; otherwise use one of the overloaded methods.
            </summary>
            <param name="connectionString">The connection string used by <see cref="T:System.Data.SqlClient.SqlConnection"/>.</param>
            <seealso cref="M:Pastel.Evolution.DatabaseContext.CreateConnection(System.String,System.String,System.String,System.String,System.Boolean)"/>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.CreateConnection(System.String,System.String)">
            <summary>
            Creates a connection to the Evolution accounting database using trusted authentication.
            </summary>
            <param name="server">The SQL server name, alias or IP address.</param>
            <param name="database">The SQL database name.</param>
            <seealso cref="M:Pastel.Evolution.DatabaseContext.CreateConnection(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.CreateConnection(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a connection to the Evolution accounting database.
            </summary>
            <param name="server">The SQL server name, alias or IP address.</param>
            <param name="database">The SQL database name.</param>
            <param name="login">The SQL Server login name (if not using trusted authentication).</param>
            <param name="password">The SQL Server login's password (if not using trusted authentication).</param>
            <param name="trustedAuth">Whether or not to use trusted authentication.</param>
            <seealso cref="M:Pastel.Evolution.DatabaseContext.CreateConnection(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.CreateCommonDBConnection">
            <summary>
            Creates a connection to the database named 'EvolutionCommon', on the local server, using trusted authentication.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.CreateCommonDBConnection(System.String)">
            <summary>
            Creates a connection to the Evolution common database.
            </summary>
            <param name="connectionString">The connection string used by <see cref="T:System.Data.SqlClient.SqlConnection"/>.</param>
            <seealso cref="M:Pastel.Evolution.DatabaseContext.CreateConnection(System.String,System.String,System.String,System.String,System.Boolean)"/>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.CreateCommonDBConnection(System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            Creates a connection to the Evolution common database.
            </summary>
            <param name="server">The SQL server name, alias or IP address.</param>
            <param name="database">The SQL database name.</param>
            <param name="login">The SQL Server login name (if not using trusted authentication).</param>
            <param name="password">The SQL Server login's password (if not using trusted authentication).</param>
            <param name="trustedAuth">Whether or not to use trusted authentication.</param>
            <seealso cref="M:Pastel.Evolution.DatabaseContext.CreateConnection(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.RequireTransaction(System.String)">
            <summary>
            Asserts that a transaction is in progress.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.BeginTran">
            <summary>
            Starts a global database transaction.
            </summary>
            <remarks>Certain operations will implicitly begin and end a transaction if a transaction is not already pending.  If deciding to manage the transaction yourself, be sure to include this in a try-catch block calling RollbackTran or CommitTran methods accordingly.  Also be aware that most client tools have their transaction isolation level set to "read commited" by default, so while this transaction is in progress, other data requests for data will be delayed.</remarks>
            <returns>True if a transaction was actually started; false if a transaction was already pending.</returns>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.BeginTranCommon">
            <summary>
            Starts a global common database transaction.
            </summary>
            <remarks>Certain operations will implicitly begin and end a transaction if a transaction is not already pending.  If deciding to manage the transaction yourself, be sure to include this in a try-catch block calling RollbackTran or CommitTran methods accordingly.  Also be aware that most client tools have their transaction isolation level set to "read commited" by default, so while this transaction is in progress, other data requests for data will be delayed.</remarks>
            <returns>True if a transaction was actually started; false if a transaction was already pending.</returns>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.CommitTran">
            <summary>
            Quietly commits the global transaction regardless of whether it is actually pending.
            </summary>
            <returns>True if a transaction was actually pending; false otherwise.</returns>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.CommitTranCommon">
            <summary>
            Quietly commits the global common transaction regardless of whether it is actually pending.
            </summary>
            <returns>True if a transaction was actually pending; false otherwise.</returns>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.RollbackTran">
            <summary>
            Quietly aborts the global transaction regardless of whether it is actually open.
            </summary>
            <returns>True if a transaction was actually pending; false otherwise.</returns>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.RollbackTranCommon">
            <summary>
            Quietly aborts the global common transaction regardless of whether it is actually open.
            </summary>
            <returns>True if a transaction was actually pending; false otherwise.</returns>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.IncrementAuditNumber">
            <summary>
            Increment the current audit trail number.
            </summary>
            <returns>True if an audit number succesfully incremented; false otherwise.</returns>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.ExecuteCommandScalar(System.Data.SqlClient.SqlCommand)">
            <summary>
            Executes a command and returns the 1st value from 1st  value.  Will convert a return value of DBNull to null.
            </summary>
            <param name="cmd"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.DatabaseContext.ExecuteCommandScalar(System.Data.SqlClient.SqlConnection,System.Data.SqlClient.SqlTransaction,System.Data.SqlClient.SqlCommand)">
            <summary>
            Executes the query, and returns the first column of the first row in the
            result set returned by the query. Additional columns or rows are ignored.
            </summary>
            <returns>The first column of the first row in the result set, or a null reference
            if the result set is empty.  This function will return a null reference instead of 
            a DBNull value.</returns>
        </member>
        <member name="T:Pastel.Evolution.Defaults">
            <summary>
            Contains various global static methods and properties related to the basic functionality of the SDK.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Defaults.StartNewBatch">
            <summary>
            Forces an audit number increment within the same transaction batch.  NOTE: When committing a transaction using Defaults.CommitTran, the audit number will automatically be incremented, so use this function ONLY when you need have different audit numbers in the same transaction scope
            </summary>
        </member>
        <member name="F:Pastel.Evolution.Defaults.USERNAME">
            <summary>
            The internal user name assigned to posted transactions.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Defaults.GetNextIncidentReference">
            <summary>
            Permanently reserves an incident reference
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Defaults.GetNextOpportunityReference">
            <summary>
            Permanently reserves an incident reference
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Defaults.GetNextJobNumber">
            <summary>
            Permanently reserves a Job Card Number
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Defaults.GetNextJobQuoteNumber">
            <summary>Permanently reserves a Job Quote Number</summary>
        </member>
        <member name="M:Pastel.Evolution.Defaults.IsStatsDisabled">
            <summary>
            Determine whether application stats need to be logged or not.
            </summary>
            <returns>True or false.</returns>
        </member>
        <member name="M:Pastel.Evolution.Defaults.GetGLPeriod(System.DateTime,System.Boolean)">
            <summary>
            Gets the period for the transaction date specified.
            </summary>
            <param name="tranDate">The date for which the corresponding period is to be located.</param>
            <param name="errorIfBlocked">Whether or not an exception needs to be thrown if the applicable period is blocked.</param>
            <returns>GL Period ID: 1-12 for 1st year periods, 2-24 for 2nd, etc.</returns>
        </member>
        <member name="M:Pastel.Evolution.Defaults.GetNextInvDocNo(Pastel.Evolution.DocumentType,Pastel.Evolution.DocumentState)">
            <summary>
            Reserves and returns the next available sales order number.  If automatic numbering is not used, an empty string is returned.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.SalesInvoiceTransactionCode">
            <summary>
            The invoice transaction code as configured in Evolution's inventory defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.SalesCreditNoteTransactionCode">
            <summary>
            The credit note transaction code as configured in Evolution's inventory defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.PurchasesInvoiceTransactionCode">
            <summary>
            The goods received note transaction code as configured in Evolution's inventory defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.PurchasesGrvTransactionCode">
            <summary>
            The goods received note transaction code as configured in Evolution's inventory defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.PurchasesCreditNoteTransactionCode">
            <summary>
            The return to supplier transaction code as configured in Evolution's inventory defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.WarehouseTransferTransactionCode">
            <summary>
            The warehouse transfer transaction code as configured in Evolution's inventory defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.InventoryCostingMethod">
            <summary>
            The inventory costing method configured in Evolution's inventory defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.InventoryIntegrationMethod">
            <summary>
            The inventory integration method configured in Evolution's inventory defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.Audit">
            <summary>
            Reserves and returns the next audit number "on the fly".
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.RetailInvoiceTransactionCode">
            <summary>
            The return retail invoice docket transaction code as configured in Evolution's retail defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.RetailIssueStockTransactionCode">
            <summary>
            The return retail issue stock docket transaction code as configured in Evolution's retail defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.RetailReturnTransactionCode">
            <summary>
            The return retail credit note docket transaction code as configured in Evolution's retail defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.RetailReceiveStockTransactionCode">
            <summary>
            The return retail receive stock docket transaction code as configured in Evolution's retail defaults.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Defaults.UniqueIDList">
            <summary>
            Generic list used in the production of unique random integer numbers.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.DeliveryAddressCode.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.DeliveryAddressCode.#ctor">
            <summary>Creates a new instance of a delivery address code.</summary>
        </member>
        <member name="M:Pastel.Evolution.DeliveryAddressCode.#ctor(System.Int32)">
            <summary>Creates a new instance of a delivery address code.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.DeliveryAddressCode.#ctor(System.String)">
            <summary>Creates a new instance of a delivery address code.</summary>
            <param name="code">Specifies the code.</param>
        </member>
        <member name="M:Pastel.Evolution.DeliveryAddress.#ctor">
            <summary>Creates a new instance of a delivery address.</summary>
        </member>
        <member name="M:Pastel.Evolution.DeliveryAddress.#ctor(System.Int32)">
            <summary>Creates a new instance of a delivery address.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.DeliveryAddress._Select(System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.DeliveryAddress._Select(System.String,System.String)">
            <summary>
            Experimental Method
            </summary>
        </member>
        <member name="P:Pastel.Evolution.DeliveryAddress.Code">
            <summary>
            Gets or sets the delivery address code.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.DeliveryAddress.Address">
            <summary>
            Gets or sets the delivery address record's actual address.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.DeliveryAddress.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="T:Pastel.Evolution.DrCrTransaction">
            <summary>
            A debtor and creditor transaction base class.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.Amount">
            <summary>Gets or sets the transaction amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.ForeignAmount">
            <summary>Gets or sets the transaction foreign amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.Outstanding">
            <summary>Gets the transaction's outstanding amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.ForeignOutstanding">
            <summary>Gets the transaction's foreign outstanding amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.SplitAllocations">
            <summary>Gets the transaction's split allocation collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.SplitTaxAllocations">
            <summary>Gets the transaction's split tax allocation collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.IsDebitPositive">
            <summary>Determines whether the derived transaction is by default nature a debit, i.e. a positive amount is a debit.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.IsSplitTax">
            <summary>Determines whether the derived transaction's split allocation collection should split tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.ExchangeRate">
            <summary>Gets or sets the applicable exchange rate, expressed as [home currency]/[foreign currency].  Defaults to applicable exchange rate for the transaction date.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.Currency">
            <summary>
            Gets the foreign currency in use on this transaction, determined by the specified account.  A null value indicates local currency.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.MaxOutstanding">
            <summary>Gets the maximum possible outstanding value for the given transaction, based on the Debit or Credit value.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.MaxForeignOutstanding">
            <summary>Gets the maximum possible foreign outstanding value for the given transaction, based on the ForeignDebit or ForeignCredit value.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrTransaction.IsDebit">
            <summary>Indicates whether the transaction is a debit (true) or credit(false)</summary>
        </member>
        <member name="T:Pastel.Evolution.EvolutionException">
            <summary>
            A generic SDK exception class from which other SDK exception types inherit.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.RecordNotExistsException">
            <summary>
            The exception that is thrown when initialisation of a non-existent record is being attempted.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.IntegrityViolationException">
            <summary>
            The exception that is thrown when removal of a record violates relations with other records.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Currency">
            <summary>
            Represents a currency record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Currency.#ctor">
            <summary>Creates a new instance of a currency.</summary>
        </member>
        <member name="M:Pastel.Evolution.Currency.#ctor(System.Int32)">
            <summary>Creates a new instance of a currency.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Currency.#ctor(System.String)">
            <summary>Creates a new instance of a currency.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.Currency.Rates">
            <summary>
            Gets a collection of exchange rates, accessible by date.  Exchange rates are global, and not branch-specific.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Currency.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Currency.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Currency.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.Currency.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.Currency.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Currency.Code">
            <summary>Gets or sets the currency's code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Currency.Description">
            <summary>Gets or sets the currency's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.Currency.Symbol">
            <summary>Gets or sets the currency's symbol.</summary>
        </member>
        <member name="P:Pastel.Evolution.Currency.Options">
            <summary>Gets or sets the currency's options.</summary>
        </member>
        <member name="P:Pastel.Evolution.Currency.PromptAgentID">
            <summary>Gets or sets the currency's prompt agent id (the Id of the agent that gets prompted for setting the currency rate).</summary>
        </member>
        <member name="T:Pastel.Evolution.ExchangeRateCollection">
            <summary>
            Represents a collection of warehouse context records.
            </summary>
            <seealso cref="T:Pastel.Evolution.DeliveryAddress"/>
        </member>
        <member name="P:Pastel.Evolution.ExchangeRateCollection.Count">
            <summary>
            Gets the number of exchange rate items currently loaded into the collection.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.ExchangeRateCollection.Item(System.DateTime)">
            <summary>
            Gets the exchange rate for the date specified.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.ExchangeRate">
            <summary>
            Represents a hist record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.ExchangeRate.#ctor">
            <summary>Creates a new instance of an exchange rate.</summary>
        </member>
        <member name="M:Pastel.Evolution.ExchangeRate.#ctor(System.Int32)">
            <summary>Creates a new instance of an exchange rate.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.ExchangeRate.#ctor(System.Int32,System.DateTime)">
            <summary>Creates a new instance of an exchange rate.</summary>
        </member>
        <member name="M:Pastel.Evolution.ExchangeRate.#ctor(System.Int32,System.Double,System.DateTime)">
            <summary>Creates a new instance of an exchange rate.</summary>
        </member>
        <member name="M:Pastel.Evolution.ExchangeRate.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.ExchangeRate.Find(System.Int32,System.DateTime)">
            <summary>Finds a record's database ID.</summary>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.ExchangeRate.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.ExchangeRate.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.ExchangeRate.List(System.String,System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <param name="sortOrder">The SQL order by clause to use, e.g. dRateDate desc</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.ExchangeRate.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.ExchangeRate.Date">
            <summary>Gets or sets the date for which the rate applies.</summary>
        </member>
        <member name="P:Pastel.Evolution.ExchangeRate.Currency">
            <summary>
            Gets or sets the foreign currency associated with this exchange rate.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.ExchangeRate.CurrencyID">
            <summary>
            Gets or sets the ID of the foreign currency associated with this exchange rate.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.ExchangeRate.BuyingRate">
            <summary>Gets or sets the buying rate, expressed as [home currency]/[foreign currency].  Defaults to 1.</summary>
        </member>
        <member name="P:Pastel.Evolution.ExchangeRate.SellingRate">
            <summary>Gets or sets the selling rate, expressed as [home currency]/[foreign currency].  Defaults to 1.</summary>
        </member>
        <member name="P:Pastel.Evolution.ExchangeRate.Rate">
            <summary>
            Sets both the buying and selling rates.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.FieldCollectionManager.FieldType.Default">
            <summary>
            All fields; flagged dirty when modifying.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.FieldCollectionManager.FieldType.Modified">
            <summary>
            All dirty fields.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.FieldCollectionManager.FieldType.ReadOnly">
            <summary>
            Read-only (key) fields.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.FieldCollectionManager.FieldType.Writable">
            <summary>
            All fields except those marked as read-only. Default - read-only = writable
            </summary>
        </member>
        <member name="F:Pastel.Evolution.FieldCollectionManager.FieldType.User">
            <summary>
            All fields not defined by the template.  They are all considered writable!
            </summary>
        </member>
        <member name="F:Pastel.Evolution.FieldCollectionManager.FieldType.Raw">
            <summary>
            Exactly the same as Default, but not flagged dirty when setting. Used for internal loading
            </summary>
        </member>
        <member name="M:Pastel.Evolution.FieldCollectionManager.Reset">
            <summary>
            Clears field modification flags.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.FileValidation">
            <summary>
            A generic SDK file validation class.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.Root(System.String)">
            <summary>Returns the root from within a specific file path</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.Directory(System.String)">
            <summary>Returns the directory from within a specific file path</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.FileName(System.String)">
            <summary>Returns the filename from within a specific file path</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.FileExtention(System.String)">
            <summary>Returns the file extention from a specific file path</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.ImageType(System.String)">
            <summary>Returns the image type depending on the file extension</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.FileValidate(System.String,System.String@)">
            <summary>Validate various file path properties with regards to validity</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.Root(System.String,System.String@)">
            <summary>Returns the root from within a specific file path</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.Directory(System.String,System.String@)">
            <summary>Returns the directory from within a specific file path</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.FileName(System.String,System.String@)">
            <summary>Returns the filename from within a specific file path</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.FileExtention(System.String,System.String@)">
            <summary>Returns the file extention from a specific file path</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.IsNullOrEmpty(System.String,System.String@)">
            <summary>Validate an empty string file path</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.IllegalChar(System.String,System.String@)">
            <summary>Validate for illegal chars in filename</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.DirectoryExists(System.String,System.String@)">
            <summary>Validate whether the file directory exists</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.FileExists(System.String,System.String@)">
            <summary>Validate whether the file exists</summary>
        </member>
        <member name="M:Pastel.Evolution.FileValidation.IsImageType(System.String,System.String@)">
            <summary>Validate whether the file is an image type</summary>
        </member>
        <member name="T:Pastel.Evolution.GLBatch">
            <summary>
            Facilitates batch processing of GL transactions. Mainly used internally and not to be confused with journal batches.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.GLBatch.CollectionChanged">
            <summary>
            Occurs when transaction records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.GLBatch.TotalDebit">
            <summary>Gets the batch's total debit value.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLBatch.TotalCredit">
            <summary>Gets the batch's total credit value.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLBatch.TotalForeignDebit">
            <summary>Gets the batch's total foreign debit value.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLBatch.TotalForeignCredit">
            <summary>Gets the batch's total foreign credit value.</summary>
        </member>
        <member name="M:Pastel.Evolution.GLBatch.Add(Pastel.Evolution.GLTransaction)">
            <summary>Adds a GL transaction to the batch without attempting consolidation.</summary>
            <param name="transaction">
            </param>
        </member>
        <member name="M:Pastel.Evolution.GLBatch.Add(Pastel.Evolution.GLTransaction,System.Boolean,System.Boolean)">
            <summary>Adds a GL transaction to the batch, optionally consolidating.</summary>
            <remarks>This overloaded method provides the ability to consolidate the transaction with another transaction in the batch, matching on account, module id, tax type, date, and transaction code.  If the strict option is used,reference, and description are matched as well.  Note: debits and credits are always consolidated separately.</remarks>
            <param name="transaction">Specifies the transaction.</param>
            <param name="consolidate">Specifies whether or not to consolidate.</param>
            <param name="strict">Specifies whether or not to consolidate according to stricter criteria, i.e. reference and description values also have to match.</param>
        </member>
        <member name="M:Pastel.Evolution.GLBatch.Remove(Pastel.Evolution.GLTransaction)">
            <summary>Removes a transaction from the batch.</summary>
            <param name="transaction">Specifies the transaction.</param>
        </member>
        <member name="M:Pastel.Evolution.GLBatch.RemoveAt(System.Int32)">
            <summary>Removes a transaction from a specific location in the batch.</summary>
            <param name="index">Specifies the index at which to remove the record.</param>
        </member>
        <member name="M:Pastel.Evolution.GLBatch.Post">
            <summary>Processes each transaction in the batch. Note: All transactions will assume the global audit number when posting.</summary>
        </member>
        <member name="M:Pastel.Evolution.GLBatch.OnPost">
            
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.IsLoading">
            <summary>
            Will be true while the cashbook is busy loading detail.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatch.#ctor">
            <summary>Creates a new instance of a cashbook batch.</summary>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatch.#ctor(System.Int32)">
            <summary>Creates a new instance of a general ledger cashbook batch.</summary>
            <param name="id">Specifies the ID of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatch.#ctor(System.String)">
            <summary>Creates a new instance of a general ledger cashbook batch.</summary>
            <param name="id">Specifies the code of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.Code">
            <summary>Gets or sets the cashbook batch number.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.Description">
            <summary>Gets or sets the cashbook batch description.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.Reference">
            <summary>Gets or sets the cashbook batch reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.TransactionCode">
            <summary>Gets or sets the cashbook batch transaction code.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.BankAccount">
            <summary>Gets or sets the cashbook batch integration bank account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.AccountsReceivableAccount">
            <summary>Gets or sets the cashbook batch integration accounts receivable account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.AccountsPayableAccount">
            <summary>Gets or sets the cashbook batch integration accounts payable account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.TaxAccount">
            <summary>Gets or sets the cashbook batch integration tax account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.Owner">
            <summary>
            Gets or sets the batch owner.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.OwnerID">
            <summary>
            Gets or sets the Agent ID of the batch owner.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.DoClearAfterPost">
            <summary>Gets or sets the cashbook batch clear after post.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.AllowGeneralLedgerPosting">
            <summary>Gets or sets the cashbook batch to allow general ledger module posting.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.AllowAccountsReceivablePosting">
            <summary>Gets or sets the cashbook batch to allow accounts receivable module posting.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.AllowAccountsPayablePosting">
            <summary>Gets or sets the cashbook batch to allow accounts payable module posting.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.IncludeInBankRecon">
            <summary>Gets or sets the cashbook batch to appear in bank reconciliation.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.RepeatLimit">
            <summary>Gets or sets the cashbook batch repeat limit.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.ProcessedCount">
            <summary>Gets or sets the cashbook batch processed count.</summary>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatch.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.DefaultDescription">
            <summary>Gets or sets the new line default description.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatch.DefaultReference">
            <summary>Gets or sets the new line default reference.</summary>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatchDetail.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatchDetail.#ctor">
            <summary>Creates a new instance of a cashbook batch detail record.</summary>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatchDetail.#ctor(System.Int32)">
            <summary>Creates a new instance of a journal batch detail record.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.TaxAccount">
            <summary>
            Gets or sets the tax account.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.GLAccountID">
            <summary>
            Gets or sets the tax account ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.Supplier">
            <summary>
            Gets or sets the line's supplier. Maps directly to the Account property but null if invalid.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.SupplierID">
            <summary>Gets or sets the supplier id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the SupplierID rather than the Supplier since
            setting the supplier ID actually instantiates a Supplier object for validation.
            <seealso cref="T:Pastel.Evolution.InventoryItem" />
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.Customer">
            <summary>
            Gets or sets the line's customer. Maps directly to the Account property but null if invalid.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.CustomerID">
            <summary>Gets or sets the customer id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the CustomerID rather than the Customer since
            setting the customer ID actually instantiates a Customer object for validation.
            <seealso cref="T:Pastel.Evolution.InventoryItem" />
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.Project">
            <summary>
            Gets or sets the Project.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.ProjectID">
            <summary>
            Gets or sets the Project ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.Description">
            <summary>
            Gets or sets the record description.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.Debit">
            <summary>
            Sets the transaction debit amount.
            </summary>
            <remarks>Be careful when setting both debit and credit values.  When setting debit to a negative value, debit will immediately become
            0 and credit will immediately be set to the reverse of the value.  If then setting credit to 0, the transaction amount will be cancelled.</remarks>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.TaxType">
            <summary>
            Gets or sets the TaxRate.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.TaxRateID">
            <summary>
            Gets or sets the TaxRate ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.Tax">
            <summary>
            Gets or sets the transaction tax amount (automatically rounded to 2 decimals and always posted positive).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.ForeignTax">
            <summary>
            Gets or sets the foreign tax amount (automatically rounded to 2 decimals and always posted positive).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.Reconcile">
            <summary>
            Gets or sets if the record is reconciled or not.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.PostDated">
            <summary>
            Gets or sets if the record is post dated
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.SplitGroup">
            <summary>
            Gets the record Split Group
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.SalesRepresentative">
            <summary>
            Gets or sets the record sales representative
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.SalesRepresentativeID">
            <summary>
            Gets or sets the sales representative ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.Currency">
            <summary>
            Gets the record currency.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.ExchangeRate">
            <summary>Gets or sets the applicable exchange rate, expressed as [home currency]/[foreign currency].  Defaults to applicable exchange rate for the transaction date.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.TaxIndustry">
            <summary>
            Gets or sets the Tax Industry.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetail.TaxIndustryID">
            <summary>
            Gets or sets the Tax Industry Code ID.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.CashbookBatchDetailCollection">
            <summary>
            Represents a collection of cashbook batch detail items, typically owned by a given inventory document record.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.CashbookBatchDetailCollection.CollectionChanged">
            <summary>
            Occurs when detail records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchDetailCollection.Item(System.Int32)">
            <summary>
            Gets a batch detail object by its zero-based index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatchDetailCollection.Add(Pastel.Evolution.CashbookBatchDetail)">
            <summary>
            Appends a batch detail object to the batch.
            </summary>
            <remarks>Take note that upon being added to a document, the detail record will assume the document's sales representative and project.</remarks>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatchDetailCollection.Remove(Pastel.Evolution.CashbookBatchDetail)">
            <summary>
            Removes the specified order detail line from the collection
            </summary>
            <param name="detailRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatchDetailCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a detail record using its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatchDetailCollection.Save">
            <summary>
            Calls the Save method on each detail record
            </summary>
        </member>
        <member name="T:Pastel.Evolution.CashbookBatchSplitCollection">
            <summary>
            Represents a collection of cashbook batch detail items, typically owned by a given inventory document record.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.CashbookBatchSplitCollection.CollectionChanged">
            <summary>
            Occurs when detail records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashbookBatchSplitCollection.Item(System.Int32)">
            <summary>
            Gets a batch detail object by its zero-based index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatchSplitCollection.Add(Pastel.Evolution.CashbookBatchDetail)">
            <summary>
            Appends a batch detail object to the batch.
            </summary>
            <remarks>Take note that upon being added to a document, the detail record will assume the document's sales representative and project.</remarks>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatchSplitCollection.Remove(Pastel.Evolution.CashbookBatchDetail)">
            <summary>
            Removes the specified order detail line from the collection
            </summary>
            <param name="detailRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatchSplitCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a detail record using its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.CashbookBatchSplitCollection.Save">
            <summary>
            Calls the Save method on each detail record
            </summary>
        </member>
        <member name="T:Pastel.Evolution.GLAccount">
            <summary>
            Represents a General Ledger account.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.GLAccount.AccountType">
            <summary>
            Defines general ledger account types.
            </summary>
            <seealso cref="T:Pastel.Evolution.GLAccount"/>
        </member>
        <member name="M:Pastel.Evolution.GLAccount.#ctor">
            <summary>
            Initializes a new instance of the Account class.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.GLAccount.#ctor(System.Int32)">
            <summary>
            Initializes a new instance of the Account class from an existing record in the database.
            </summary>
            <param name="id">The ID used to retrieve the record.</param>
            <exception cref="T:Pastel.Evolution.RecordNotExistsException">No account exists with the specified ID.</exception>
        </member>
        <member name="M:Pastel.Evolution.GLAccount.#ctor(System.String)">
            <summary>
            Initializes a new instance of the Account class from an existing record in the database.
            </summary>
            <param name="code">The account code used to retrieve the record.</param>
            <exception cref="T:Pastel.Evolution.RecordNotExistsException">No account exists with the specified code.</exception>
        </member>
        <member name="M:Pastel.Evolution.GLAccount._Get(System.Int32)">
            <summary>
            Experimental
            </summary>
            <param name="id"></param>
        </member>
        <member name="M:Pastel.Evolution.GLAccount.ToString">
            <summary>Gets the record's string representation.</summary>
            <remarks>Useful while debugging.</remarks>
            <returns>The object's string representation.</returns>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.DefaultCreditNoteTaxTypeID">
            <summary>Gets or sets the GL Account's CRN Tax Type id.</summary>
            <summary>Gets or sets the CRN Tax Type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.DefaultCreditNoteTaxType">
            <summary>Gets or sets the GL Account's CRN Tax Type.</summary>
            <summary>Gets or sets the CRN Tax Type.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.DefaultGoodsReceivedTaxTypeID">
            <summary>Gets or sets the GL Account's GRV Tax Type id.</summary>
            <summary>Gets or sets the GRV Tax Type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.DefaultGoodsReceivedTaxType">
            <summary>Gets or sets the GL Account's GRV Tax Type.</summary>
            <summary>Gets or sets the GRV Tax Type.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.DefaultInvoicingTaxTypeID">
            <summary>Gets or sets the GL Account's INV Tax Type id.</summary>
            <summary>Gets or sets the INV Tax Type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.DefaultInvoicingTaxType">
            <summary>Gets or sets the GL Account's INV Tax Type.</summary>
            <summary>Gets or sets the INV Tax Type.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.DefaultReturnToSupplierTaxTypeID">
            <summary>Gets or sets the GL Account's RTS Tax Type id.</summary>
            <summary>Gets or sets the RTS Tax Type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.DefaultReturnToSupplierTaxType">
            <summary>Gets or sets the GL Account's RTS Tax Type.</summary>
            <summary>Gets or sets the RTS Tax Type.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.AllowOnSalesDocuments">
            <summary>Gets or sets whether this GLAccount can be used for Inventory Sales transactions. Only GLAcounts that allow Sales transactions can be used on Sales Orders and Credit Notes.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.AllowOnPurchasesDocuments">
            <summary>Gets or sets whether this GLAccount can be used for Inventory Purchase transactions. Only GLAcounts that allow Purchases transactions can be used on Purchase Orders and Return To Suppliers.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.Module">
            <summary>Indicates the Evolution module this account type belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.Code">
            <summary>Gets or sets the account's full code.  This field maps to the Master_Sub_Account database field.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.Description">
            <summary>Gets or sets the record description.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.Type">
            <summary>Gets or sets the account's type (financial category).</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.Active">
            <summary>Gets or sets the account's operational state.  Inactive records cannot be used when posting transactions.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.IsAttribute">
            <summary>Gets whether or not the ledger account is an attribute type account.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLAccount.Attributes">
            <summary>Gets the stock item's attribute collection.</summary>
        </member>
        <member name="M:Pastel.Evolution.GLAccount.Find(System.String)">
            <summary>Attempts to find a GL account and returns its ID.</summary>
            <remarks>The criteria is passed to a SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Account = '1000'</param>
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.GLAccount.FindByCode(System.String)">
            <summary>Attempts to find a GL account by its account code and returns its ID.</summary>
            <param name="code">The account code used to lookup the account.</param>
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.GLAccount.Get(System.String)">
            <summary>Attempts to find and return a GL account object using the criteria supplied.</summary>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Account = '1000'</param>
            <returns>The GL account object located or null if no account was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.GLAccount.GetByCode(System.String)">
            <summary>Attempts to find and return a GL account object by its account code.</summary>
            <param name="code">The account code used to lookup the account.</param>
            <returns>The GL account object located or null if no account was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.GLAccount.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.GLAccount.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.GLAccount.List(System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the Accounts table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Account like '1___'</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="T:Pastel.Evolution.GLLoanAccount">
            <summary>
            Represents a general ledger loan account.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.GLLoanAccount.#ctor">
            <summary>Creates a new instance of a general ledger loan account.</summary>
        </member>
        <member name="M:Pastel.Evolution.GLLoanAccount.#ctor(System.Int32)">
            <summary>Creates a new instance of a general ledger loan account.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.GLLoanAccount.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.GLLoanAccount.BranchLoanAccount">
            <summary> Gets the branch loan account.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLLoanAccount.BranchLoanAccountID">
            <summary>Gets the branch loan account id.</summary>
        </member>
        <member name="M:Pastel.Evolution.GLLoanAccount.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.GLLoanAccount.FindByID(System.Int32)">
            <summary>Attempts to find a Branch Loan Account by its id within branch context and returns its ID.</summary>
            <param name="code">The code used to lookup the branch loan account.</param>
            <seealso cref="M:Pastel.Evolution.GLLoanAccount.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first branch loan account matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.GLLoanAccount.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.GLLoanAccount.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.GLLoanAccount.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.GLTransaction">
            <summary>
            Represents a general ledger transaction.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.GLTransaction.List(System.String)">
            <summary>
            Returns a System.Data.DataTable object containing the database records from the PostGL table matching the supplied criteria.
            </summary>
            <param name="criteria">The SQL criteria used to locate the record, e.g. <c>Reference like '1___' and Audit_No = 10.0005</c></param>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to include 
            the single quotes around string literals and append additional criteria with <c>and</c>.</remarks>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.GLTransaction.Find(System.String)">
            <summary>
            Finds a transaction ID.
            </summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. Reference = 'INV001' or Description like '%Invoice%'</param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.CurrencyID">
            <summary>Gets or sets the account's currency id. 0 indicates local currency.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.Currency">
            <summary>Gets or sets the account's currency. null indicates home currency.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.Date">
            <summary>
            Sets the transaction date, which in turn selects the period automatically
            </summary>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.Project">
            <summary>Gets or sets the <see cref="P:Pastel.Evolution.GLTransaction.Project"/> record /// <summary>Posts the document to the various accounts and ledgers applicable.</summary>
            <remarks>Use this method when a document reference has already been generated outside the Evolution system.</remarks>. When using Project Tracking, this field must be specified whereverapplicable.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.Description">
            <summary>
            Gets or sets the record description.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.iInvLineID">
            <summary>Gets or sets the invoice document line id.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.iInvLineLongID">
            <summary>Transitional accessor.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.Debit">
            <summary>
            Sets the transaction debit amount.
            </summary>
            <remarks>Be careful when setting both debit and credit values.  When setting debit to a negative value, debit will immediately become
            0 and credit will immediately be set to the reverse of the value.  If then setting credit to 0, the transaction amount will be cancelled.</remarks>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.Tax">
            <summary>
            Gets or sets the transaction tax amount (automatically rounded to 2 decimals and always posted positive).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.TaxAccount">
            <summary>
            Gets or sets the Tax Account.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.TaxAccountID">
            <summary>
            Gets or sets the Tax Account ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.ForeignTax">
            <summary>
            Gets or sets the foreign transaction tax amount (automatically rounded to 2 decimals and always posted positive).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.GLTransaction.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="M:Pastel.Evolution.GLTransaction.Amount(System.Double,System.Boolean)">
            <summary>Amount to be posted for the transaction.</summary>
            <remarks>Use this method to specify an amount for the ledger transaction.</remarks>
            <param name="amount">The amount to be posted.</param>
            <param name="isDebit">Is the amount a debit foreign amount.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.GLTransaction.ForeignAmount(System.Double,System.Boolean)">
            <summary>Foreign amount to be posted for the transaction.</summary>
            <remarks>Use this method to specify a foreign amount for the ledger transaction. The current exchange rate will be used.
            Remember to initiate the currency first before specifying the foreign amount.</remarks>
            <param name="foreignAmount">The foreign amount to be posted.</param>
            <param name="isDebit">Is the foreign amount a debit foreign amount.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.GLTransaction.ForeignAmount(System.Double,System.Boolean,System.Double)">
            <summary>Foreign amount to be posted for the transaction.</summary>
            <remarks>Use this method to specify a foreign amount for the ledger transaction.
            Remember to initiate the currency first before specifying the foreign amount.</remarks>
            <param name="foreignAmount">The foreign amount to be posted.</param>
            <param name="isDebit">Is the foreign amount a debit foreign amount.</param>
            <param name="exchangeRate">The exchange rate to be used.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.JournalBatch.#ctor">
            <summary>Creates a new instance of a general ledger journal batch.</summary>
        </member>
        <member name="M:Pastel.Evolution.JournalBatch.#ctor(System.Int32)">
            <summary>Creates a new instance of a general ledger journal batch.</summary>
            <param name="id">Specifies the ID of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.JournalBatch.#ctor(System.String)">
            <summary>Creates a new instance of a general ledger journal batch.</summary>
            <param name="id">Specifies the code of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.JournalBatch.Owner">
            <summary>
            Gets or sets the batch owner.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatch.OwnerID">
            <summary>
            Gets or sets the Agent ID of the batch owner.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JournalBatch.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.JournalBatchDetail.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.JournalBatchDetail.#ctor">
            <summary>Creates a new instance of a journal batch detail record.</summary>
        </member>
        <member name="M:Pastel.Evolution.JournalBatchDetail.#ctor(System.Int32)">
            <summary>Creates a new instance of a journal batch detail record.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.Account">
            <summary>
            Gets or sets the Account.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.AccountID">
            <summary>
            Gets or sets the Account ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.TaxAccount">
            <summary>
            Gets or sets the tax account.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.GLAccountID">
            <summary>
            Gets or sets the GLAccount ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.Project">
            <summary>
            Gets or sets the Project.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.ProjectID">
            <summary>
            Gets or sets the Project ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.Description">
            <summary>
            Gets or sets the record description.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.Debit">
            <summary>
            Sets the transaction debit amount.
            </summary>
            <remarks>Be careful when setting both debit and credit values.  When setting debit to a negative value, debit will immediately become
            0 and credit will immediately be set to the reverse of the value.  If then setting credit to 0, the transaction amount will be cancelled.</remarks>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.TaxRate">
            <summary>
            Gets or sets the TaxRate.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.TaxRateID">
            <summary>
            Gets or sets the TaxRate ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.Tax">
            <summary>
            Gets or sets the transaction tax amount (automatically rounded to 2 decimals and always posted positive).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.TaxIndustry">
            <summary>
            Gets or sets the Tax Industry.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetail.TaxIndustryID">
            <summary>
            Gets or sets the Tax Industry Code ID.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.JournalBatchDetailCollection">
            <summary>
            Represents a collection of batch detail items, typically owned by a given inventory document record.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.JournalBatchDetailCollection.CollectionChanged">
            <summary>
            Occurs when detail records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JournalBatchDetailCollection.Item(System.Int32)">
            <summary>
            Gets a batch detail object by its zero-based index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.JournalBatchDetailCollection.Add(Pastel.Evolution.JournalBatchDetail)">
            <summary>
            Appends a batch detail object to the batch.
            </summary>
            <remarks>Take note that upon being added to a document, the detail record will assume the document's sales representative and project.</remarks>
        </member>
        <member name="M:Pastel.Evolution.JournalBatchDetailCollection.Remove(Pastel.Evolution.JournalBatchDetail)">
            <summary>
            Removes the specified order detail line from the collection
            </summary>
            <param name="detailRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.JournalBatchDetailCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a detail record using its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.JournalBatchDetailCollection.Save">
            <summary>
            Calls the Save method on each detail record
            </summary>
        </member>
        <member name="T:Pastel.Evolution.GLJournalTransfer">
            <summary>
            Represents a journal transfer transaction (WIP).
            </summary>
            <remarks>A journal transfer results in two independent inventory transactions, grouped into the same audit batch. You cannot retrieve</remarks>
        </member>
        <member name="M:Pastel.Evolution.GLJournalTransfer.#ctor">
            <summary>Creates a new instance of  a journal transfer transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.GLJournalTransfer.Validate">
            <summary>Validates the transaction without attempting to post.</summary>
            <returns>The Validate.</returns>
        </member>
        <member name="M:Pastel.Evolution.GLJournalTransfer.Post">
            <summary>Processes the transfer.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.DebitAccount">
            <summary>Gets or sets the account to be debited.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.CreditAccount">
            <summary>Gets or sets the account to be credited.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.Date">
            <summary>Gets or sets the transaction date.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.TransactionCode">
            <summary>Sets the journal transfer's transaction code.</summary>
            <remarks>Defaults to the transaction code configured in Evolution's inventory defaults.</remarks>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.TransactionCodeID">
            <summary>Gets or sets the journal transfer's tran code id.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.OrderNo">
            <summary>Gets or sets the journal transfer's order number, if relevant.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.ExtOrderNo">
            <summary>Gets or sets the journal transfer's external order number, if relevant.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.Project">
            <summary>Sets the journal transfer's project.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.ProjectID">
            <summary>Gets or sets the journal transfer's project id.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.Reference">
            <summary>Gets or sets the journal transfer's reference (compulsory).</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.Reference2">
            <summary>Gets or sets the journal transfer's 2nd reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.Description">
            <summary>Gets or sets the journal transfer description.</summary>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.Audit">
            <summary>Gets the transaction's audit number.</summary>
            <remarks>The audit number is 0 when unposted.  After posting, it will reflect the transaction's posted audit number.</remarks>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.ModID">
            <summary>Gets or sets the transaction's module identifier.</summary>
            <remarks>Used internally by Evolution to distinguish transaction origin.</remarks>
        </member>
        <member name="P:Pastel.Evolution.GLJournalTransfer.Module">
            <summary>Gets the Evolution module this record forms a part of.</summary>
        </member>
        <member name="M:Pastel.Evolution.CostAllocationCollection._Distribute">
            <summary>
            Distributes the sum of additional costs between detail records based on values selected for processing (ToProcess).
            </summary>
            <remarks>Only positive, non-zero lines are used in the calculation.</remarks>
        </member>
        <member name="T:Pastel.Evolution.CostAllocation">
            <summary>
            Describes a transaction split allocation used when splitting a transaction's contra entry.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CostAllocation.Amount">
            <summary>
            Gets or sets the transaction value.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CostAllocation.Tax">
            <summary>
            Gets or sets the transaction tax value.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CostAllocation.ForeignAmount">
            <summary>
            Gets or sets the foreign transaction value.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CostAllocation.ForeignTax">
            <summary>
            Gets or sets the transaction foreign tax value.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CostAllocation._Select(Pastel.Evolution.PurchasesDocumentBase)">
            <summary>
            Experimental Method
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CostAllocation._Select(System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.CostAllocation._Select(System.String,System.String)">
            <summary>
            Experimental Method
            </summary>
        </member>
        <member name="T:Pastel.Evolution.BinLocationContextCollection">
            <summary>Represents a collection of binj location context records.</summary>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContextCollection.Item(System.String)">
            <summary> Gets the bin location context object relating to the current item and the warehouse code specified. </summary>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContextCollection.Item(System.Int32)">
            <summary> Gets a bin location context by bin location ID, not by index. </summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryBin">
            <summary>
            Represents an inventory bin.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryBin.#ctor">
            <summary>Creates a new instance of  a bin.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryBin.#ctor(System.Int32)">
            <summary>Creates a new instance of  a bin.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryBin.#ctor(System.String)">
            <summary>Creates a new instance of  a bin.</summary>
            <param name="name">Specifies the name of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryBin.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryBin.FindByName(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="name">Specifies the bin's name.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryBin.Get(System.String)">
            <param name="criteria"> Eg. Code = 'STO0021' or Description like '%Stone%'</param>
            <seealso cref="M:Pastel.Evolution.InventoryBin.Find(System.String)" />
        </member>
        <member name="M:Pastel.Evolution.InventoryBin.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryBin.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryBin.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.InventoryBin.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryBin.Name">
            <summary>Gets or sets the bin's name.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBin.Description">
            <summary>Gets or sets the bin's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBin.Active">
            <summary>Gets or sets whether or not active for the given bin in the given warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBin.AllowSales">
            <summary>Gets or sets whether or not sales are allowed for the given bin in the given warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBin.AllowPurchases">
            <summary>Gets or sets whether or not purchases are allowed for the given bin in the given warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBin.AlwaysAdd">
            <summary>Gets or sets whether or not to always add the bin for new inventory warehouse items.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBin.AlwaysAddToExistingItems">
            <summary>Gets or sets whether or not to always add the bin for existing inventory warehouse items.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBin.WarehouseContext">
            <summary>Gets the inventory bin's warehouse context collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBin.Item(Pastel.Evolution.Warehouse)">
            <summary>Gets the bin location's warehouse context.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBin.Item(System.Int32)">
            <summary>Gets the bin location's warehouse context.</summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryBinWarehouseContext">
            <summary>Represents a bin locations's context within a give warehouse.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryBinWarehouseContext.#ctor(Pastel.Evolution.InventoryBin,Pastel.Evolution.Warehouse)">
            <summary>Creates a new instance of a bin warehouse context record.</summary>
            <param name="bin">Specifies the inventory bin.</param>
            <param name="warehouse">Specifies the warehouse.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryBinWarehouseContext.#ctor(System.Int32,System.Int32)">
            <summary>Creates a new instance of a bin warehouse context record.</summary>
            <param name="binID">Specifies the bin id.</param>
            <param name="warehouseID">Specifies the warehouse id.</param>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContext.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContext.LongID">
            <summary>
            Transitional accessor.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContext.InventoryBin">
            <summary>Gets the object's bin location.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContext.InventoryBinID">
            <summary>Gets the binLocationID this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContext.Warehouse">
            <summary>Gets the object's warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContext.WarehouseID">
            <summary>Gets the warehouseID this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContext.Active">
            <summary>Gets or sets whether or not active for the given bin in the given warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContext.AllowSales">
            <summary>Gets or sets whether or not sales are allowed for the given bin in the given warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContext.AllowPurchases">
            <summary>Gets or sets whether or not purchases are allowed for the given bin in the given warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContext.AlwaysAdd">
            <summary>Gets or sets whether or not to always add the bin for new inventory warehouse items.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContext.AlwaysAddToExistingItems">
            <summary>Gets or sets whether or not to always add the bin for existing inventory warehouse items.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryBinWarehouseContext.Find(System.Int32,System.Int32)">
            <summary>Finds a record's database ID.</summary>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryBinWarehouseContext.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryBinWarehouseContext.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryBinWarehouseContext.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryBinWarehouseContext.List(System.String,System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="joins">Specifies the SQL table joins.</param>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.ItemCategory">
            <summary>
            Represents an inventory category.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.ItemCategory.#ctor">
            <summary>Creates a new instance of an item category.</summary>
        </member>
        <member name="M:Pastel.Evolution.ItemCategory.#ctor(System.Int32)">
            <summary>Creates a new instance of an item category.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.ItemCategory.#ctor(System.String)">
            <summary>Creates a new instance of an item category.</summary>
            <param name="name">Specifies the name of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.ItemCategory.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.ItemCategory.FindByName(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="name">Specifies the item category's name.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.ItemCategory.Get(System.String)">
            <param name="criteria"> Eg. Code = 'STO0021' or Description like '%Stone%'</param>
            <seealso cref="M:Pastel.Evolution.ItemCategory.Find(System.String)" />
        </member>
        <member name="M:Pastel.Evolution.ItemCategory.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.ItemCategory.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.ItemCategory.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.ItemCategory.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.ItemCategory.Name">
            <summary>Gets or sets the item category's name.</summary>
        </member>
        <member name="P:Pastel.Evolution.ItemCategory.Description">
            <summary>Gets or sets the item category's description.</summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryLinkCollection">
            <summary>
            Represents a collection of inventory links, typically owned by a given inventory link record.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.InventoryLinkCollection.CollectionChanged">
            <summary>
            Occurs when link records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLinkCollection.Item(System.Int32)">
            <summary>
            Gets an inventory link object by its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.InventoryLinkCollection.Add(Pastel.Evolution.InventoryLink)">
            <summary> Appends a linked supplier object to the inventory item. </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryLinkCollection.Add(System.String,System.Boolean)">
            <summary> Appends a linked supplier object to an inventory item or linked inventory object to a supplier. </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryLinkCollection.Add(System.String,System.String,System.Boolean)">
            <summary> Appends a linked supplier object to an inventory item or linked inventory object to a supplier. </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryLinkCollection.Add(System.String,System.String,System.String,System.Boolean)">
            <summary> Appends a linked supplier object to an inventory item or linked inventory object to a supplier. </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryLinkCollection.Remove(Pastel.Evolution.InventoryLink)">
            <summary>
            Removes the specified inventory link from the collection
            </summary>
            <param name="linkRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.InventoryLinkCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an image record using its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.InventoryLinkCollection.Save">
            <summary>
            Calls the Save method on each link record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryLinkCollection.Delete">
            <summary>Calls the Delete method on each link record.</summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryLinkCollection.InventoryLinkOwner">
            <summary>
            Represents a owner of inventory links, typically used within a inventory link collection.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryLinkCollection.InventoryLinkOwner.#ctor(System.Object)">
            <summary>Creates a new instance of an inventory link owner.</summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryLink">
            <summary>Represents an inventory item link.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryLink.#ctor">
            <summary>Creates a new instance of an inventory link.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryLink.#ctor(System.Int32)">
            <summary>Creates a new instance of an inventory link.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryLink.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Creates a new instance of an inventory link.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryLink.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryLink.FindByItemAndWarehouseAndSupplier(System.String,System.String,System.String)">
            <summary>Attempts to find an inventory link by its description and returns its ID.</summary>
            <param name="itemCode">The inventory item code used to lookup the inventory link.</param>
            <param name="whseCode">The warehouse code used to lookup the inventory link.</param>
            <param name="supCode">The supplier code used to lookup the inventory link.</param>
            <seealso cref="M:Pastel.Evolution.InventoryLink.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first packcode matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryLink.FindPreferedSupplier(System.String,System.String)">
            <summary>Attempts to find the preferred supplier for a certain inventory item.</summary>
            <param name="itemCode">The inventory item code used to lookup the inventory link.</param>
            <param name="warehouseCode">The warehouse code used to lookup the inventory link.</param>
            <seealso cref="M:Pastel.Evolution.InventoryLink.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first packcode matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryLink.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryLink.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryLink.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.StockID">
            <summary>Gets or sets the unique inventory item id this link belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.InventoryItem">
            <summary>Gets or sets the inventory item this link belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.WarehouseID">
            <summary>Gets or sets the unique warehouse id this link belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.Warehouse">
            <summary>Gets or sets the warehouse this link belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.SupplierID">
            <summary>Gets or sets the unique supplier id this link belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.Supplier">
            <summary>Gets or sets the supplier this link belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.IsItemActive">
            <summary>Gets or sets whether the linked inventory item is active or not.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.ProductReference">
            <summary>Gets or sets the inventory item product reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.AccountModule">
            <summary>Gets or sets the link module.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.SupplierInvCode">
            <summary>Gets or sets the supplier invoice code.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.IsDefaultSupplier">
            <summary>Gets or sets whether the linked supplier is default or not.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.IsSupplierOnHold">
            <summary>Gets or sets whether the linked supplier is on hold or not.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.DateTimeStamp">
            <summary>Gets or sets the link time stamp.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.LastGRVCost">
            <summary>Gets or sets the last grv cost processed on the item for the specific supplier.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryLink.LastGRVCostDate">
            <summary>Gets or sets the last grv cost date processed on the item for the specific supplier.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryLink.Initialise">
            <summary> Reverts the inventory link line to an unsaved state.</summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryImage">
            <summary>
            Represents an inventory item image.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryImage.#ctor">
            <summary>Creates a new instance of an inventory image.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryImage.#ctor(System.Int32)">
            <summary>Creates a new instance of an inventory image.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryImage.#ctor(System.Int32,Pastel.Evolution.InventoryItem)">
            <summary>Creates a new instance of an inventory image.</summary>
            <param name="id">Specifies the id of the existing record.</param>
            <param name="item">Specifies the inventory item owner for the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryImage.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryImage.FindByDescription(System.String)">
            <summary>Attempts to find an inventory image by its description and returns its ID.</summary>
            <param name="description">The description used to lookup the inventory image.</param>
            <seealso cref="M:Pastel.Evolution.InventoryImage.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first packcode matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryImage.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryImage.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryImage.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.InventoryImage.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryImage.ImageType">
            <summary>Gets or sets the inventory image type.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryImage.Description">
            <summary>Gets or sets the inventory image description.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryImage.ActualImage">
            <summary>Gets or sets the inventory image.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryImage.ImageFormat">
            <summary>Gets the inventory image format referenced during image to byte array conversion.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryImage.Initialise">
            <summary> Reverts the detail line to an unsaved state.</summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryImageCollection">
            <summary>
            Represents a collection of inventory image items, typically owned by a given inventory item record.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.InventoryImageCollection.CollectionChanged">
            <summary>
            Occurs when detail records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryImageCollection.Item(System.Int32)">
            <summary>
            Gets an inventory image object by its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.InventoryImageCollection.Add(Pastel.Evolution.InventoryImage)">
            <summary>
            Appends an inventory image object to the inventory item.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryImageCollection.Add(System.String,System.String)">
            <summary> Appends an inventory image object to the inventory item. </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryImageCollection.Remove(Pastel.Evolution.InventoryImage)">
            <summary>
            Removes the specified inventory image from the collection
            </summary>
            <param name="imageRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.InventoryImageCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an image record using its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.InventoryImageCollection.Save">
            <summary>
            Calls the Save method on each image record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryImageCollection.Save(Pastel.Evolution.InventoryItem)">
            <summary>
            Calls the Save method on each image record. 
            Update the inventory item owner for each image within the collection.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryImageCollection.Delete">
            <summary>Calls the Delete method on each image record.</summary>
        </member>
        <member name="T:Pastel.Evolution.SellingPrice">
            <summary>
            Represents a collection of inventory selling prices.
            <seealso cref="T:Pastel.Evolution.SellingPriceCollection"/>
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SellingPrice.ID">
            <summary>
            Gets the record ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SellingPrice.LongID">
            <summary>
            Transitional accessor.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SellingPrice.PriceList">
            <summary>Gets the price list this selling price belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.SellingPrice.StockItem">
            <summary>Gets the stock item this selling price belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.SellingPrice.Warehouse">
            <summary>Gets the warehouse this selling price belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.SellingPrice.PriceExcl">
            <summary>Gets or sets the vat-exclusive unit price.  Setting a value will automatically calculate the inclusive price using thedefault invoicing tax code on the inveotory item, and also cancel the effect of any markup percentage set.</summary>
        </member>
        <member name="P:Pastel.Evolution.SellingPrice.PriceIncl">
            <summary>Gets or sets the vat-inclusive unit price.  Setting a value will automatically calculate the exclusive price using thedefault invoicing tax code on the inveotory item, and also cancel the effect of any markup percentage set.</summary>
        </member>
        <member name="P:Pastel.Evolution.SellingPrice.MarkupPercentage">
            <summary>Gets or sets the markup percentage to be used in calculating this selling price.  One can either specify a markup percentage,or specify fixed prices, but not both.</summary>
        </member>
        <member name="M:Pastel.Evolution.SellingPrice.Save">
            <summary>
            Saves the individual selling price.  Note that saving the inventory item automatically saves the entire selling price collection.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SellingPrice.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.SellingPrice.ListByPriceListID(System.Int32)">
            <summary>Gets a list of selling prices by price list ID.</summary>
            <param name="id">Specifies the price list id.</param>
            <returns>The ListByPriceListID.</returns>
        </member>
        <member name="M:Pastel.Evolution.SellingPrice.ListByStockItemID(System.Int32)">
            <summary>Gets a list of selling prices by stock item ID.</summary>
            <param name="id">Specifies the stock item id.</param>
            <returns>The ListByStockItemID.</returns>
        </member>
        <member name="M:Pastel.Evolution.SellingPrice.ListByStockItemAndWarehouseID(System.Int32,System.Int32)">
            <summary>Gets a list of selling prices by stock item ID and Warehouse ID.</summary>
            <param name="stockID">Specifies the stock item id.</param>
            /// <param name="warehouseID">Specifies the warehouse id.</param>
            <returns>The ListByStockItemAndWarehouseID.</returns>
        </member>
        <member name="T:Pastel.Evolution.WarehouseIBT">
            <summary>
            Represents a Warehouse Inter Branch Transfer
            </summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.IsLoading">
            <summary>
            Will be true while the ibt is busy loading detail.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.#ctor">
            <summary>Creates a new instance of a WarehouseIBT batch.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.#ctor(System.Int32)">
            <summary>Creates a new instance of a WarehouseIBT batch.</summary>
            <param name="id">Specifies the ID of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.#ctor(System.String)">
            <summary>Creates a new instance of a WarehouseIBT batch.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.ToString">
            <summary>Returns object type with qualifier.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.Number">
            <summary>Gets or sets the WarehouseIBT batch number.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.Description">
            <summary>Gets or sets the WarehouseIBT batch description.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.WarehouseFrom">
            <summary>Gets or sets the WarehouseIBT batch warehouse from.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.WarehouseTo">
            <summary>Gets or sets the WarehouseIBT batch warehouse to.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.IBTTransCode">
            <summary>Gets the WarehouseIBT batch transaction code.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.InTransitWarehouseID">
            <summary>Gets the WarehouseIBT batch intransit warehouse id.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.VarianceWarehouseID">
            <summary>Gets the WarehouseIBT batch variance warehouse id.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.DamagedWarehouseID">
            <summary>Gets the WarehouseIBT batch damaged warehouse id.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.Status">
            <summary>Gets the WarehouseIBT batch status.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.Action">
            <summary>Gets the WarehouseIBT batch action.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.ProcessAction">
            <summary>Gets the WarehouseIBT batch processing action.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.InitialAction">
            <summary>Gets the WarehouseIBT batch current action.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.IBTType">
            <summary>Gets the WarehouseIBT state.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.DeliveryNoteNumber">
            <summary>Gets or sets the WarehouseIBT batch delivery note number.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.Project">
            <summary>Gets or sets the WarehouseIBT batch project.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.IssuedDate">
            <summary>Gets or sets the WarehouseIBT batch issued date.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.ReceivedDate">
            <summary>Gets or sets the WarehouseIBT batch received date.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.ActionIssueStockDate">
            <summary>Gets or sets the WarehouseIBT batch action issue stock date.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.ActionShipStockDate">
            <summary>Gets or sets the WarehouseIBT batch action ship stock date.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.ActionAcknowledgeStockDate">
            <summary>Gets or sets the WarehouseIBT batch action acknowledge stock date.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.ActionReceiveStockDate">
            <summary>Gets or sets the WarehouseIBT batch action receive stock date.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.AuditNumberIssued">
            <summary>Gets the WarehouseIBT batch's issued audit number.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.AuditNumberReceived">
            <summary>Gets the WarehouseIBT batch's received audit number.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.AgentIssue">
            <summary>Gets or sets the WarehouseIBT batch agent issue.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.AgentReceive">
            <summary>Gets or sets the WarehouseIBT batch agent receive.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.Reference1">
            <summary>Gets or sets the WarehouseIBT batch reference one.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.Reference2">
            <summary>Gets or sets the WarehouseIBT batch reference two.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.ModID">
            <summary>Gets the WarehouseIBT batch module identifier.</summary>
            <remarks>Used internally by Evolution to distinguish transaction origin.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBT.Module">
            <summary>Gets the Evolution module this WarehouseIBT batch forms a part of.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.CreateIssue">
            <summary>Issue an IBT batch.</summary>
            <returns>The first reference number supplied on the IBT batch.</returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.IssueStock">
            <summary>Issue and ship stock listed on the IBT batch.</summary>
            <returns>The first reference number supplied on the IBT batch.</returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.AcknowledgeShipment">
            <summary>Acknowledge shipment listed on an issued IBT batch.</summary>
            <returns>The first reference number supplied on the IBT batch.</returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.ReceiveStock">
            <summary>Receive stock listed on an issued IBT batch.</summary>
            <returns>The first reference number supplied on the IBT batch.</returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.OnIssue">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.OnShipStock">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.OnAcknowledgeShipment">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.OnReceiveStock">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBT.Complete">
            <summary>Receive all outstanding issued quantities on the inter-branch transfer. No damaged or variance quantities will be processed. </summary>
            <returns>The generated reference number.</returns>
        </member>
        <member name="T:Pastel.Evolution.WarehouseIBTLine">
            <summary>
            Represents a Warehouse Inter Branch Transfer Line
            </summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.#ctor">
            <summary>Creates a new instance of a Warehouse IBT Line.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.#ctor(Pastel.Evolution.WarehouseIBT,System.Int64)">
            <summary>Creates a new instance of a Warehouse IBT Line.</summary>
            <param name="owner">Specifies the owner of the existing IBT line record.</param>
            <param name="ibtLineID">Specifies the id of the existing IBT line record.</param>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.#ctor(System.Int64)">
            <summary>Creates a new instance of a Warehouse IBT Line.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.ToString">
            <summary>Returns object type with qualifier.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.WarehouseIBTID">
            <summary>Gets and sets the WarehouseIBT batch id.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.InventoryItem">
            <summary>Gets or sets the inventory item.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.InventoryItemID">
            <summary> Gets or sets the inventory item ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.FromUnitCost">
            <summary>Gets or sets the from warehouse unit cost</summary>
            <remarks>The unit cost price defaults to the current item cost price in the system but can be overridden if required.  Override only after setting the inventory item and warehouse.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.ToUnitCost">
            <summary>Gets or sets the to warehouse unit cost</summary>
            <remarks>The unit cost price defaults to the current item cost price in the system but can be overridden if required.  Override only after setting the inventory item and warehouse.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.GITUnitCost">
            <summary>Gets or sets the git warehouse unit cost</summary>
            <remarks>The unit cost price defaults to the current item cost price in the system but can be overridden if required.  Override only after setting the inventory item and warehouse.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.VarianceUnitCost">
            <summary>Gets or sets the variance warehouse unit cost</summary>
            <remarks>The unit cost price defaults to the current item cost price in the system but can be overridden if required.  Override only after setting the inventory item and warehouse.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.DamagedUnitCost">
            <summary>Gets or sets the damaged warehouse unit cost</summary>
            <remarks>The unit cost price defaults to the current item cost price in the system but can be overridden if required.  Override only after setting the inventory item and warehouse.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.Reference">
            <summary> Gets or sets the record reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.Description">
            <summary> Gets or sets the record description.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.SerialNumbersIssued">
            <summary>Gets the collection of serial numbers issued pertaining to the ibt detail record.</summary>
            <seealso cref="T:Pastel.Evolution.SerialNumber" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.SerialNumbersReceived">
            <summary>Gets the collection of serial numbers received pertaining to the ibt detail record.</summary>
            <seealso cref="T:Pastel.Evolution.SerialNumber" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.SerialNumbersDamaged">
            <summary>Gets the collection of serial numbers damaged pertaining to the ibt detail record.</summary>
            <seealso cref="T:Pastel.Evolution.SerialNumber" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.SerialNumbersVariance">
            <summary>Gets the collection of serial numbers variance pertaining to the ibt detail record.</summary>
            <seealso cref="T:Pastel.Evolution.SerialNumber" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.Project">
            <summary> Gets or sets the Project.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.ProjectID">
            <summary> Gets or sets the Project ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.Lot">
            <summary> Gets or sets the Lot.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.LotID">
            <summary> Gets or sets the Lot ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.IssuedSerialGroupID">
            <summary> Gets or sets the Issued Serial Group ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.ReceivedSerialGroupID">
            <summary> Gets or sets the Received Serial Group ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.DamagedSerialGroupID">
            <summary> Gets or sets the Damaged Serial Group ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.VarianceSerialGroupID">
            <summary> Gets or sets the Variance Serial Group ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.QuantityIssued">
            <summary>Gets or sets the quantity issued.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.QuantityReceived">
            <summary>Gets or sets the quantity received.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.QuantityDamaged">
            <summary>Gets or sets the quantity damaged.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.QuantityVariance">
            <summary>Gets or sets the quantity variance.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.QuantityOutstanding">
            <summary>Gets the quantity of stock that remains to be received.</summary>
            <remarks>The calculation is Issued - (Received + Variance + Damaged).</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.IssueCost">
            <summary>Gets the issue cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.ReceiveCost">
            <summary>Gets the receiving cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.xAttribute">
            <summary>Gets or sets the line attribute xml.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.AttributeTxQuantityGroup">
            <summary>Gets the collection of transaction quantities pertaining to the inter-branch transfer detail record.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.AttributeGroup">
            <summary>Indicates the attribute group of the inventory item specified on the inter-branch transfer detail line.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.NextSerialGroupID">
            <summary>Gets the maximum serial group id.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.Transfer">
            <summary>Gets the IBT Transfer to which the detail record belongs.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLine.QuantityType">
            <summary>Gets the current quantity type reference.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.ListAttributeQuantities">
            <summary>Returns the IBT line attribute quantity group.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.SetAttributeQuantities(System.Double,System.Double,System.Double,System.Double,Pastel.Evolution.AttributeTypeValue[])">
            <summary>Set the inventory item attribute quantities.</summary>
            <param name="issued">Issued quantity.</param>
            <param name="received">Received quantity.</param>
            <param name="damaged">Damaged quantity.</param>
            <param name="variance">Variance quantity.</param>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.ReturnTransactionQtyIndex(Pastel.Evolution.AttributeTypeValue[])">
            <summary>Returns the transaction quantity index for the specfic attribute type and value.</summary>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.ResetTransactionQty(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>Set transaction quantities for an existing attribute type and value.</summary>
            <param name="issued">Issued.</param>
            <param name="received">Received.</param>
            <param name="damaged">Damaged.</param>
            <param name="variance">Variance.</param>
            <param name="index">Index.</param>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.AddTransactionQty(System.Double,System.Double,System.Double,System.Double,Pastel.Evolution.AttributeTypeValue[])">
            <summary>Set transaction quantities for an existing attribute type and value.</summary>
            <param name="issued">Issued.</param>
            <param name="received">Received.</param>
            <param name="damaged">Damaged.</param>
            <param name="variance">Variance.</param>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.ReCalcLineQuantity">
            <summary>Recalculate IBT line quantities pertaining attributes.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.Validate">
            <summary>Validates the transaction without attempting to post.</summary>
            <returns>The Validate.</returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine._Copy">
            <summary>
            Experimental Method
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.ResetQuantities">
            <summary>
            Reset all document line quantities
            </summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLine.Detach">
            <summary>
            Detaches the object from its database record
            </summary>
        </member>
        <member name="T:Pastel.Evolution.WarehouseIBTLineCollection">
            <summary>
            Represents a collection of Warehouse IBT Lines, typically owned by a given Inter Branch Transfer record.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.WarehouseIBTLineCollection.CollectionChanged">
            <summary>
            Occurs when detail records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseIBTLineCollection.Item(System.Int32)">
            <summary>
            Gets a warehouseIBT detail object by its zero-based index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLineCollection.Add(Pastel.Evolution.WarehouseIBTLine)">
            <summary>
            Appends a Warehouse Transfer Line object to the IBT.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLineCollection.Save">
            <summary>
            Calls the Save method on each detail record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLineCollection.Process">
            <summary>
            Calls the Process method on each detail record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLineCollection.Remove(Pastel.Evolution.WarehouseIBTLine)">
            <summary>
            Removes the specified WarehouseIBT detail line from the collection
            </summary>
            <param name="detailRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.WarehouseIBTLineCollection.RemoveAt(System.Int32)">
            <summary>
            Removes a detail record using its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:Pastel.Evolution.InventoryQty">
            <summary>
            Represents a collection of inventory quantities.
            <seealso cref="T:Pastel.Evolution.InventoryQtyCollection"/>
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.ID">
            <summary>
            Gets the record ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.LongID">
            <summary>
            Transitional accessor.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.InventoryItem">
            <summary>Gets or sets the inventory item this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.Warehouse">
            <summary>Gets or sets the warehouse this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.Lot">
            <summary>Gets or sets the lot this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.BinLocation">
            <summary>Gets or sets the bin this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.QtyOnHand">
            <summary>Gets the quantity on hand this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.QtyOnSalesOrder">
            <summary>Gets the quantity on sales order this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.QtyOnPurchaseOrder">
            <summary>Gets the quantity on purchase order this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.QtyReserved">
            <summary>Gets the reserved quantity this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.QtyFree">
            <summary>Gets the free quantity this detail belongs to.</summary>
            <remarks>Calculation: QtyOnHand - QtyReserved - QtyWIP</remarks>
            <seealso cref="P:Pastel.Evolution.InventoryQty.QtyWIP" />
            <seealso cref="P:Pastel.Evolution.InventoryQty.QtyReserved" />
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.QtyWIP">
            <summary>Gets the quantity of stock on active jobs this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.QtyIBTToIssue">
            <summary>Gets the quantity of stock to issue on IBT's this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.QtyIBTToReceive">
            <summary>Gets the quantity of stock to receive on IBT's this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.QtyIBTIssued">
            <summary>Gets the quantity of stock issued on IBT's this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.QtyIBTReceived">
            <summary>Gets the quantity of stock received on IBT's this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryQty.AttributeItemQuantityGroup">
            <summary>Gets the collection of item quantities pertaining to the inventory item record.</summary>
            <seealso cref="T:AttributeQuantity" />
        </member>
        <member name="M:Pastel.Evolution.InventoryQty.OnSave">
            <summary>
            Saves the individual stock quantities.  Note that saving the inventory item automatically saves the entire stock quantity collection.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryQty.OnDelete">
            <summary>Removes the quantity record from the stock item only, not from the database.  Save the stock item after calling Delete to delete the line from the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryQty.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryQty.ListByStockItemID(System.Int32)">
            <summary>Gets a list of stock quantities by stock item ID.</summary>
            <param name="id">Specifies the stock item id.</param>
            <returns>The ListByStockItemID.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryQty.ListByStockItemAndWarehouseID(System.Int32,System.Int32)">
            <summary>Gets a list of stock quantities by stock item ID and Warehouse ID.</summary>
            <param name="stockID">Specifies the stock item id.</param>
            /// <param name="warehouseID">Specifies the warehouse id.</param>
            <returns>The ListByStockItemAndWarehouseID.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryQty.ListByStockItemAndLotID(System.Int32,System.Int32)">
            <summary>Gets a list of stock quantities by stock item ID and Lot ID.</summary>
            <param name="stockID">Specifies the stock item id.</param>
            /// <param name="warehouseID">Specifies the lot id.</param>
            <returns>The ListByStockItemAndLotID.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryQty.ListByStockItemAndWarehouseIDAndLotID(System.Int32,System.Int32,System.Int32)">
            <summary>Gets a list of stock quantities by stock item ID and Warehouse ID and Lot ID.</summary>
            <param name="stockID">Specifies the stock item id.</param>
            <param name="warehouseID">Specifies the warehouse id.</param>
            <param name="lotID">Specifies the lot id.</param>
            <returns>The ListByStockItemAndWarehouseIDAndLotID.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryQty.ListByStockItemAndWarehouseIDAndBinID(System.Int32,System.Int32,System.Int32)">
            <summary>Gets a list of stock quantities by stock item ID and Warehouse ID and Bin ID.</summary>
            <param name="stockID">Specifies the stock item id.</param>
            <param name="warehouseID">Specifies the warehouse id.</param>
            <param name="lotID">Specifies the bin id.</param>
            <returns>The ListByStockItemAndWarehouseIDAndBinID.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryQty.Find(System.String)">
            <summary>Finds a stock item quantity ID.</summary>
            <param name="criteria">The SQL criteria to apply to the search, e.g. StockID = 5 and WhseID = 0</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryQty.FindByStockIDAndWarehouseID(System.Int32,System.Int32)">
            <summary>Attempts to find an inventory item quantity line by its stockID and warehousID and returns its ID.</summary>
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="T:Pastel.Evolution.InventoryQtyCollection">
            <summary>
            Represents a collection of inventory quantity records.
            </summary>
            <seealso cref="T:Pastel.Evolution.InventoryQty"/>
        </member>
        <member name="P:Pastel.Evolution.InventoryQtyCollection.Item(System.String)">
            <summary>
            Gets the inventory quantity object relating to the current item and the warehouse code specified.
            </summary>
            <param name="warehouseCode"></param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.InventoryQtyCollection.Item(System.Int32)">
            <summary>
            Gets a warehouse context by warehouse ID, not by index.
            </summary>
            <param name="warehouseID"></param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.InventoryCosts">
            <summary>
            Represents a collection of inventory costs.
            <seealso cref="T:Pastel.Evolution.InventoryCostsCollection"/>
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.ID">
            <summary>
            Gets the record ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.LongID">
            <summary>
            Transitional accessor.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.InventoryItem">
            <summary>Gets or sets the inventory item this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.Warehouse">
            <summary>Gets or sets the warehouse this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.Lot">
            <summary>Gets or sets the lot this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.AverageUnitCost">
            <summary>Gets or sets the average unit cost this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.LatestUnitCost">
            <summary>Gets or sets the latest unit cost this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.StandardUnitCost">
            <summary>Gets or sets the standard unit cost this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.LowestUnitCost">
            <summary>Gets or sets the lowest unit cost this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.HighestUnitCost">
            <summary>Gets or sets the highest unit cost this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.LastGRVCost">
            <summary>Gets or sets the last grv cost this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.IsWarehouseTracked">
            <summary>Gets or sets whether or not the item is tracked in warehouses.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.IsServiceItem">
            <summary>Gets or sets whether or not the item is tracked as a service item.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryCosts.IsLotTracked">
            <summary>Gets or sets whether or not the item is tracked as a lot item.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryCosts.OnSave">
            <summary>
            Saves the individual stock costs.  Note that saving the inventory item automatically saves the entire stock cost collection.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryCosts.OnDelete">
            <summary>Removes the cost record from the stock item only, not from the database.  Save the stock item after calling Delete to delete the line from the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryCosts.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryCosts.ListByStockItemID(System.Int32)">
            <summary>Gets a list of stock costs by stock item ID.</summary>
            <param name="id">Specifies the stock item id.</param>
            <returns>The ListByStockItemID.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryCosts.ListByStockItemAndWarehouseID(System.Int32,System.Int32)">
            <summary>Gets a list of stock costs by stock item ID and Warehouse ID.</summary>
            <param name="stockID">Specifies the stock item id.</param>
            /// <param name="warehouseID">Specifies the warehouse id.</param>
            <returns>The ListByStockItemAndWarehouseID.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryCosts.ListByStockItemAndLotID(System.Int32,System.Int32)">
            <summary>Gets a list of stock costs by stock item ID and Lot ID.</summary>
            <param name="stockID">Specifies the stock item id.</param>
            /// <param name="warehouseID">Specifies the lot id.</param>
            <returns>The ListByStockItemAndLotID.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryCosts.ListByStockItemAndWarehouseIDAndLotID(System.Int32,System.Int32,System.Int32)">
            <summary>Gets a list of stock costs by stock item ID and Warehouse ID and Lot ID.</summary>
            <param name="stockID">Specifies the stock item id.</param>
            <param name="warehouseID">Specifies the warehouse id.</param>
            <param name="lotID">Specifies the lot id.</param>
            <returns>The ListByStockItemAndWarehouseIDAndLotID.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryCosts.Find(System.String)">
            <summary>Finds a stock item cost ID.</summary>
            <param name="criteria">The SQL criteria to apply to the search, e.g. StockID = 5 and WhseID = 0</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryCosts.FindByStockIDAndWarehouseID(System.Int32,System.Int32)">
            <summary>Attempts to find an inventory item cost line by its stockID and warehousID and returns its ID.</summary>
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="T:Pastel.Evolution.InventoryCostsCollection">
            <summary>
            Represents a collection of inventory cost records.
            </summary>
            <seealso cref="T:Pastel.Evolution.InventoryCosts"/>
        </member>
        <member name="P:Pastel.Evolution.InventoryCostsCollection.Item(System.String)">
            <summary>
            Gets the inventory cost object relating to the current item and the warehouse code specified.
            </summary>
            <param name="warehouseCode"></param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.InventoryCostsCollection.Item(System.Int32)">
            <summary>
            Gets a inventory cost by warehouse ID, not by index.
            </summary>
            <param name="warehouseID"></param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.InventoryGroup">
            <summary>
            Represents an inventory group.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryGroup.#ctor">
            <summary>Creates a new instance of  a group.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryGroup.#ctor(System.Int32)">
            <summary>Creates a new instance of  a group.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryGroup.#ctor(System.String)">
            <summary>Creates a new instance of  a group.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryGroup.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryGroup.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryGroup.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryGroup.Find(System.String)">
            <summary>Finds an inventory group ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. StGroup = 'INT001' or Description like '%Internal%'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryGroup.FindByCode(System.String)">
            <summary>
            Attempts to find an inventory group by using its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the group.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.InventoryGroup.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.InventoryGroup.Get(System.String)">
            <summary>Returns the [first] group object with the code specified; otherwise, returns null.</summary>
            <param name="criteria"> Eg. Code like '1_B%'</param>
            <seealso cref="M:Pastel.Evolution.InventoryGroup.Find(System.String)" />
        </member>
        <member name="M:Pastel.Evolution.InventoryGroup.GetByCode(System.String)">
            <summary>Returns a group object corresponding to the code specified; otherwise, returns null.</summary>
            <param name="code">
            </param>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.Code">
            <summary>Gets or sets the group's code.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.Description">
            <summary>Gets or sets the group's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.PurchasesAccount">
            <summary>Gets or sets the group's overriding purchases GL account.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.PurchasesAccountID">
            <summary>Gets or sets the group's overriding purchases GL account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.SalesAccount">
            <summary>Gets or sets the group's overriding sales GL account.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.SalesAccountID">
            <summary>Gets or sets the group's overriding sales GL account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.CostOfSalesAccount">
            <summary>Gets or sets the group's overriding cost of sales GL account.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.CostOfSalesAccountID">
            <summary>Gets or sets the group's overriding cost of sales GL account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.StockAccount">
            <summary>Gets or sets the group's overriding stock GL account.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.StockAccountID">
            <summary>Gets or sets the group's overriding stock GL account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.CostVarianceAccount">
            <summary>Gets or sets the group's overriding cost variance GL account.</summary>
            <remarks>In contrast to purchases cost variance, this account is used to account for variances encountered in latest or standard cost calculations. Warehouse transfer cost variations are posted to the overriding adjusment account or the credit ledger account on the warehouse transfer transaction code.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.CostVarianceAccountID">
            <summary>Gets or sets the group's overriding cost variance GL account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.PurchasesCostVarianceAccount">
            <summary>Gets or sets the group's overriding purchases cost variance GL account.</summary>
            <remarks>In contrast to the cost variance account, the purchases cost variance account is used only to account for variances between GRV and supplier invoice cost prices.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.PurchasesCostVarianceAccountID">
            <summary>Gets or sets the group's overriding purchases cost variance GL account ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.AdjustmentAccount">
            <summary>Gets or sets the group's overriding adjustment GL account.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.AdjustmentAccountID">
            <summary>Gets or sets the group's overriding adjustment GL account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.WipAccount">
            <summary>Gets or sets the group's overriding work-in-progress GL account.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.WipAccountID">
            <summary>Gets or sets the group's overriding work-in-progress GL account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.SalesMtrxID">
            <summary>Gets or sets the ID of the sales discount matrix row associated with the inventory group.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.SalesMatrix">
            <summary>Gets or sets the inventory group's discount matrix column .Gets or sets the sales discount matrix record associated with the inventory group.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.PurchasesMtrxID">
            <summary>Gets or sets the ID of the purchases discount matrix row associated with the inventory group.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryGroup.PurchasesMatrix">
            <summary>Gets or sets the inventory group's discount matrix column .Gets or sets the purchases discount matrix record associated with the inventory group.</summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryItem">
            <summary>
            Respresents an inventory item, typically products sold or services rendered.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem._Refresh">
            <summary>
            Experimental method.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.#ctor">
            <summary>Creates a new instance of a stock item.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.#ctor(System.Int32)">
            <summary>Creates a new instance of  a stock item.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.#ctor(System.String)">
            <summary>Creates a new instance of  a stock item.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem._Exists(System.String)">
            <summary>
            Experimental method.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Module">
            <summary>Gets the stock item's Evolution module.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Code">
            <summary>Gets or sets the item code.  When segmented, the full item code is returned; however, when setting the code, be sure to only set the item's short code.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.ShortCode">
            <summary>Gets the stock item's short code.</summary>
            <remarks>When segmented, this value will represent the item code without any segmented suffices.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Description">
            <summary>Gets or sets the stock item's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Active">
            <summary>Gets or sets the record's operational state.  Inactive items cannot be used in further transactions.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.Find(System.String)">
            <summary>Finds a stock item ID.</summary>
            <param name="criteria">The SQL criteria to apply to the search, e.g. Code = 'ABC00112' or Description_1 like '%MOLD%'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.FindByCode(System.String)">
            <summary>Attempts to find an inventory item by its code and returns its ID.</summary>
            <param name="code">The code used to lookup the account.</param>
            <seealso cref="M:Pastel.Evolution.InventoryItem.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria"> Eg. Code = 'STO0021' or Description like '%Stone%'</param>
            <seealso cref="M:Pastel.Evolution.InventoryItem.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.GetByCode(System.String)">
            <summary>Returns a inventory item object corresponding to the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem._Select(System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.List(System.String)">
            <summary>Lists stock items for the supplied criteria.</summary>
            <param name="criteria">
            </param>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.List(System.String,System.String)">
            <summary>Lists stock items for the supplied criteria.</summary>
            <remarks>Table aliases to be used in criteria: Core, Bin</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Code like '1___'</param>
            <param name="sortOrder">The SQL order by clause to use, e.g. ItemActive desc, Code</param>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Description_2">
            <summary>Gets or sets the stock item's 2nd description.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Description_3">
            <summary>Gets or sets the stock item's 3rd description.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.UnitCost">
            <summary>Gets the unit cost according to chosen costing method set in inventory preferences.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.AverageUnitCost" />
            <seealso cref="P:Pastel.Evolution.InventoryItem.LatestUnitCost" />
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.CostingMethod">
            <summary>Gets the unit cost according to chosen costing method set in inventory preferences.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.AverageUnitCost">
            <summary>Gets the stock item's average unit cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.LatestUnitCost">
            <summary>Gets the stock item's latest unit cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.StandardUnitCost">
            <summary>Gets the stock item's standard unit cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.LowestUnitCost">
            <summary>Gets the stock item's lowest unit cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.HighestUnitCost">
            <summary>Gets the stock item's highest unit cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.LastGrvCost">
            <summary>Gets or sets the stock item's last grv cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.QtyOnHand">
            <summary>Gets the stock item's quantity on hand.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.QtyOnSalesOrder">
            <summary>Gets the stock item's quantity on sales order.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.QtyOnPurchaseOrder">
            <summary>Gets the stock item's quantity on purchase order.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.QtyReserved">
            <summary>Gets the stock item's reserved quantity.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.QtyFree">
            <summary>Gets the stock item's free quantity.</summary>
            <remarks>Calculation: QtyOnHand - QtyReserved - QtyWIP</remarks>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyWIP" />
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyReserved" />
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.QtyWIP">
            <summary>Gets the quantity of stock on active jobs (work in progress).</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Group">
            <summary>Gets or sets the stock item's group.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Image">
            <summary>Gets the inventory image collection representing the images liked to the stock item.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Note">
            <summary>Gets the inventory note collection representing the note liked to the stock item.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.ItemCategory">
            <summary>Gets or sets the stock item's category.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.PackCode">
            <summary>Gets or sets the stock item's pack code.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.DefaultInvoicingTaxType">
            <summary>Gets or sets the stock item's default invoicing tax type.</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.DefaultCreditNoteTaxType">
            <summary>Gets or sets the stock item's default credit note tax type.</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.DefaultGoodsReceivedTaxType">
            <summary>Gets or sets the stock item's default tax type for goods received notes.</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.DefaultReturnToSupplierTaxType">
            <summary>Gets or sets the stock item's default tax type used on returns to supplier .</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.DefaultBarCode">
            <summary>Gets the stock item's default bar code.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.AllowNegativeStock">
            <summary>Gets or sets whether or not the item allows for negative stock.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.SellingPrice1">
            <summary>Gets or sets the exclusive selling price belonging to the "first" price list in the system (default: "Price List 1").</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.SellingPrice2">
            <summary>Gets or sets the exclusive selling price belonging to the "second" price list in the system (default: "Price List 2").</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.SellingPrice3">
            <summary>Gets or sets the exclusive selling price belonging to the "third" price list in the system (default: "Price List 3").</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.DefaultSellingPrice">
            <summary>Gets the stock item's default exclusive selling price (belonging to the default price list).</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.PreferredSupplier">
            <summary>Gets the stock item's preferred supplier.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.IsWarehouseTracked">
            <summary>Gets or sets whether or not the item is tracked in warehouses.</summary>
            <remarks>If set true, and no warehouses are explicitly added to the WarehouseContexts collection, the item will get linked to the default warehouses.</remarks>
            <seealso cref="T:Pastel.Evolution.WarehouseContext" />
            <exception cref="T:Pastel.Evolution.EvolutionException">An existing item's warehouse status may not be altered.</exception>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.IsServiceItem">
            <summary>Gets or sets whether or not the item is a service item.</summary>
            <remarks>Service items are sold or purchased without regard for a quantity on hand.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.IsSerialTracked">
            <summary>Gets or sets whether or not the stock item is tracked by serial numbers.</summary>
            <remarks>When set true,  IsStrictSerialTracked also defaults to true.</remarks>
            <seealso cref="P:Pastel.Evolution.InventoryItem.IsStrictSerialTracked" />
            <exception cref="T:Pastel.Evolution.EvolutionException">An existing item's serial tracking status may not be altered.</exception>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.AllowDuplicateSerialNumber">
            <summary>Gets or sets whether the serial number item allows for duplicate serial numbers.</summary>
            <remarks>Item needs to be set as a non-strict serial number item to allow for duplicate serial numbers.</remarks>
            <seealso cref="P:Pastel.Evolution.InventoryItem.IsStrictSerialTracked" />
            <exception cref="T:Pastel.Evolution.EvolutionException">An existing item's serial tracking status may not be altered.</exception>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.IsLotTracked">
            <summary>Gets or sets whether or not the stock item is tracked in lots.</summary>
            <exception cref="T:Pastel.Evolution.EvolutionException">An existing item's lot tracking status may not be altered.</exception>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem._LotsExpire">
            <summary>Gets or sets whether or not the stock item is tracked in lots.</summary>
            <exception cref="T:Pastel.Evolution.EvolutionException">An existing item's lot tracking status may not be altered.</exception>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.SalesMtrxID">
            <summary>Gets or sets the ID of the sales discount matrix row associated with the inventory item.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.SalesMatrix">
            <summary>Gets or sets the inventory item's discount matrix column .Gets or sets the sales discount matrix record associated with the inventory item.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.PurchasesMtrxID">
            <summary>Gets or sets the ID of the purchases discount matrix row associated with the inventory item.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.PurchasesMatrix">
            <summary>Gets or sets the inventory item's discount matrix column .Gets or sets the purchases discount matrix record associated with the inventory item.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.IsStrictSerialTracked">
            <summary>Gets or sets whether or not the stock item is serial-tracked using the "strict" method.</summary>
            <remarks>Strict serial number tracking means that for every unit moved, a serial number must be supplied.</remarks>
            <exception cref="T:Pastel.Evolution.EvolutionException">An existing item's serial tracking configuration may not be altered.</exception>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.IsCommissionable">
            <summary>Gets or sets whether or not the stock item is commissionable.</summary>
            <remarks>Commissionable items contribute sales &amp; profit values to the sales representative report.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.IsSegmented">
            <summary>Whether or not the item is made up of segments.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.Segments" />
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.IsAttribute">
            <summary>Gets whether or not the stock item is an attribute item.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.ListItemAttributes">
            <summary>Returns the item attribute types and values.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.ListItemAttributeQuantities">
            <summary>Returns the item attribute quantities.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.ListItemAttributeQuantitiesGrouped">
            <summary>Returns the item attribute quantities grouped by the attribute collection.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.ItemAttributeQtyOnHand(System.String,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>Returns the item attribute quantities grouped by the attribute collection.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.UpdateItemAttributeQtyJCWip(System.Data.SqlTypes.SqlXml,System.Int32,System.Int32,System.Int32)">
            <summary>Update the item attribute job costing wip quantity at the time of placing a job card.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.IsUnitsOfMeasure">
            <summary>Gets or sets whether or not the item is a units of measure item.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.LinkedWarehouse(System.String)">
            <summary>Validate if the stock item is linked to a specific warehouse.</summary>
            <param name="warehouseCode">Specifies the warehouse code of the existing stock item.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.ImageArray">
            <summary>Returns the inventory image collection represented as an image array.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.ListImages">
            <summary>Returns the inventory image collection represented in a data table format.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.SetItemImage(System.String[])">
            <summary>Set the inventory item images to be saved for the item.</summary>
            <param name="args">Image file path.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.SetItemImages(System.String[])">
            <summary>Set the inventory item images to be saved for the item.</summary>
            <param name="imagePath">Collection of image file paths.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.SetUserField(System.String,System.Object)">
            <summary> Sets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <param name="fieldValue">Specifies the user defined field value.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryItem.GetUserField(System.String)">
            <summary> Gets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <returns>The user defined field value.</returns>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Quantity">
            <summary>Gets the inventory quantity collection representing the inventory item quantity.</summary>
            <seealso cref="T:Pastel.Evolution.InventoryQty" />
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Cost">
            <summary>Gets the inventory cost collection representing the inventory item cost.</summary>
            <seealso cref="T:Pastel.Evolution.InventoryCosts" />
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.WarehouseContexts">
            <summary>Gets the stock item's warehouse context collection.</summary>
            <remarks>Items are selectively linked to one or more warehouses.</remarks>  
            <remarks>These links form a context of stock holding in the sense that each warehouse contains a certain quantity of stock and more or more customised attributes.</remarks>
            <remarks>When moving stock, a warehouse context needs to be supplied.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Item(Pastel.Evolution.Warehouse)">
            <summary>Gets the stock item's warehouse context.</summary>
            <remarks>Items are selectively linked to one warehouse only.</remarks>  
            <remarks>These links form a context of stock holding in the sense that each warehouse contains a certain quantity of stock and more or more customised attributes.</remarks>
            <remarks>When moving stock, a warehouse context needs to be supplied.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Item(System.Int32)">
            <summary>Gets the stock item's warehouse context.</summary>
            <remarks>Items are selectively linked to one warehouse only.</remarks>  
            <remarks>These links form a context of stock holding in the sense that each warehouse contains a certain quantity of stock and more or more customised attributes.</remarks>
            <remarks>When moving stock, a warehouse context needs to be supplied.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.SellingPrices">
            <summary>Gets the stock item's selling price collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Barcode">
            <summary>Gets the stock item's barcode collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Segments">
            <summary>Gets the stock item's segment collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.Attributes">
            <summary>Gets the stock item's attribute collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryItem.LinkedSupplier">
            <summary>Gets the stock item's linked supplier collection.</summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryTransaction">
            <summary>
            Represents an inventory transaction.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.#ctor">
            <summary>Creates a new instance of  a transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.Validate">
            <summary>Validates the transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.onPostingGLCostVarianceDebit(Pastel.Evolution.GLTransaction)">
            <param name="tran"></param>
            <returns>Returns a value indicating whether the transaction has been handled already</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.onPostingGLCostVarianceCredit(Pastel.Evolution.GLTransaction)">
            <param name="tran"></param>
            <returns>Returns a value indicating whether the transaction has been handled already</returns>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Module">
            <summary>Gets the transaction's Evolution module.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Account">
            <summary>Gets or sets the transaction's account.</summary>
            <remarks>The Account and InventoryItem properties may be used interchangeably.</remarks>
            <seealso cref="P:Pastel.Evolution.InventoryTransaction.AccountID" />
            <seealso cref="P:Pastel.Evolution.InventoryTransaction.InventoryItem" />
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Unit">
            <summary>
            Gets or sets the inventory unit om measure to use on this transaction.  Note that this is not kept in the database, on
            recalling a transaction, this will always be null.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.InventoryItem">
            <summary>Gets or sets the transaction's stock item.</summary>
            <remarks>The InventoryItem and Account properties may be used interchangeably.</remarks>
            <seealso cref="P:Pastel.Evolution.InventoryTransaction.Account" />
            <seealso cref="P:Pastel.Evolution.InventoryTransaction.AccountID" />
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.AccountID">
            <summary>Gets or sets the transaction's account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Date">
            <summary>Gets or sets the transaction date.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.TransactionCode">
            <summary>Gets or sets the transaction code .</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.TransactionCodeID">
            <summary>Gets or sets the transaction code id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.OrderNo">
            <summary>Gets or sets the transaction's order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.ExtOrderNo">
            <summary>Gets or sets the transaction's external order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Project">
            <summary>Gets or sets the transaction's project.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.ProjectID">
            <summary>Gets or sets the transaction's project id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.BinLocation">
            <summary>Gets or sets the transaction's bin location.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.BinLocationID">
            <summary>Gets or sets the transaction's bin location id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Description">
            <summary>Gets or sets the transaction's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Reference">
            <summary>Gets or sets the transaction's reference.</summary>
            <remarks>This is a required field.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Reference2">
            <summary>Gets or sets the transaction's 2nd reference.</summary>
            <remarks>This field is optional.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Debit">
            <summary>Gets the debit value posted by the transaction.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Credit">
            <summary>Gets the credit value posted by the transaction.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.TaxRate">
            <summary>Gets or sets the transaction's tax type.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.TaxRateID">
            <summary>Gets or sets the transaction's tax type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Tax">
            <summary>Gets or sets the transaction tax amount (automatically rounded to 2 decimals and always posted positive).</summary>
            <remarks>There typically won't be tax on an inventory adjustment.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Audit">
            <summary>Gets the transaction's audit number.</summary>
            <remarks>The audit number is 0 when unposted.  After posting, it will reflect the transaction's posted audit number.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.ModID">
            <summary>Gets or sets the transaction's module identifier.</summary>
            <remarks>Used internally by Evolution to distinguish transaction origin.</remarks>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.SetDocumentKey(System.Int64)">
            <param name="id">
            </param>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.StockingUnitQuantity">
            <summary>Gets or sets the transaction quantity.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Quantity">
            <summary>Gets or sets the transaction quantity.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.QuantityInvoiced">
            <summary>Gets or sets the transaction quantity invoiced.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.QuantityWIP">
            <summary>Gets or sets the work-in-progress transaction quantity.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.GLAccountID">
            <summary>Gets or sets the work-in-progress transaction quantity.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.AdditionalCost">
            <summary>Gets or sets the total additional cost to post in this transaction.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.CurrencyID">
            <summary>Gets or sets the account's currency id. 0 indicates local currency.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Currency">
            <summary>Gets or sets the account's currency. null indicates home currency.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Operation">
            <summary>Gets or sets the transaction operation.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryTransaction.Quantity" />
            <seealso cref="P:Pastel.Evolution.InventoryTransaction.UnitCost" />
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.UnitCost">
            <summary>Gets or sets the transaction's unit cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.UnitSellingPrice">
            <summary>
            Used by inventory documents.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.WarehouseID">
            <summary>Gets or sets the transaction's warehouse id.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Warehouse">
            <summary>Gets or sets the transaction's warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.JobCard">
            <summary>
            Gets or sets the JobCard associated with this transaction.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.JobCardID">
            <summary>
            Gets the JobCard ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.PostToGL">
            <summary>Enables or disables posting to the general ledger.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.OverrideDebitAccount">
            <summary>Gets or sets the GL account to use when posting the transaction's debit leg, overriding the debit account configured in the transaction type.</summary>
            <remarks>When posting a negative quantity or cost, the debit account will actually be credited; I.e. this represents the inventory account.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.OverrideCreditAccount">
            <summary>Gets or sets the GL account to use when posting the transaction's credit leg, overriding the credit account configured in the transaction type.</summary>
            <remarks>When posting a negative quantity or cost, the credit account will actually be debited.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.SerialNumbers">
            <summary>Gets the transaction's serial number collection.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.IsSerialTracked" />
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.AttributeTxQuantityGroup">
            <summary>Gets the transaction's serial number collection.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.IsSerialTracked" />
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.AttributeGroup">
            <summary>Indicates the attribute group of the inventory item specified on the inter-branch transfer detail line.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Lot">
            <summary>Gets the transaction's assigned lot.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.IsLotTracked" />
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.LotMovementParameters">
            <summary>
            Since the inventory transactions posts the lot transaction, supply it with some parameters.
            This may be populated freely but will obviously have no effect unless a Lot is specified.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.Representative">
            <summary>Gets or sets the sales representative</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.RepresentativeID">
            <summary>Gets or sets the sales representative ID.</summary>
            <remarks>Use this method if the representative ID is readily available to gain a slight performance benefit.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.xAttribute">
            <summary>Gets or sets the attribute object.</summary>
            <remarks>Use this method if the attribute object is readily available to gain a slight performance benefit.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.UpdateLatestCost">
            <summary>Gets or sets whether latest cost should be updated or not.</summary>
            <remarks>Internal use only.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.UpdateManualCost">
            <summary>Gets or sets whether manual cost should be updated or not.</summary>
            <remarks>Internal use only.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.IsCostAdjustment">
            <summary>Gets whether the transaction is a cost adjustment transaction.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.IsCostPerWarehouse">
            <summary>Gets whether inventory defaults are setup as cost-per-warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.IsWarehouseItem">
            <summary>Gets whether the inventory item is warehouse tracked or not.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryTransaction.IsCostAdjustmentIteration">
            <summary>Gets whether a warehouse cost adjustment iteration should be processed.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.List(System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the PostST table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Reference like '1___' and Audit_No = 10.0005</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.Find(System.String)">
            <summary>Finds a transaction ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. Reference = 'INV001' or Description like '%Invoice%'</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.SetAttributeQuantities(System.Double,Pastel.Evolution.AttributeTypeValue[])">
            <summary>Set attribute quantities for the transaction.</summary>
            <param name="quantity">Quantity.</param>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.SetAttributeQuantities(System.Double,System.Collections.Generic.List{Pastel.Evolution.AttributeTypeValue})">
            <summary>Set attribute quantities for the transaction.</summary>
            <param name="quantity">Quantity.</param>
            <param name="list">List of Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.ListAttributeQuantities">
            <summary>Returns the transaction attribute quantity group.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.ValidateNegativeAttributeQuantities(System.String[]@)">
            <summary>Validate for negative attribute quantities per document line.</summary>
            /// <param name="arrayNegativeAttributes">ArrayNegativeAttributes.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.AddTransactionQty(System.Double,Pastel.Evolution.AttributeTypeValue[])">
            <summary>Set transaction quantities for an existing attribute type and value.</summary>
            <param name="quantity">Quantity.</param>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.ResetTransactionQty(System.Double,System.Int32,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Double}}@)">
            <summary>Set transaction quantities for an existing attribute type and value.</summary>
            <param name="quantity">Quantity.</param>
            <param name="index">Index.</param>
        </member>
        <member name="M:Pastel.Evolution.InventoryTransaction.ReCalcLineQuantity">
            <summary>Recalculate transaction quantity pertaining attributes.</summary>
        </member>
        <member name="T:Pastel.Evolution.Lot">
            <summary>
            Represents a distinct inventory lot.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Lot._Refresh">
            <summary>
            Experimental method.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Lot.ExpiryDate">
            <summary>
            Gets or sets the lot's expiry date.  If not set, DateTime.MaxValue is returned.
            Set to Defaults.NullDate to cancel.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Lot.Status">
            <summary>
            Gets or sets the lot's status.  Note that new lots will always default to the receiving lot configured on the item.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Lot.WarehouseContexts">
            <summary>
            Gets the Lot's warehouse context collection.  Bear in mind that unless has actually been used in a given warehouse,
            there will be no warehouse context for it and null will be returned.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Lot.CheckQtyAvailable(System.Double,System.Int32,System.Double@)">
            <summary>
            Checks whether the required quantity is available.  Returns 0 if availability exceeds required quantity or
            else returns the available quantity.
            </summary>
            <param name="required"></param>
            <param name="warehouseID"></param>
            <param name="available"></param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.Lot.QtyWIP">
            <summary>Gets the quantity of stock on active jobs and in manufacturing (work in progress).</summary>
        </member>
        <member name="P:Pastel.Evolution.Lot.QtyFree">
            <summary>Gets the lot's free quantity.</summary>
            <remarks>Calculation: QtyOnHand - QtyReserved - QtyWIP</remarks>
            <remarks>Service items will always report int.MaxValue.</remarks>
            <seealso cref="P:Pastel.Evolution.Lot.QtyWIP" />
            <seealso cref="P:Pastel.Evolution.Lot.QtyReserved" />
        </member>
        <member name="M:Pastel.Evolution.Lot.Find(System.String)">
            <summary>
            Finds the first record matching the criteria supplied
            </summary>
            <param name="criteria">E.g. Code = 'abc'</param>
            <returns>The id of the record</returns>
        </member>
        <member name="M:Pastel.Evolution.Lot.Save(System.String,System.DateTime)">
            <summary>
            Saves modifications to the lot record, notably the status and expiry date, if applicable.
            When changing a lot's status, a transaction gets posted.  The supplied parameters are used in that transaction.
            </summary>
            <param name="statusTransferRef">The reference to post to the lot status transfer.  Defaults to an empty string.</param>
            <param name="statusTransferDate">The date at which to post the lot status transfer.  Defaults to the current date (date at which the lot is instantiated).</param>
        </member>
        <member name="M:Pastel.Evolution.Lot.List(System.String,System.String)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="criteria">e.g. SNStockLink = 100 and CurrentLoc = (int)SerialNumberLocation.InStock </param>
            <param name="sortOrder">The SQL <b>order by</b> clause.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Lot.List(Pastel.Evolution.InventoryItem,Pastel.Evolution.LotStatus)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="item">The inventory item to which the serial numbers belong.</param>
            <param name="status">The current status of the lot on which to filter.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Lot._Select(System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.LotContext">
            <summary>
            Represents a distinct inventory lot.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.LotContext.LotContextCollection.Item(System.Int32)">
            <summary>
            Gets a lot context by warehouse ID, not by index.
            </summary>
            <param name="warehouseID"></param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.LotContext.QtyWIP">
            <summary>Gets the quantity of stock on active jobs and in manufacturing (work in progress).</summary>
        </member>
        <member name="P:Pastel.Evolution.LotContext.QtyFree">
            <summary>Gets the lot's free quantity.</summary>
            <remarks>Calculation: QtyOnHand - QtyReserved - QtyWIP</remarks>
            <remarks>Service items will always report int.MaxValue.</remarks>
            <seealso cref="P:Pastel.Evolution.LotContext.QtyWIP" />
            <seealso cref="P:Pastel.Evolution.LotContext.QtyReserved" />
        </member>
        <member name="T:Pastel.Evolution.LotTransaction">
            <summary>
            Represents an inventory lot movement.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.LotTransaction.LotMovement.Returned">
            <summary>
            Return to supplier
            </summary>
        </member>
        <member name="F:Pastel.Evolution.LotTransaction.LotMovement.Credited">
            <summary>
            Customer credit note
            </summary>
        </member>
        <member name="F:Pastel.Evolution.LotTransaction.LotMovement.JobReturn">
            <summary>
            Invoiced negative entry on job
            </summary>
        </member>
        <member name="T:Pastel.Evolution.LotTransaction.MovementParameters">
            <summary>
            Represents a set of parameters used when moving a lot number.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.LotTransaction.Find(System.String)">
            <summary>
            Finds the first record matching the criteria supplied
            </summary>
            <param name="criteria">E.g. Code = 'abc'</param>
            <returns>The id of the record</returns>
        </member>
        <member name="M:Pastel.Evolution.LotTransaction.List(System.String)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="criteria">e.g. SNStockLink = 100 and CurrentLoc = (int)SerialNumberLocation.InStock </param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.LotTransaction.List(Pastel.Evolution.InventoryItem,Pastel.Evolution.SerialNumberLocation)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="item">The inventory item to which the serial numbers belong.</param>
            <param name="currentLocation">The current location of the serial numbers.</param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.LotStatus">
            <summary>
            Represents a lot status indicator.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.LotStatus.Find(System.String)">
            <summary>
            Finds the first record matching the criteria supplied
            </summary>
            <param name="criteria">E.g. Code = 'abc'</param>
            <returns>The id of the record</returns>
        </member>
        <member name="M:Pastel.Evolution.LotStatus.List(System.String)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="criteria">e.g. SNStockLink = 100 and CurrentLoc = (int)SerialNumberLocation.InStock </param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.PackCode">
            <summary>
            Represents an inventory item pack code.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.PackCode.#ctor">
            <summary>Creates a new instance of  a pack code.</summary>
        </member>
        <member name="M:Pastel.Evolution.PackCode.#ctor(System.Int32)">
            <summary>Creates a new instance of  a pack code.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.PackCode.#ctor(System.String)">
            <summary>Creates a new instance of  a pack code.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.PackCode.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.PackCode.FindByCode(System.String)">
            <summary>Attempts to find a PackCode by its code and returns its ID.</summary>
            <param name="code">The code used to lookup the packcode.</param>
            <seealso cref="M:Pastel.Evolution.PackCode.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first packcode matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.PackCode.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.PackCode.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.PackCode.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.PackCode.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.PackCode.Code">
            <summary>Gets or sets the pack code's code.</summary>
        </member>
        <member name="P:Pastel.Evolution.PackCode.Description">
            <summary>Gets or sets the pack code's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.PackCode.Size">
            <summary>Gets or sets the pack code's size.</summary>
        </member>
        <member name="T:Pastel.Evolution.PriceList">
            <summary>
            Represents an inventory price list.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.PriceList.#ctor">
            <summary>Creates a new instance of  a price list.</summary>
        </member>
        <member name="M:Pastel.Evolution.PriceList.#ctor(System.Int32)">
            <summary>Creates a new instance of  a price list.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.PriceList.#ctor(System.String)">
            <summary>Creates a new instance of  a price list.</summary>
            <param name="name">Specifies the name of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.PriceList.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.PriceList.FindByName(System.String)">
            <summary>Executes the FindByName method.</summary>
            <param name="name">Specifies the name.</param>
            <returns>The FindByName.</returns>
        </member>
        <member name="M:Pastel.Evolution.PriceList.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.PriceList.GetByName(System.String)">
            <summary>Gets the by name.</summary>
            <param name="name">Specifies the name.</param>
            <returns>The ByName.</returns>
        </member>
        <member name="M:Pastel.Evolution.PriceList.GetDefault">
            <summary>Gets the default price list.</summary>
            <returns>The Default.</returns>
        </member>
        <member name="M:Pastel.Evolution.PriceList.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.PriceList.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.PriceList.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.PriceList.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.PriceList.Name">
            <summary>Gets or sets the price list's name.</summary>
        </member>
        <member name="P:Pastel.Evolution.PriceList.Description">
            <summary>Gets or sets the price list's description.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventorySegmentValue.Find(System.String)">
            <summary>
            Finds a customer account ID.
            </summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. Account = 'CASH001' or Name like '%CASH%'</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.InventorySegmentValue.FindByCode(System.String)">
            <summary>
            Attempts to find an AR account by its account code and returns its ID.
            </summary>
            <param name="code">The account code used to lookup the account.</param>
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.InventorySegmentValue.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.InventorySegmentValue.Get(System.String)">
            <summary>
            Returns the [first] customer object with the account code specified; otherwise, returns <i>null</i>.
            </summary>
            <param name="criteria"> Eg. Account = 'CASH001' or Name like '%CASH%'</param>
            <returns></returns>
            <seealso cref="M:Pastel.Evolution.InventorySegmentValue.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.InventorySegmentValue.GetByCode(Pastel.Evolution.InventorySegmentType,System.String)">
            <summary>
            Returns a customer object corresponding to the code specified; otherwise, returns <i>null</i>.
            </summary>
            <param name="type">The segment type.</param>
            <param name="code">The segment code.</param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.InventorySegmentGroup.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventorySegmentGroup.SegmentType">
            <summary>Gets the segment group's segment type.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventorySegmentGroup.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.InventorySegmentType.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventorySegmentType.Description">
            <summary>Gets the segment type's description.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventorySegmentType.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventorySegmentType.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.InventorySegmentCollection.Item(System.Int32)">
            <summary>
            Gets a selling price in the item's price collection.
            </summary>
            <param name="index">The 0-based item index.  When loading an item, the prices will be in sequence according to the Price List IDs, but when populating
            prices, the sequence will be logical and not numeric.</param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.SellingPriceCollection">
            <summary>
            Represents an inventory selling price collection.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SellingPriceCollection.Item(System.Int32)">
            <summary>
            Gets a selling price in the item's price collection.
            </summary>
            <param name="index">The 0-based item index.  When loading an item, the prices will be in sequence according to the Price List IDs, but when populating
            prices, the sequence will be logical and not numeric.</param>
            <returns></returns> 
        </member>
        <member name="M:Pastel.Evolution.SellingPriceCollection.Save">
            Saves the selling prices in the collection.  Note that saving the inventory item automatically saves the entire selling price collection.
        </member>
        <member name="M:Pastel.Evolution.SellingPriceCollection.Delete">
            Delete the selling prices in the collection.
        </member>
        <member name="M:Pastel.Evolution.SellingPriceCollection.Remove(Pastel.Evolution.SellingPrice)">
            <summary>
            Removes the specified warehouse price from the collection
            </summary>
            <param name="price"></param>
        </member>
        <member name="E:Pastel.Evolution.SellingPriceCollection.CollectionChanged">
            <summary>
            Occurs when selling price records are added or deleted.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Barcode">
            <summary>
            Represents a distinct inventory barcode.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Barcode.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Barcode.Code">
            <summary>Gets or sets the barcode.</summary>
        </member>
        <member name="P:Pastel.Evolution.Barcode.StockItem">
            <summary>Gets or sets the barcode's stock item.</summary>
        </member>
        <member name="P:Pastel.Evolution.Barcode.StockItemID">
            <summary>Gets or sets the barcode's stock item ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.Barcode.Warehouse">
            <summary>Gets or sets the barcode's warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.Barcode.WarehouseID">
            <summary>Gets or sets the barcode's warehouse ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.Barcode.UnitOfMeasure">
            <summary>Gets or sets the barcode's unit of measure.</summary>
        </member>
        <member name="P:Pastel.Evolution.Barcode.UnitOfMeasureID">
            <summary>Gets or sets the barcode's unit of measure ID.</summary>
        </member>
        <member name="M:Pastel.Evolution.Barcode.Find(System.String)">
            <summary>
            Finds the first record matching the criteria supplied
            </summary>
            <param name="criteria">E.g. Code = 'abc'</param>
            <returns>The id of the record</returns>
        </member>
        <member name="M:Pastel.Evolution.Barcode.List(System.String)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="criteria">e.g. StockID = 100 and WhseID = 2 </param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Barcode.List(Pastel.Evolution.InventoryItem)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="item">The inventory item to which the barcode belong.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Barcode.List(Pastel.Evolution.InventoryItem,Pastel.Evolution.Warehouse)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="item">The inventory item to which the barcode belong.</param>
            <param name="item">The warehouse to which the barcode belong.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Barcode.List(Pastel.Evolution.InventoryItem,Pastel.Evolution.Warehouse,Pastel.Evolution.Unit)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="item">The inventory item to which the barcode belong.</param>
            <param name="item">The warehouse to which the barcode belong.</param>
            <param name="item">The unit of measure to which the barcode belong.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Barcode._Select(System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Barcode._Select(System.String,System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <param name="sortOrder"/>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.BarcodeCollection">
            <summary>
            Represents a collection of barcodes, typically linked to a transaction or inventory document detail record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.BarcodeCollection.Add(System.String)">
            <summary>
            Adds a barcode for the code specified.  If the barcode does not exist, 
            it will be initalised as a new barcode record.  The stock item needs to be assigned in this case.
            </summary>
            <param name="bar"></param>
        </member>
        <member name="M:Pastel.Evolution.BarcodeCollection.Add(System.String[])">
            <summary>
            Adds a collection of barcodes for the code specified.  If a barcode does not exist, 
            it will be initalised as a new barcode record.  The stock item needs to be assigned to the owner of the collection in this case.
            </summary>
            <param name="barCodes">The string array of barcodes.</param>
        </member>
        <member name="M:Pastel.Evolution.BarcodeCollection.Add(System.String,System.Boolean)">
            <summary>
            Adds a default barcode for the code specified.  If the barcode does not exist, 
            it will be initalised as a new default barcode record.  The stock item needs to be assigned in this case.
            </summary>
            <param name="bar"></param>
        </member>
        <member name="T:Pastel.Evolution.SerialNumberLocation">
            <summary>Describes an inventory number's location.</summary>
        </member>
        <member name="F:Pastel.Evolution.SerialNumberLocation.OutOfStock">
            <summary>
            Lost (Adjusted out)
            </summary>
        </member>
        <member name="T:Pastel.Evolution.SerialNumberClassType">
            <summary>
            Describes a class type this serial number belongs to.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.SerialNumber">
            <summary>Represents a distinct serial number.</summary>
        </member>
        <member name="M:Pastel.Evolution.SerialNumber.Find(System.String)">
            <summary>
            Finds the first record matching the criteria supplied
            </summary>
            <param name="criteria">E.g. Code = 'abc'</param>
            <returns>The id of the record</returns>
        </member>
        <member name="M:Pastel.Evolution.SerialNumber.List(System.String)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="criteria">e.g. SNStockLink = 100 and CurrentLoc = (int)SerialNumberLocation.InStock </param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.SerialNumber.List(Pastel.Evolution.InventoryItem,Pastel.Evolution.SerialNumberLocation)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="item">The inventory item to which the serial numbers belong.</param>
            <param name="currentLocation">The current location of the serial numbers.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.SerialNumber._Select(System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.SerialNumber._Select(System.String,System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <param name="sortOrder"/>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.SerialNumberCollection">
            <summary>
            Represents a collection of serial numbers, typically linked to a transaction or inventory document detail record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SerialNumberCollection.Add(System.String)">
            <summary>
            Adds a serial number for the code specified.  If the serial number does not exist, 
            it will be initalised as a new serial number record.  The stock item needs to be assigned in this case.
            </summary>
            <param name="sn"></param>
        </member>
        <member name="M:Pastel.Evolution.SerialNumberCollection.Add(System.String[])">
            <summary>
            Adds a collection of serial numbers for the code specified.  If a serial number does not exist, 
            it will be initalised as a new serial number record.  The stock item needs to be assigned to the owner of the collection in this case.
            </summary>
            <param name="serialNos">The string array of serial numbers.</param>
        </member>
        <member name="T:Pastel.Evolution.SerialNumberTransaction">
            <summary>
            Summary description for Transaction.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.SerialNumberTransaction.SerialNumberMovement.Purchased">
            <summary>
            Takes place during a supplier invoice.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.SerialNumberTransaction.SerialNumberMovement.Returned">
            <summary>
            Takes place during a return to supplier
            </summary>
        </member>
        <member name="F:Pastel.Evolution.SerialNumberTransaction.SerialNumberMovement.Sold">
            <summary>
            Takes place during a customer invoice
            </summary>
        </member>
        <member name="F:Pastel.Evolution.SerialNumberTransaction.SerialNumberMovement.Credited">
            <summary>
            Takes place during a customer credit note.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.SerialNumberTransaction.SerialNumberMovement.IBTWarehouseFrom">
            <summary>
            Takes place during an inter-branch transfer
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SerialNumberTransaction.Post">
            <summary>
            Processes the serial number transaction.  This is only accessible from within the component for logical reasons.  Use
            inventory transactions to adjust serial numbers
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.SerialNumberTransaction.MovementParameters">
            <summary>
            Represents a set of parameters used by a serial number collection when relocating serial numbers.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryDetail">
            <summary>
            Represents a collection of inventory details.
            <seealso cref="!:InventoryDetailCollection"/>
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.ID">
            <summary>
            Gets the record ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.LongID">
            <summary>
            Transitional accessor.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.InventoryItem">
            <summary>Gets or sets the inventory item this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.Warehouse">
            <summary>Gets or sets the warehouse this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.WarehouseID">
            <summary>Gets or sets the warehouseID this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.StockGroup">
            <summary>Gets or sets the inventory group this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.Agent">
            <summary>Gets or sets the buying agent this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.ItemCategory">
            <summary>Gets or sets the item category this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.BarCode">
            <summary>Gets or sets the barcode this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.DefaultInvoicingTaxType">
            <summary>Gets ir sets the stock item's default invoicing tax type this detail belongs to.</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.DefaultCreditNoteTaxType">
            <summary>Gets ir sets the stock item's default credit note tax type this detail belongs to.</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.DefaultGoodsReceivedTaxType">
            <summary>Gets ir sets the stock item's default goods received voucher tax type this detail belongs to.</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.DefaultReturnToSupplierTaxType">
            <summary>Gets ir sets the stock item's default return to supplier tax type this detail belongs to.</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.PackCode">
            <summary>Gets or sets the pack code this detail belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryDetail.AllowNegativeStock">
            <summary>Gets or sets the allow negative stock setting this detail belongs to.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryDetail.OnSave">
            <summary>
            Saves the individual stock detail.  Note that saving the inventory item automatically saves the entire stock detail collection.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryDetail.OnDelete">
            <summary>Removes the detail record from the stock item only, not from the database.  Save the stock item after calling Delete to delete the line from the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.InventoryDetail.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryDetail.ListByStockItemID(System.Int32)">
            <summary>Gets a list of stock detail by stock item ID.</summary>
            <param name="id">Specifies the stock item id.</param>
            <returns>The ListByStockItemID.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryDetail.ListByStockItemAndWarehouseID(System.Int32,System.Int32)">
            <summary>Gets a list of stock detail by stock item ID and Warehouse ID.</summary>
            <param name="stockID">Specifies the stock item id.</param>
            /// <param name="warehouseID">Specifies the warehouse id.</param>
            <returns>The ListByStockItemAndWarehouseID.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryDetail.Find(System.String)">
            <summary>Finds a stock item detail ID.</summary>
            <param name="criteria">The SQL criteria to apply to the search, e.g. StockID = 5 and WhseID = 0</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.InventoryDetail.FindByStockIDAndWarehouseID(System.Int32,System.Int32)">
            <summary>Attempts to find an inventory item detail line by its stockID and warehousID and returns its ID.</summary>
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="T:Pastel.Evolution.Unit">
            <summary>
            Represents an inventory unit.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Unit.#ctor">
            <summary>Creates a new instance of a unit.</summary>
        </member>
        <member name="M:Pastel.Evolution.Unit.#ctor(System.Int32)">
            <summary>Creates a new instance of an inventory unit.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Unit.#ctor(System.String)">
            <summary>Creates a new instance of an inventory unit.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Unit.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="P:Pastel.Evolution.Unit.Conversions">
            <summary>
            Gets the inventory item's unit conversions, based on the stocking unit.  If a StockingUnit is not set, UnitConversions will be null.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Unit.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.Unit.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.Unit.Find(System.String)">
            <summary>Finds an inventory unit ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cUnitCode = '01'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Unit.FindByCode(System.String)">
            <summary>
            Attempts to find an inventory unit by using its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the unit.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.Unit.Find(System.String)"/>
        </member>
        <member name="P:Pastel.Evolution.Unit.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Unit.Code">
            <summary>Gets or sets the unit's code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Unit.Description">
            <summary>Gets or sets the unit's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.Unit.IsUnitRoundUp">
            <summary>Gets or sets whether the unit should be rounded up.</summary>
        </member>
        <member name="T:Pastel.Evolution.UnitCategory">
            <summary>
            Represents an inventory group.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.UnitCategory.#ctor">
            <summary>Creates a new instance of an inventory unit category.</summary>
        </member>
        <member name="M:Pastel.Evolution.UnitCategory.#ctor(System.Int32)">
            <summary>Creates a new instance of an inventory category.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.UnitCategory.#ctor(System.String)">
            <summary>Creates a new instance of an inventory unit category.</summary>
            <param name="description">Specifies the description of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.UnitCategory.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.UnitCategory.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.UnitCategory.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.UnitCategory.Find(System.String)">
            <summary>Finds an inventory group ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cUnitCatDescription = 'Mass'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.UnitCategory.FindByDescription(System.String)">
            <summary>
            Attempts to find an inventory group by using its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the group.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.UnitCategory.Find(System.String)"/>
        </member>
        <member name="P:Pastel.Evolution.UnitCategory.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.UnitCategory.Description">
            <summary>Gets or sets the category description.</summary>
        </member>
        <member name="M:Pastel.Evolution.UnitConversion.#ctor">
            <summary>Creates a new instance of a unit conversion.</summary>
        </member>
        <member name="M:Pastel.Evolution.UnitConversion.#ctor(System.Int32)">
            <summary>Creates a new instance of a unit conversion.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.UnitConversion.#ctor(System.Int32,System.Int32)">
            <summary>Creates a new instance of a unit conversion.</summary>
        </member>
        <member name="M:Pastel.Evolution.UnitConversion.#ctor(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>Creates a new instance of a unit conversion.</summary>
        </member>
        <member name="M:Pastel.Evolution.UnitConversion.#ctor(Pastel.Evolution.Unit,Pastel.Evolution.Unit,System.Double,System.Double)">
            <summary>Creates a new instance of a unit conversion.</summary>
        </member>
        <member name="P:Pastel.Evolution.UnitConversion.BaseUnit">
            <summary>
            Gets the base unit in the conversion.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.UnitConversion.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.UnitConversion._Select(Pastel.Evolution.Unit)">
            <summary>
            Experimental Method
            </summary>
        </member>
        <member name="M:Pastel.Evolution.UnitConversion._Select(System.Int32)">
            <summary>
            Experimental Method
            </summary>
        </member>
        <member name="M:Pastel.Evolution.UnitConversion._Select(System.String,System.String)">
            <summary>
            Experimental Method
            </summary>
        </member>
        <member name="M:Pastel.Evolution.UnitConversion.Validate(System.Boolean)">
            <summary>
            Validates the conversion.
            </summary>
            <param name="permanent">The conversion will be persisted to the DB.</param>
        </member>
        <member name="T:Pastel.Evolution.UnitConversionCollection">
            <summary>
            Represents a collection of warehouse context records.
            </summary>
            <seealso cref="T:Pastel.Evolution.DeliveryAddress"/>
        </member>
        <member name="P:Pastel.Evolution.UnitConversionCollection.Item(System.String)">
            <summary>
            Gets the unit conversion object relating to the current base unit and conversion unit code specified.
            </summary>
            <param name="conversionUnitCode">The unit code for which to retrieve the conversion.</param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.UnitConversionCollection.Item(System.Int32)">
            <summary>
            Gets a delivery address by index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.UnitConversionCollection.ConversionExists(Pastel.Evolution.Unit,Pastel.Evolution.Unit)">
            <summary>
            Gets whether a conversion is configured for the given units.  It does not matter which unit is specified as the base.
            </summary>
            <param name="baseUnit"></param>
            <param name="conversionUnit"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.UnitConversionCollection.ConversionExists(Pastel.Evolution.Unit)">
            <summary>
            Gets whether a conversion is configured between the current unit and the given unit.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.UnitConversionCollection.ConversionExists(System.Int32,System.Int32)">
            <summary>
            Gets whether a conversion is configured for the given units.  It does not matter which unit is specified as the base.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.UnitConversionCollection.ConvertTo(Pastel.Evolution.Unit,System.Double)">
            <summary>
            Converts a specified quantity of base unit to the specified unit.
            </summary>
            <param name="u">The target unit.</param>
            <param name="quantity">The quantity of base unit to convert.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.UnitConversionCollection.ConvertFrom(Pastel.Evolution.Unit,System.Double)">
            <summary>
            Converts a specified quantity of specified unit to the base unit.
            </summary>
            <param name="u">The source unit.</param>
            <param name="quantity">The quantity of source unit to convert.</param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.Warehouse">
            <summary>
            Represents an inventory warehouse.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Warehouse.#ctor">
            <summary>Creates a new instance of a warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.Module">
            <summary>Gets the Evolution module this record forms a part of.</summary>
        </member>
        <member name="M:Pastel.Evolution.Warehouse.#ctor(System.Int32)">
            <summary>Creates a new instance of  a warehouse.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Warehouse.#ctor(System.String)">
            <summary>Creates a new instance of  a warehouse.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Warehouse.Find(System.String)">
            <summary>Finds and returns the ID of the first record matching the criteria supplied.</summary>
            <param name="criteria">E.g. Code = 'abc' or Name like '%MASTER%'</param>
            <returns>The id of the record</returns>
        </member>
        <member name="M:Pastel.Evolution.Warehouse.FindByCode(System.String)">
            <summary>Attempts to find a warehouse by its code and returns its ID.</summary>
            <param name="code">The code used to lookup the warehouse.</param>
            <seealso cref="M:Pastel.Evolution.Warehouse.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.Warehouse._Exists(System.String)">
            <summary>
            Experimental method.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Warehouse.Get(System.String)">
            <param name="criteria"> Eg. Code = 'STO0021' or Description like '%Stone%'</param>
            <seealso cref="M:Pastel.Evolution.Warehouse.Find(System.String)" />
        </member>
        <member name="M:Pastel.Evolution.Warehouse.List(System.String)">
            <summary>Lists warehouses for the supplied criteria.</summary>
            <param name="criteria">
            </param>
        </member>
        <member name="M:Pastel.Evolution.Warehouse.List(System.String,System.String)">
            <summary>Lists warehouses for the supplied criteria.</summary>
            <param name="sortOrder">The SQL order by clause to use, e.g. Address1 desc, Name</param>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Name like '1___'</param>
        </member>
        <member name="M:Pastel.Evolution.Warehouse._Select(System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Warehouse.GetByCode(System.String)">
            <summary>Returns a warehouse object corresponding to the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.Warehouse.GetMaster">
            <summary>Returns the master warehouse.</summary>
        </member>
        <member name="M:Pastel.Evolution.Warehouse.OnSave">
            
        </member>
        <member name="M:Pastel.Evolution.Warehouse.OnDelete">
            
        </member>
        <member name="P:Pastel.Evolution.Warehouse.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.Code">
            <summary>Gets or sets the warehouse's code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.Description">
            <summary>Gets or sets the warehouse's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.KnownAs">
            <summary>Gets or sets the warehouse's common name.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.Address1">
            <summary>Gets or sets the warehouse's address line 1.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.Address2">
            <summary>Gets or sets the warehouse's address line 2.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.Address3">
            <summary>Gets or sets the warehouse's address line 3.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.PostalCode">
            <summary>Gets or sets the warehouse's postal code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.Telephone">
            <summary>Gets or sets the warehouse's telephone number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.Manager">
            <summary>Gets or sets the warehouse manager's name.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.EMailAddress">
            <summary>Gets or sets the warehouse's email address.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.ModemTel">
            <summary>Gets or sets the warehouse's modem telephone number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.DefaultWarehouse">
            <summary>Gets the warehouse's default status (true for the 'master' warehouse).</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.AddNewStock">
            <summary>Gets or sets whether or not new items are automatically linked to this warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.AllowMultipleBins">
            <summary>Gets whether the warehouse allow for multiple bin locations.</summary>
        </member>
        <member name="P:Pastel.Evolution.Warehouse.Active">
            <summary>Gets or sets the record's operational state.</summary>
        </member>
        <member name="T:Pastel.Evolution.BinLocationContext">
            <summary> Represents an inventory item's bin location context within a give warehouse. </summary>
        </member>
        <member name="M:Pastel.Evolution.BinLocationContext.#ctor(Pastel.Evolution.InventoryItem,Pastel.Evolution.Warehouse,Pastel.Evolution.InventoryBin)">
            <summary>Creates a new instance of a bin location context record.</summary>
            <param name="item">Specifies the inventory item.</param>
            <param name="warehouse">Specifies the warehouse.</param>
            <param name="bin locationlocation">Specifies the bin location.</param>
        </member>
        <member name="M:Pastel.Evolution.BinLocationContext.#ctor(Pastel.Evolution.InventoryItem,System.Int32,System.Int32)">
            <summary>Creates a new instance of a bin location context record.</summary>
            <param name="item">Specifies the inventory item.</param>
            <param name="warehouseID">Specifies the warehouse id.</param>
            <param name="binlocationID">Specifies the bin location id.</param>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.LongID">
            <summary>Transitional accessor.</summary>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.Warehouse">
            <summary>Gets the object's warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.InventoryItem">
            <summary>Gets the object's stock item.</summary>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.QtyFree">
            <summary>Gets the item's quantity free in this warehouse.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyFree" />
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.QtyOnHand">
            <summary>Gets the item's quantity on hand for this bin location.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyOnHand" />
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.QtyOnSalesOrder">
            <summary>Gets the item's quantity on sales order for this bin location.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyOnSalesOrder" />
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.QtyOnPurchaseOrder">
            <summary>Gets the item's quantity on purchase order for this bin location.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyOnPurchaseOrder" />
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.QtyReserved">
            <summary>Gets the item's quantity reserved for this bin location.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyReserved" />
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.QtyWIP">
            <summary>Gets the item's work-in-progress quantity for this bin location.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyWIP" />
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.QtyIBTToIssue">
            <summary>Gets the item's IBT quantity to issue for this bin location.</summary>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.QtyIBTToReceive">
            <summary>Gets the item's IBT quantity to receive for this bin location.</summary>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.QtyIBTIssued">
            <summary>Gets the item's IBT quantity issued for this bin location.</summary>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.QtyIBTReceived">
            <summary>Gets the item's IBT quantity received for this bin location.</summary>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.UserFields">
            <summary>Gets the item's user defined field for this bin location.</summary>
        </member>
        <member name="P:Pastel.Evolution.BinLocationContext.Quantity">
            <summary>Gets the quantity for the current bin location.</summary>
        </member>
        <member name="M:Pastel.Evolution.BinLocationContext.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.BinLocationContext.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.BinLocationContext.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.BinLocationContext.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.BinLocationContext.List(System.String,System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="joins">Specifies the SQL table joins.</param>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.WarehouseContext">
            <summary>
            Represents an inventory item's context within a give warehouse.
            </summary>
            <remarks>Inventory items are selectively linked to warehouses.  The WarehouseContext class represents that link and provides access the item's quantities within the specific warehouse.</remarks>
        </member>
        <member name="M:Pastel.Evolution.WarehouseContext.#ctor(Pastel.Evolution.InventoryItem,Pastel.Evolution.Warehouse)">
            <summary>Creates a new instance of  a warehouse context record.</summary>
            <param name="item">Specifies the inventory item.</param>
            <param name="warehouse">Specifies the warehouse.</param>
        </member>
        <member name="M:Pastel.Evolution.WarehouseContext.#ctor(Pastel.Evolution.InventoryItem,System.Int32)">
            <summary>Creates a new instance of  a warehouse context record.</summary>
            <param name="item">Specifies the inventory item.</param>
            <param name="warehouseID">Specifies the warehouse id.</param>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.LongID">
            <summary>
            Transitional accessor.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.Warehouse">
            <summary>Gets the object's warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.InventoryItem">
            <summary>Gets the object's stock item.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.QtyFree">
            <summary>Gets the item's quantity free in this warehouse.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyFree" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.Group">
            <summary>Gets the group in this warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.DefaultBarCode">
            <summary>Gets or sets the barcode in this warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.ItemCategory">
            <summary>Gets or sets the item category in this warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.DefaultInvoicingTaxType">
            <summary>Gets or sets the warehouse item's default invoicing tax type.</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.DefaultCreditNoteTaxType">
            <summary>Gets or sets the warehouse item's default credit note tax type.</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.DefaultGoodsReceivedTaxType">
            <summary>Gets or sets the warehouse item's default tax type for goods received notes.</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.DefaultReturnToSupplierTaxType">
            <summary>Gets or sets the warehouse item's default tax type used on returns to supplier .</summary>
            <remarks>If not supplied, a default tax rate will be set on saving.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.AllowNegativeQty">
            <summary>Gets or sets whether or not a negative stock level is allowed for the given item in the given warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.UnitCost">
            <summary>
            Gets the effective unit cost applicable to this item/warehouse combination.  If warehouse costing is disabled, the item's global cost will be returned.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.AverageUnitCost">
            <summary>
            Gets the effective unit cost applicable to this item/warehouse combination.  If warehouse costing is disabled, the item's global cost will be returned.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.LatestUnitCost">
            <summary>
            Gets the latest unit cost applicable to this item/warehouse combination.  If warehouse costing is disabled, the item's global cost will be returned.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.LowestUnitCost">
            <summary>
            Gets the minimum reached unit cost applicable to this item/warehouse combination.  If warehouse costing is disabled, the item's global cost will be returned.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.HighestUnitCost">
            <summary>
            Gets the maximum reached unit cost applicable to this item/warehouse combination.  If warehouse costing is disabled, the item's global cost will be returned.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.StandardUnitCost">
            <summary>
            Gets the standard unit cost applicable to this item/warehouse combination.  If warehouse costing is disabled, the item's global cost will be returned.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.LastGrvCost">
            <summary>
            Gets or sets the last grv cost applicable to this item/warehouse combination.  If warehouse costing is disabled, the item's global cost will be returned.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.Quantity">
            <summary>Gets the quantity for the current warehouse.</summary>
            <seealso cref="T:Pastel.Evolution.InventoryQty" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.Cost">
            <summary>Gets the cost for the current warehouse.</summary>
            <seealso cref="T:Pastel.Evolution.InventoryCosts" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.SellingPrices">
            <summary>
            Gets the selling prices for the current warehouse.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.Barcode">
            <summary>Gets the barcodes for the current warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.LinkedSupplier">
            <summary>Gets the linked supplier for the current warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.MultipleBinLocations">
            <summary>Gets the warehouse item's bin location context collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.Item(Pastel.Evolution.InventoryBin)">
            <summary>Gets the warehouse item's bin location context.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.Item(System.Int32)">
            <summary>Gets the warehouse item's bin location context.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.QtyOnHand">
            <summary>Gets the item's quantity on hand in this warehouse.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyOnHand" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.QtyOnSalesOrder">
            <summary>Gets the item's quantity on sales order in this warehouse.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyOnSalesOrder" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.QtyOnPurchaseOrder">
            <summary>Gets the item's quantity on purchase order in this warehouse.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyOnPurchaseOrder" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.QtyReserved">
            <summary>Gets the item's quantity reserved in this warehouse.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyReserved" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.QtyWIP">
            <summary>Gets the item's work-in-progress quantity in this warehouse.</summary>
            <seealso cref="P:Pastel.Evolution.InventoryItem.QtyWIP" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.QtyIBTToIssue">
            <summary>Gets the item's IBT quantity to issue in this warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.QtyIBTToReceive">
            <summary>Gets the item's IBT quantity to recieve in this warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.QtyIBTIssued">
            <summary>Gets the item's IBT quantity issued in this warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.QtyIBTReceived">
            <summary>Gets the item's IBT quantity received in this warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.AllowNegativeStock">
            <summary>Whether or not the item allows for negative stock.</summary>
            <seealso cref="!:Pastel.Evolution.InventoryItem.bAllowNegStock" />
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.UseItemPricing">
            <summary>Gets whether to apply the item's pricing to this warehouse context.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContext.UserFields">
            <summary>
            Gets the item's user defined field in this warehouse
            </summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseContext.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseContext.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseContext.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseContext.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseContext.List(System.String,System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="joins">Specifies the SQL table joins.</param>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.InventoryBinWarehouseContextCollection">
            <summary>
            Represents a collection of warehouse context records.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContextCollection.Item(System.String)">
            <summary>
            Gets the warehouse context object relating to the current item and the warehouse code specified.
            </summary>
            <param name="warehouseCode"></param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.InventoryBinWarehouseContextCollection.Item(System.Int32)">
            <summary>Gets a warehouse context by warehouse ID, not by index.</summary>
        </member>
        <member name="T:Pastel.Evolution.WarehouseContextCollection">
            <summary>
            Represents a collection of warehouse context records.
            </summary>
            <seealso cref="T:Pastel.Evolution.WarehouseContext"/>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContextCollection.Item(System.String)">
            <summary>
            Gets the warehouse context object relating to the current item and the warehouse code specified.
            </summary>
            <param name="warehouseCode"></param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.WarehouseContextCollection.Item(System.Int32)">
            <summary>
            Gets a warehouse context by warehouse ID, not by index.
            </summary>
            <param name="warehouseID"></param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.WarehouseTransfer">
            <summary>
            Represents a warehouse transfer transaction.
            </summary>
            <remarks>A warehouse transfer results in two independent inventory transactions, grouped into the same audit batch. You cannot retrieve</remarks>
        </member>
        <member name="M:Pastel.Evolution.WarehouseTransfer.#ctor">
            <summary>Creates a new instance of  a warehouse transfer transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.WarehouseTransfer.Validate">
            <summary>Validates the transaction without attempting to post.</summary>
            <returns>The Validate.</returns>
        </member>
        <member name="M:Pastel.Evolution.WarehouseTransfer.Post">
            <summary>Processes the transfer.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.UnitCost">
            <summary>
            Gets or sets the unit cost at which the transfer takes place.  This typically includes the item's value in addition to a calculated transfer value.
            </summary>
            <remarks>The variance between the specified UnitCost and the item's true warehouse cost gets posted to the inventory cost variance account.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.FromWarehouse">
            <summary>Gets or sets the warehouse from which goods will be transferred.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.ToWarehouse">
            <summary>Gets or sets the warehouse to which goods will be transferred.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.Account">
            <summary>Gets or sets the warehouse transfer's account (stock item).</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.InventoryItem">
            <summary>Gets or sets the warehouse transfer's account (stock item).</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.Quantity">
            <summary>Gets or sets the quantity of stock to transfer.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.AccountID">
            <summary>Gets or sets the warehouse transfer's account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.Date">
            <summary>Gets or sets the date on which the transfer takes place.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.TranCode">
            <summary>Sets the warehouse transfer's transaction code.</summary>
            <remarks>Defaults to the transaction code configured in Evolution's inventory defaults.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.TranCodeID">
            <summary>Gets or sets the warehouse transfer's tran code id.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.OrderNo">
            <summary>Gets or sets the warehouse transfer's order number, if relevant.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.ExtOrderNo">
            <summary>Gets or sets the warehouse transfer's external order number, if relevant.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.Project">
            <summary>Sets the warehouse transfer's project.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.ProjectID">
            <summary>Gets or sets the warehouse transfer's project id.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.Reference">
            <summary>Gets or sets the warehouse transfer's reference (compulsory).</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.Reference2">
            <summary>Gets or sets the warehouse transfer's 2nd reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.SerialNumbers">
            <summary>Gets the warehouse transfer's serial number collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.Description">
            <summary>Gets or sets the warehouse transfer description.</summary>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.Audit">
            <summary>Gets the transaction's audit number.</summary>
            <remarks>The audit number is 0 when unposted.  After posting, it will reflect the transaction's posted audit number.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.ModID">
            <summary>Gets or sets the transaction's module identifier.</summary>
            <remarks>Used internally by Evolution to distinguish transaction origin.</remarks>
        </member>
        <member name="P:Pastel.Evolution.WarehouseTransfer.Module">
            <summary>Gets the Evolution module this record forms a part of.</summary>
        </member>
        <member name="P:Pastel.Evolution.CompletedContractPostingMethodGLContext.WIPAccount">
            <summary>Gets or sets the Transaction Code's WIP GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CompletedContractPostingMethodGLContext.TaxAccount">
            <summary>Gets or sets the Transaction Code's Tax GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CompletedContractPostingMethodGLContext.StockAccount">
            <summary>Gets or sets the Transaction Code's Stock GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CompletedContractPostingMethodGLContext.SalesAccount">
            <summary>Gets or sets the Transaction Code's Sales GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CompletedContractPostingMethodGLContext.COSAccount">
            <summary>Gets or sets the Transaction Code's COS GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CompletedContractPostingMethodGLContext.CustomerControlAccount">
            <summary>Gets or sets the Transaction Code's Customer Control GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CompletedContractPostingMethodGLContext.SupplierControlAccount">
            <summary>Gets or sets the Transaction Code's Supplier Control GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.CompletedContractPostingMethodGLContext.RecoveryAccount">
            <summary>Gets or sets the Transaction Code's Recovery GL Account.</summary>
        </member>
        <member name="E:Pastel.Evolution.JobInvoiceDetailCollection.CollectionChanged">
            <summary>
            Occurs when detail records are added or deleted.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JobInvoiceDetailCollection.Detach">
            <summary>
            Calls the Detach method on each detail record
            </summary>
        </member>
        <member name="T:Pastel.Evolution.JobInvoiceDetail">
            <summary>
            Represents a job invoice line.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.LongID">
            <summary>
            Transitional accessor.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.InventoryItem">
            <summary>
            Gets or sets the line's inventory item. Maps directly to the Account property but null if invalid.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.InventoryItemID">
            <summary>Gets or sets the stock item id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the InventoryItemID rather than the InventoryItem since
            setting the item ID actually instantiates an InventoryItem object for validation.
            <seealso cref="P:Pastel.Evolution.JobInvoiceDetail.InventoryItem" />
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.BinLocationID">
            <summary>Gets or sets the bin location id.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.BinLocation">
            <summary>Gets or sets the bin location.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.BinLocationContext">
            <summary> Gets or sets the bin location context of the inventory item and warehouse specified.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.Worker">
            <summary>
            Gets or sets the line's worker. Maps directly to the Account property but null if invalid.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.WorkerID">
            <summary>Gets or sets the worker id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the WorkerID rather than the Worker since
            setting the item ID actually instantiates a Worker object for validation.
            <seealso cref="P:Pastel.Evolution.JobInvoiceDetail.InventoryItem" />
        </member>
        <member name="M:Pastel.Evolution.JobInvoiceDetail.Save">
            <summary>
            WIP: this only handles new quote and active lines; modified lines are ignored
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.SalesTotalExcl">
            <summary>
            Gets the calculated line total
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.SalesTotalTax">
            <summary>
            Gets the calculated line total
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.SalesTotalIncl">
            <summary>
            Gets the calculated line total
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.PurchasesTotalTax">
            <summary>
            Gets the calculated line total tax.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.JobLineID">
            <summary>
            Gets the line number (1-based)
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.DiscountPercent">
            <summary>
            Gets or sets the line discount percentage: 5% = 5, as opposed to 0.05
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.Discount">
            <summary>
            Gets or sets the total line discount value (applies to tax excl. value)
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.WarehouseContext">
            <summary>
            Gets or sets the warehouse link of the stock item specified.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.Warehouse">
            <summary>
            Gets or sets the warehouse relevant to this detail record.  Set the warehouse only after setting the inventory item.  The Warehouse and WarehouseContext properties are mapped to one another.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.WarehouseID">
            <summary>
            Gets the ID of the assigned warehouse (0 if N/A).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.UnitSellingPrice">
            <summary>
            Gets or sets the tax exclusive unit selling price.  For new records, setting this value will also set <see cref="!:BudgetUnitSellingPrice"/>.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.TransactionCode">
            <summary>
            Gets or sets the job costing transaction type associate with the detail record.  When setting the transaction type, 
            the cost and sales tax types will default to those set on the transaction type.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.UnitCostPrice">
            <summary>
            Gets or sets the tax exclusive unit cost price.  For new records, setting this value will also set <see cref="!:BudgetUnitCostPrice"/>.
            </summary>
            <remarks>Set positive, even for negative quantities.</remarks>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.Source">
            <summary>
            Gets the transaction source, decided by the Account.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoiceDetail.SalesTaxRate">
            <summary>
            Sales tax type
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JobInvoiceDetail.Detach">
            <summary>
            Detaches the object from its database record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JobInvoiceDetail.SetUserField(System.String,System.Object)">
            <summary> Sets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <param name="fieldValue">Specifies the user defined field value.</param>
        </member>
        <member name="M:Pastel.Evolution.JobInvoiceDetail.GetUserField(System.String)">
            <summary> Gets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <returns>The user defined field value.</returns>
        </member>
        <member name="T:Pastel.Evolution.JobInvoice">
            <summary> Represents an Evolution job invoice. </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.Detail">
            <summary>Gets the job invoice detail collection to which detail lines can be added and from which lines can be deleted</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.DiscountAmount">
            <summary>Gets or sets the document discount amount (applicable to tax excl. total),</summary>
            <remarks>Document discount is applied after line discount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.DiscountAmountForeign">
            <summary>Gets or sets the document discount amount (applicable to tax excl. total),</summary>
            <remarks>Document discount is applied after line discount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.TotalExclBeforeDiscount">
            <summary>Gets the total excl amount defore discount.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.TotalTaxBeforeDiscount">
            <summary>Gets the total tax amount defore discount.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.TotalInclBeforeDiscount">
            <summary>Gets the total incl amount defore discount.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.TotalExcl">
            <summary>Gets the total excl amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.TotalTax">
            <summary>Gets the total tax amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.TotalIncl">
            <summary>Gets the total incl amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.TotalExclForeign">
            <summary>Gets the total foreign excl amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.TotalTaxForeign">
            <summary>Gets the total foreign tax amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobInvoice.TotalInclForeign">
            <summary>Gets the total foreign incl amount.</summary>
        </member>
        <member name="M:Pastel.Evolution.JobInvoice.FindByQuoteNumber(System.String)">
            <summary>Attempts to find a job quote by its quote number and returns its ID.</summary>
            <param name="quoteNumber">The quote number used to lookup the source document.</param>
            <seealso cref="M:Pastel.Evolution.JobInvoice.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.JobInvoice.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.JobInvoice.OnDelete">
            <summary>
            Removes the record from the database, provided it is not referenced by other records.
            </summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException"/>
        </member>
        <member name="M:Pastel.Evolution.JobInvoice.SetUserField(System.String,System.Object)">
            <summary> Sets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <param name="fieldValue">Specifies the user defined field value.</param>
        </member>
        <member name="M:Pastel.Evolution.JobInvoice.GetUserField(System.String)">
            <summary> Gets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <returns>The user defined field value.</returns>
        </member>
        <member name="M:Pastel.Evolution.JobInvoice.GetArchivedQuoteDocument(System.Int32)">
            <summary>Returns a specific job card quote</summary>
        </member>
        <member name="E:Pastel.Evolution.JobDetailCollection.CollectionChanged">
            <summary>
            Occurs when detail records are added or deleted.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JobDetailCollection.Detach">
            <summary>
            Calls the Detach method on each detail record
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobPostingMethodGLContext.WipGLAccount">
            <summary>
            Gets the job card posting method's work in progress general ledger account.
            </summary>
            <returns>GLAccount</returns>
        </member>
        <member name="P:Pastel.Evolution.JobPostingMethodGLContext.RecoveryGLAccount">
            <summary>
            Gets the job card posting method's recovery general ledger account.
            </summary>
            <returns>GLAccount</returns>
        </member>
        <member name="P:Pastel.Evolution.JobPostingMethodGLContext.TaxGLAccount">
            <summary>
            Gets the job card posting method's tax general ledger account.
            </summary>
            <returns>GLAccount</returns>
        </member>
        <member name="P:Pastel.Evolution.JobPostingMethodGLContext.StockGLAccount">
            <summary>
            Gets the job card posting method's stock general ledger account.
            </summary>
            <returns>GLAccount</returns>
        </member>
        <member name="P:Pastel.Evolution.JobPostingMethodGLContext.SalesGLAccount">
            <summary>
            Gets the job card posting method's sales general ledger account.
            </summary>
            <returns>GLAccount</returns>
        </member>
        <member name="P:Pastel.Evolution.JobPostingMethodGLContext.CostOfSalesGLAccount">
            <summary>
            Gets the job card posting method's cost of sales general ledger account.
            </summary>
            <returns>GLAccount</returns>
        </member>
        <member name="P:Pastel.Evolution.JobPostingMethodGLContext.SupplierControlGLAccount">
            <summary>
            Gets the job card posting method's supplier control general ledger account.
            </summary>
            <returns>GLAccount</returns>
        </member>
        <member name="P:Pastel.Evolution.JobPostingMethodGLContext.CustomerControlGLAccount">
            <summary>
            Gets the job card posting method's customer control general ledger account.
            </summary>
            <returns>GLAccount</returns>
        </member>
        <member name="P:Pastel.Evolution.JobPostingMethodGLContextCollection.Item(Pastel.Evolution.JobPostingMethod)">
            <summary>
            Gets the job card posting method context object for the posting method supplied.
            </summary>
            <param name="jobPostingMethod"></param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.PercentageOfCompletedContractPostingMethodGLContext.WIPAccount">
            <summary>Gets or sets the Transaction Code's WIP GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.PercentageOfCompletedContractPostingMethodGLContext.TaxAccount">
            <summary>Gets or sets the Transaction Code's Tax GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.PercentageOfCompletedContractPostingMethodGLContext.StockAccount">
            <summary>Gets or sets the Transaction Code's Stock GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.PercentageOfCompletedContractPostingMethodGLContext.SalesAccount">
            <summary>Gets or sets the Transaction Code's Sales GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.PercentageOfCompletedContractPostingMethodGLContext.COSAccount">
            <summary>Gets or sets the Transaction Code's COS GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.PercentageOfCompletedContractPostingMethodGLContext.CustomerControlAccount">
            <summary>Gets or sets the Transaction Code's Customer Control GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.PercentageOfCompletedContractPostingMethodGLContext.SupplierControlAccount">
            <summary>Gets or sets the Transaction Code's Supplier Control GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.PercentageOfCompletedContractPostingMethodGLContext.RecoveryAccount">
            <summary>Gets or sets the Transaction Code's Recovery GL Account.</summary>
        </member>
        <member name="M:Pastel.Evolution.Note.#ctor">
            <summary>Creates a new instance of a note record.</summary>
        </member>
        <member name="M:Pastel.Evolution.Note.#ctor(System.Object)">
            <summary>Creates a new instance of a note record.</summary>
            <param name="owner">Specifies the owner of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Note.#ctor(System.Int32)">
            <summary>Creates a new instance of a note record.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Note.#ctor(System.Int32,System.Object)">
            <summary>Creates a new instance of a note record.</summary>
            <param name="id">Specifies the id of the existing record.</param>
            <param name="owner">Specifies the owner of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.Note.TableName">
            <summary>Gets or sets the note's table name.</summary>
        </member>
        <member name="P:Pastel.Evolution.Note.TableID">
            <summary>Gets or sets the table id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Note.Created">
            <summary>Gets or sets the note's creation date and time.</summary>
        </member>
        <member name="P:Pastel.Evolution.Note.Modified">
            <summary>Gets or sets the note's modified date and time.</summary>
        </member>
        <member name="P:Pastel.Evolution.Note.Agent">
            <summary> Gets or sets the note's default agent.</summary>
        </member>
        <member name="P:Pastel.Evolution.Note.AgentID">
            <summary>Gets or sets the note's default agent ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.Note.Header">
            <summary>Gets the note's message header.</summary>
        </member>
        <member name="P:Pastel.Evolution.Note.Text">
            <summary>Sets the note's message.</summary>
            <remarks>Each string array element will create a new line entry.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Note.RTFText">
            <summary>Gets or sets the note's rich text format.</summary>
        </member>
        <member name="M:Pastel.Evolution.Note.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Note.CreateNewRTF(System.String,System.String[])">
            <summary>Create a new rich text formatted string.</summary>
        </member>
        <member name="M:Pastel.Evolution.Note.InsertLineIntoRTF(System.String,System.String,System.String[])">
            <summary>Append string to an existing rich text formatted object</summary>
        </member>
        <member name="T:Pastel.Evolution.NoteCollection">
            <summary> Represents a collection of note items, which can be owned by any object type. </summary>
        </member>
        <member name="E:Pastel.Evolution.NoteCollection.CollectionChanged">
            <summary>
            Occurs when note records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.NoteCollection.Item(System.Int32)">
            <summary> Gets a note object by its zero-based index. </summary>
            <param name="index"></param>
        </member>
        <member name="P:Pastel.Evolution.NoteCollection.Type">
            <summary> Gets or sets object type. </summary>
        </member>
        <member name="P:Pastel.Evolution.NoteCollection.TableName">
            <summary> Gets or sets table name. </summary>
        </member>
        <member name="P:Pastel.Evolution.NoteCollection.NoteTableName">
            <summary> Gets or sets the table name enumerator. </summary>
        </member>
        <member name="P:Pastel.Evolution.NoteCollection.TableID">
            <summary> Gets or sets the specific table id. </summary>
        </member>
        <member name="P:Pastel.Evolution.NoteCollection.AgentID">
            <summary> Gets or sets the agent id. </summary>
        </member>
        <member name="P:Pastel.Evolution.NoteCollection.IsExisting">
            <summary> Gets whether a note entry already exists. </summary>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.InitiateNoteVariables">
            <summary>Initiate generic variables.</summary>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.LoadNote">
            <summary>Load all existing notes.</summary>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.TopDataRow(System.Data.DataTable,System.Int32)">
            <summary>Return only the first row from a specific data table.</summary>
            <param name="dt">Data table object.</param>
            <param name="count">Row count to be returned.</param>
            <returns>The first row from data table.</returns>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.AddToExisting(System.String[])">
            <summary>Add note to an existing note entry.</summary>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.DisplayAsRTF">
            <summary>Display the note in a rich text format.</summary>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.DisplayAsText">
            <summary>Displays the note in a simple text format.</summary>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.Add(System.String[])">
            <summary>Appends a note object to the actual object.</summary>
            <param name="message">Specifies the note lines as a string array collection.</param>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.Add(Pastel.Evolution.Note)">
            <summary>Appends a note object to the actual object.</summary>
            <param name="noteRecord">Specifies the note record</param>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.Remove(Pastel.Evolution.Note)">
            <summary>
            Removes the specified note from the collection
            </summary>
            <param name="noteRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.RemoveAt(System.Int32)">
            <summary> Removes a note record using its zero-based index. </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.Save">
            <summary> Calls the Save method on each note record </summary>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.Delete">
            <summary> Calls the Delete method on each note record </summary>
        </member>
        <member name="M:Pastel.Evolution.NoteCollection.Clone">
            <summary> Clone each record within the collection. </summary>
        </member>
        <member name="T:Pastel.Evolution.OrderLineDetailCollection">
            <summary>Represents a collection of order line detail items, typically owned by a given document line record.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetailCollection.Item(System.Int32)">
            <summary>Gets an order line detail object by its zero-based index.</summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetailCollection.Add(System.String,System.Double)">
            <summary>Appends a line detail to the order detail line.</summary>
            <param name="binNumber">The inventory bin number</param>
            <param name="quantity">The quantity to order</param>
            <returns>The newly created line detail record.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetailCollection.Add(Pastel.Evolution.InventoryBin,System.Double)">
            <summary>Appends a line detail to the order detail line.</summary>
            <param name="bin">The inventory bin</param>
            <param name="quantity">The quantity to order</param>
            <returns>The newly created line detail record.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetailCollection.Add(Pastel.Evolution.OrderLineDetail)">
            <summary>Appends a line detail to the order detail line.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetailCollection.Remove(Pastel.Evolution.OrderLineDetail)">
            <summary>Removes the specified order line detail from the collection.</summary>
            <param name="lineDetail"></param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetailCollection.RemoveAll">
            <summary>Remove all order line detail from the collection.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetailCollection.RemoveAt(System.Int32)">
            <summary>Removes an order line detail using its zero-based index.</summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetailCollection.Detach">
            <summary>Calls the Detach method on each line detail record.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetailCollection.BinLocationContext">
            <summary>Gets the bin location context.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetailCollection.Single">
            <summary>Gets the first order line detail object.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetailCollection.SingleDeleted">
            <summary>Gets the first order deleted line detail object.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetailCollection.Save">
            <summary>Calls the Save method on each line detail record.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetailCollection.Process(System.Int64)">
            <summary>Calls the Process method on each line detail record.</summary>
        </member>
        <member name="E:Pastel.Evolution.OrderLineDetailCollection.CollectionChanged">
            <summary>Occurs when detail records are added or deleted.</summary>
        </member>
        <member name="T:Pastel.Evolution.EntryType">
            <summary>Describes the type of entry used with regards to line quantities. </summary>
        </member>
        <member name="T:Pastel.Evolution.OrderLineDetail">
            <summary>Represents an inventory document line detail record.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.#ctor">
            <summary>Creates a new instance of a order line detail record.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.#ctor(System.Double)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="quantity">Specifies the quantity.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.#ctor(Pastel.Evolution.Lot)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="lot">Specifies the lot.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.#ctor(Pastel.Evolution.InventoryBin)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="bin">Specifies the bin location.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.#ctor(Pastel.Evolution.Unit)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="unit">Specifies the unit of measure.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.#ctor(Pastel.Evolution.Lot,Pastel.Evolution.InventoryBin,Pastel.Evolution.Unit,System.Double)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="lot">Specifies the lot.</param>
            <param name="bin">Specifies the bin location.</param>
            <param name="unitOfMeasure">Specifies the unit of measure.</param>
            <param name="quantity">Specifies the quantity.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.#ctor(System.String,System.String,System.String,System.Double)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="lotNumber">Specifies the lot number.</param>
            <param name="binName">Specifies the bin location name.</param>
            <param name="unitCode">Specifies the unit of measure code.</param>
            <param name="quantity">Specifies the quantity.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.#ctor(System.Int64)">
            <summary>Creates a new instance of an order line detail record.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.LongID">
            <summary> Transitional accessor.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.Document">
            <summary>Gets the document to which the line detail record belongs.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.Detail">
            <summary>Gets the document line to which the line detail record belongs.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.InventoryItem">
            <summary>Gets or sets the line's inventory item.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.InventoryItemID">
            <summary>Gets or sets the stock item id.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.Warehouse">
            <summary>Gets the warehouse.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.WarehouseID">
            <summary>Gets the warehouse id.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.WarehouseContext">
            <summary> Gets or sets the warehouse context of the inventory item specified.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.BinLocation">
            <summary>Gets or sets the line's detail bin location.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.BinLocationID">
            <summary>Gets or sets the line's detail bin location id.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.BinLocationContext">
            <summary> Gets or sets the bin location context of the inventory item and warehouse specified.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.SerialNumbers">
            <summary>Gets the collection of serial numbers pertaining to the order line detail.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.xAttribute">
            <summary>Gets or sets the line attribute xml.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.AttributeGroup">
            <summary>Indicates the attribute group of the inventory item specified on the order detail line.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.AttributeTxQuantityGroup">
            <summary>Gets the collection of transaction quantities pertaining to the order detail record.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.Quantity">
            <summary>Gets or sets the quantity of product on order.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.Outstanding">
            <summary>Gets the quantity of stock that remains to be processed.</summary>
            <remarks>The calculation is Quantity - Processed.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.Processed">
            <summary>Gets the quantity of stock processed on this line up until this document.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.Reserved">
            <summary>Gets or sets the quantity of stock to reserve for an order (only applies to sales orders).</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.ToProcess">
            <summary>Gets or sets the quantity of stock to move when calling the  Process method.</summary>
            <remarks>This cannot exceed the outstanding quantity.</remarks>
            <remarks>This value also has to effect on credit notes and returns to suppliers.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.LastProcess">
            <summary>Gets the stock quantity moved during the last processing action.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.QuantityRatio">
            <summary>Gets the quantity ratio.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.ToProcessRatio">
            <summary>Gets the to process quantity ratio.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.Module">
            <summary>Indicates the Evolution module of the Order Detail line.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.Description">
            <summary>Gets the detail line description.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.GLAccount">
            <summary>Gets the detail line's GLAccount.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.TaxType">
            <summary>Gets the detail line's tax type.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.QuantityEntryMethod">
            <summary> Describes whether the quantity is entered on the document line or via quantity matrix. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.TotalToProcessTax">
            <summary> Gets the detail line's total tax amount. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.TotalToProcessTaxForeign">
            <summary> Gets the detail line's total tax amount foreign. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.TotalToProcessAfterDocumentDiscountExcl">
            <summary> Gets the detail line's total after document discount. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.TotalToProcessAfterDocumentDiscountExclForeign">
            <summary> Gets the detail line's total after document discount foreign. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.UnitSellingPriceAfterDocumentDiscountExcl">
            <summary> Gets the detail line's exclusive unit selling price after document discount. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.UnitSellingPriceExclAfterLineDiscount">
            <summary> Gets the detail line's exclusive unit selling price after line discount. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.UnitCostPrice">
            <summary> Gets the detail line's unit cost price. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.PurchaseOrderUnitCost">
            <summary> Gets the detail line's purchase order unit cost. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.TotalAdditionalCost">
            <summary> Gets the detail line's total additional cost. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.TotalAdditionalCostForeign">
            <summary> Gets the detail line's total additional cost foreign. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.OverrideSalesAccount">
            <summary>Specifies the GL account to use when processing the document's sales transaction.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.OverrideCostOfSalesAccount">
            <summary>Specifies the GL account to use when processing the document's cost of goods sold transaction.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.OverrideStockAccount">
            <summary>Specifies the GL account to use when processing the document's GL stock transaction.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderLineDetail.OverridePurchaseAccount">
            <summary>Specifies the purchases GL account to use when processing the document's GL transactions.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.Detach">
            <summary> Detaches the object from its database record.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.UpdateToProcessQty">
            <summary>Overrides the ToProcess quantity to the value of Quantity when the document does not allow partial processing.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.ListAttributeQuantities">
            <summary>Returns the detail attribute quantity group.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.ValidateNegativeAttributeQuantities(System.String[]@)">
            <summary>Validate for negative attribute quantities per document line.</summary>
            /// <param name="arrayNegativeAttributes">ArrayNegativeAttributes.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.SetAttributeQuantities(System.Double,System.Double,System.Double,Pastel.Evolution.AttributeTypeValue[])">
            <summary>Set attribute quantities for the detail line.</summary>
            <param name="quantity">Quantity.</param>
            <param name="toProcess">ToProcess.</param>
            <param name="reserved">Reserved.</param>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.SetAttributeQuantities(System.Double,System.Double,System.Double,System.Collections.Generic.List{Pastel.Evolution.AttributeTypeValue})">
            <summary>Set attribute quantities for the detail line.</summary>
            <param name="quantity">Quantity.</param>
            <param name="toProcess">ToProcess.</param>
            <param name="reserved">Reserved.</param>
            <param name="list">List of Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.ReturnTransactionQtyIndex(Pastel.Evolution.AttributeTypeValue[])">
            <summary>Returns the transaction quantity index for the specfic attribute type and value.</summary>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.ResetTransactionQty(System.Double,System.Double,System.Double,System.Int32,System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Double}}@)">
            <summary>Set transaction quantities for an existing attribute type and value.</summary>
            <param name="quantity">Quantity.</param>
            <param name="toProcess">ToProcess.</param>
            <param name="reserved">Reserved.</param>
            <param name="index">Index.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.AddTransactionQty(System.Double,System.Double,System.Double,Pastel.Evolution.AttributeTypeValue[])">
            <summary>Set transaction quantities for an existing attribute type and value.</summary>
            <param name="quantity">Quantity.</param>
            <param name="toProcess">ToProcess.</param>
            <param name="reserved">Reserved.</param>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.ReCalcLineQuantity(System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.String,System.Double}},System.Double,System.Double,System.Double)">
            <summary>Recalculate line quantities pertaining attributes.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.ConfirmMaxTransactionQty">
            <summary>Confirm maximum transaction quantities for an existing attribute type and value.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.ZeroizeTransactionQty(Pastel.Evolution.QuantityType[])">
            <summary>Zeroize a specific transaction quantity for an existing attribute type and value.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.CommitDetailXml">
            <summary>Commit the attribute group collection to xAttribute property variable.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderLineDetail.OnDelete">
            <summary>Removes the line detail record from the document line only, not from the database. </summary>
        </member>
        <member name="T:Pastel.Evolution.OrderDetailCollection">
            <summary>
            Represents a collection of order detail items, typically owned by a given inventory document record.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.OrderDetailCollection.CollectionChanged">
            <summary>
            Occurs when detail records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetailCollection.Item(System.Int32)">
            <summary>
            Gets an order detail object by its zero-based index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.OrderDetailCollection.Add(Pastel.Evolution.OrderDetail)">
            <summary>
            Appends an order detail object to the order.
            </summary>
            <remarks>Take note that upon being added to a document, the detail record will assume the document's sales representative and project.</remarks>
        </member>
        <member name="M:Pastel.Evolution.OrderDetailCollection.Add(System.String,System.Double,System.Double)">
            <summary>
            Appends a detail line to the order.
            </summary>
            <param name="itemCode">The code of the stock item</param>
            <param name="quantity">The quantity to order</param>
            <param name="price">The exclusive unit price</param>
            <returns>The newly created detail record.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderDetailCollection.Add(Pastel.Evolution.InventoryItem,System.Double,System.Double)">
            <summary>
            Appends a detail line to the order.
            </summary>
            <param name="item">The stock item object.</param>
            <param name="quantity">The quantity to order.</param>
            <param name="price">The unit price.</param>
            <returns>The newly created detail record.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderDetailCollection.Add(Pastel.Evolution.InventoryItem,System.String,System.Double,System.Double)">
            <summary>
            Appends a detail line to the order.
            </summary>
            <param name="item">The code of the stock item.</param>
            <param name="warehouseCode">The code of the warehouse to use on this record.</param>
            <param name="quantity">The quantity to order.</param>
            <param name="price">The exclusive unit price.</param>
            <returns>The newly created detail record.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderDetailCollection.Add(System.String,System.String,System.Double,System.Double)">
            <summary>
            Appends a detail line to the order.
            </summary>
            <param name="itemCode">The code of the stock item</param>
            <param name="quantity">The quantity to order</param>
            <param name="warehouseCode">The code of the warehouse to use on this record.</param>
            <param name="price">The exclusive unit price</param>
            <returns>The newly created detail record.</returns>
        </member>
        <member name="P:Pastel.Evolution.OrderDetailCollection.TotalSalesCost">
            <summary>
            Gets the total cost of sale; i.e. current unit cost * quantity
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetailCollection.TotalDiscountAdjustment">
            <summary>
            Gets the total discount adjustment
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetailCollection.TotalDiscountAdjustmentForeign">
            <summary>
            Gets the total discount adjustment foreign
            </summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetailCollection.Remove(Pastel.Evolution.OrderDetail)">
            <summary>
            Removes the specified order detail line from the collection
            </summary>
            <param name="detailRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.OrderDetailCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an order detail line using its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.OrderDetailCollection.Detach(System.Boolean)">
            <summary>
            Calls the Detach method on each detail record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetailCollection.Save">
            <summary>
            Calls the Save method on each detail record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetailCollection.Process(System.Int64)">
            <summary>
            Calls the Process method on each detail record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetailCollection.DefaultTaxRate(Pastel.Evolution.InventoryItem,Pastel.Evolution.Warehouse)">
            <summary>
            Gets the order detail line's default tax rate.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.NatureOfTransaction">
            <summary>
            Represents an EU Nature of Transaction code.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.NatureOfTransaction.#ctor">
            <summary>Creates a new nature of transaction code.</summary>
        </member>
        <member name="M:Pastel.Evolution.NatureOfTransaction.#ctor(System.Int32)">
            <summary>Creates a new instance of a nature of transaction code.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.NatureOfTransaction.#ctor(System.String)">
            <summary>Creates a new instance of a nature of transaction code.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.NatureOfTransaction.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.NatureOfTransaction.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.NatureOfTransaction.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.NatureOfTransaction.Find(System.String)">
            <summary>Finds a project account ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. ProjectCode = 'INT001' or ProjectName like '%Internal%'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.NatureOfTransaction.FindByCode(System.String)">
            <summary>
            Attempts to find a project by its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the project.</param>
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.NatureOfTransaction.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.NatureOfTransaction.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. ProjectCode = 'INT001' or ProjectName like '%Internal%'</param>
            <seealso cref="M:Pastel.Evolution.NatureOfTransaction.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.Project.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.NatureOfTransaction.GetByCode(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.NatureOfTransaction.GetByCode(System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.NatureOfTransaction.Get(System.String)" />
            <seealso cref="M:Pastel.Evolution.Project.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.NatureOfTransaction.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.NatureOfTransaction.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.NatureOfTransaction.Code">
            <summary>Gets or sets the nature of transaction code.</summary>
        </member>
        <member name="P:Pastel.Evolution.NatureOfTransaction.Description">
            <summary>Gets or sets the project description.</summary>
        </member>
        <member name="T:Pastel.Evolution.Worker">
            <summary>
            Represents a Worker.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Worker.#ctor">
            <summary>Creates a new instance of  a Worker.</summary>
        </member>
        <member name="M:Pastel.Evolution.Worker.#ctor(System.Int32)">
            <summary>Creates a new instance of  a Worker.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Worker.#ctor(System.String)">
            <summary>Creates a new instance of  a Worker.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.Worker.Item(System.String)">
            <summary>Gets a worker object possessing the given code.</summary>
            <returns>The worker matching the supplied code.</returns>
            <exception cref="T:Pastel.Evolution.RecordNotExistsException"/>
        </member>
        <member name="P:Pastel.Evolution.Worker.Active">
            <summary>Gets or sets the worker's operational state.</summary>
            <remarks>Inactive records cannot be used when posting transactions.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Worker.BillableRate">
            <summary>Gets or sets the worker's billable rate.</summary>
        </member>
        <member name="P:Pastel.Evolution.Worker.WorkerCost">
            <summary>Gets or sets the worker's cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.Worker.Module">
            <summary>Gets the Evolution module this record belongs to,  Used in internal validation.</summary>
        </member>
        <member name="P:Pastel.Evolution.Worker.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Worker.Code">
            <summary>Gets or sets the worker's code.</summary>
            <remarks>This field maps to the cWorkerCode database field. This is a mandatory field.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Worker.Description">
            <summary>Gets or sets the worker's name.</summary>
        </member>
        <member name="M:Pastel.Evolution.Worker.Find(System.String)">
            <summary>Finds a worker ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cWorkerCode = 'WORK001' or cWorkerName like '%Worker%'</param>
        </member>
        <member name="M:Pastel.Evolution.Worker.FindByCode(System.String)">
            <summary>Attempts to find a worker by its code and returns its ID.</summary>
            <param name="code">The code used to lookup the worker.</param>
            <seealso cref="M:Pastel.Evolution.Worker.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first worker matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.Worker.Get(System.String)">
            <summary>Returns the [first] worker object matching the criteria specified; otherwise, returns null.</summary>
            <param name="criteria"> Eg. cWorkerCode = 'WORK001' or cWorkerName like '%Worker%'</param>
            <seealso cref="M:Pastel.Evolution.Worker.Find(System.String)" />
        </member>
        <member name="M:Pastel.Evolution.Worker._Select(System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.Worker.GetByCode(System.String)">
            <summary>Returns a worker object corresponding to the code specified; otherwise, returns null.</summary>
            <param name="code">
            </param>
        </member>
        <member name="M:Pastel.Evolution.Worker.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Worker.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.Worker.List(System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the _etblWorkers table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. cWorkerCode like '1___'</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.Worker.List(System.String,System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the _etblWorkers table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. cWorkerCode like '1___'</param>
            <param name="sortOrder">The SQL order by clause to use, e.g. cWorkerName, cWorkerCode</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="T:Pastel.Evolution.PurchaseOrder">
            <summary>
            Representation a Purchase Order document.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.#ctor">
            <summary>Creates a new instance of  a purchase order.</summary>
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.#ctor(System.Int64)">
            <summary>Creates a new instance of  a purchase order.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.#ctor(System.Int64,Pastel.Evolution.OrderBase)">
            <summary>Creates a new instance of  a purchase order.</summary>
            <param name="id">Specifies the id of the existing record.</param>
            <param name="ArchiveDoc">Specifies the archive document of the existing record.</param>
            
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.#ctor(System.String)">
            <summary>Creates a new instance of an existing purchase order.</summary>
            <param name="orderNo">Specifies the order number of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.#ctor(System.String,System.String)">
            <summary>Creates an instance of an existing unprocessed supplier invoice having the given purchase order and grv numbers.</summary>
            <param name="orderNumber">The purchase order number.</param>
            <param name="grvNumber">The GRV number with which this supplier invoice is associated.</param>
        </member>
        <member name="P:Pastel.Evolution.PurchaseOrder.Supplier">
            <summary>Gets or sets the order's supplier account (maps directly to Account).</summary>
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.Process(System.String)">
            <summary>Posts the document to the various accounts and ledgers applicable.</summary>
            <param name="reference">Specifies the GRV Number to post.  If specified, no number will be generated.
            Note that no duplication checking is performed. 
            When processing an unprocessed supplier invoice document, the reference parameter is ignored.</param>
            <seealso cref="M:Pastel.Evolution.PurchaseOrder.ProcessStock" />
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.ProcessStock">
            <summary>Processes a stock receipt without posting a supplier invoice.  Only allowed when supplier invoice/GRV separation is enabled in purchase order defaults.</summary>
            <seealso cref="M:Pastel.Evolution.PurchaseOrder.Process(System.String)" />
            <seealso cref="M:Pastel.Evolution.PurchaseOrder.Process(System.String)" />
            
            <returns>The generated GRV number.</returns>
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.ProcessStock(System.String)">
            <summary>Processes a stock receipt without posting a supplier invoice.  Only allowed when supplier invoice/GRV separation is enabled in purchase order defaults.</summary>
            <remarks>Receiving stock results in an archived GRV document and an unprocessed supplier invoice document.</remarks>
            <param name="reference">Custom GRV number.</param>
            <returns>The GRV number passed in; the generated GRV number if an empty string is supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.CompleteStock">
            <summary>Processes a stock receipt (maximum quantity) without posting a supplier invoice.  Only allowed when supplier invoice/GRV separation is enabled in purchase order defaults.</summary>
            <seealso cref="M:Pastel.Evolution.PurchaseOrder.ProcessStock" />
            <returns>The generated GRV number.</returns>
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.CompleteStock(System.String)">
            <summary>Processes a stock receipt (maximum quantity) without posting a supplier invoice.  Only allowed when supplier invoice/GRV separation is enabled in purchase order defaults.</summary>
            <param name="reference">Specifies the GRV number to post.</param>
            <seealso cref="M:Pastel.Evolution.PurchaseOrder.CompleteStock" />
            <returns>The supplied GRV number.</returns>
        </member>
        <member name="P:Pastel.Evolution.PurchaseOrder.GrvState">
            <summary>Gets the phase of this goods receiving document, either a goods received note or a supplier invoice.</summary>
        </member>
        <member name="P:Pastel.Evolution.PurchaseOrder.SupplierInvoiceNo">
            <summary>Gets or sets the document supplier invoice number.</summary>
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.Find(System.String)">
            <summary>Finds and returns the id of the first order matching the supplied criteria. E.g. OrderNum = 'PO0001'</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.List(System.String)">
            <summary>Lists outstanding orders for the supplied criteria.</summary>
            <remarks>Table aliases: Core, Supplier</remarks>
            <param name="criteria">E.g. Supplier.Account = 'SUPP001' and (OrderNum = 'PO209302')</param>
        </member>
        <member name="M:Pastel.Evolution.PurchaseOrder.ListArchived(System.String)">
            <summary>Lists archived orders for the supplied criteria.</summary>
            <remarks>Pseudo-tables: Core, Supplierr</remarks>
            <param name="criteria">E.g. Supplier.Account = 'SUPP001' and (OrderNum = 'PO209302')</param>
        </member>
        <member name="T:Pastel.Evolution.ReturnToSupplier">
            <summary>
            Represents a return to supplier document.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.ReturnToSupplier.Find(System.String)">
            <summary>Finds and returns the id of the first order matching the supplied criteria. E.g. OrderNum = 'PO0001'</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.ReturnToSupplier.List(System.String)">
            <summary>Lists documents for the supplied criteria.</summary>
            <remarks>Table aliases: Core, Supplier</remarks>
            <param name="criteria">E.g. Supplier.Account = 'SUPP001' and (OrderNum = 'PO209302')</param>
        </member>
        <member name="M:Pastel.Evolution.ReturnToSupplier.Process">
            <summary>Posts the document to the various accounts and ledgers applicable.</summary>
        </member>
        <member name="P:Pastel.Evolution.BranchedRecordBase.BranchID">
            <summary>
            Gets the record's branch ID.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.RecordBase">
            <summary>
            Embodies a common Evolution record, such as an account.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RecordBase.Save">
            <summary>
            Persists the record to the database.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RecordBase.Delete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="P:Pastel.Evolution.RecordBase.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RecordBase.LongID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="M:Pastel.Evolution.RecordBase.RejectUnsaved(Pastel.Evolution.RecordBase,System.String)">
            <summary>
            Ensures that the record has a non-zero ID.  Null references are ignored.
            </summary>
            <param name="record">The record to test.</param>
            <param name="message">The exception message, should the record have a zero ID. If null or empty, a generic message will be provided.</param>
        </member>
        <member name="M:Pastel.Evolution.RecordBase.RejectUnsaved(Pastel.Evolution.RecordBase)">
            <summary>
            Ensures that the recordBase has a non-zero ID.  Null references are ignored.
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Pastel.Evolution.RecordBase.AreEqual(Pastel.Evolution.RecordBase,Pastel.Evolution.RecordBase)">
            <summary>
            Determines whether the specified records are considered equal, the condition being that their ID's agree (even if both are 0) or that both are null.
            </summary>
            <param name="record1"></param>
            <param name="record2"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.ReferenceManager.Generate(System.String,System.String,System.Int32)">
            <summary>
            Generates and commits a reference using the given prefix and padding length parameters.
            </summary>
            <param name="refBase">The reference base.</param>
            <param name="prefix">The prefix of the returned reference</param>
            <param name="refPadLength">The character length to which the numeric portion of the returned references gets padded.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.ReferenceManager.Provision(System.String,System.String,System.Int32,System.Int32@)">
            <summary>
            Generates and returns a reference number without committing the allocated reference number.
            </summary>
            <param name="refBase"></param>
            <param name="prefix"></param>
            <param name="refPadLength"></param>
            <param name="reference"></param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.Contract">
            <summary>
            Represents a Contact Management contract.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Contract.#ctor">
            <summary>Creates a new instance of a contract.</summary>
        </member>
        <member name="M:Pastel.Evolution.Contract.#ctor(System.Int32)">
            <summary>Creates a new instance of a contract.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.Contract.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Contract.ContractNo">
            <summary>Gets or sets the contract number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Contract.Reference">
            <summary>Gets or sets the contract reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.Contract.Name">
            <summary>Gets or sets the contract name.</summary>
        </member>
        <member name="P:Pastel.Evolution.Contract.Account">
            <summary>Gets or sets the customer on the contract.</summary>
        </member>
        <member name="P:Pastel.Evolution.Contract.BillingType">
            <summary>Gets or sets the contract billing type.</summary>
        </member>
        <member name="P:Pastel.Evolution.Contract.Cost">
            <summary>Gets or sets the contract cost.</summary>
        </member>
        <member name="P:Pastel.Evolution.Contract.Units">
            <summary>Gets or sets the contract units, the unit can be minutes or incidents per pack.</summary>
        </member>
        <member name="P:Pastel.Evolution.Contract.StartDate">
            <summary>Gets or sets the contract start date.</summary>
        </member>
        <member name="P:Pastel.Evolution.Contract.EndDate">
            <summary>Gets or sets the contract end date.</summary>
        </member>
        <member name="P:Pastel.Evolution.Contract.IncidentTypeID">
            <summary>Gets or sets the incident's incident type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Contract.IncidentType">
            <summary>Gets or sets the incident type.</summary>
        </member>
        <member name="M:Pastel.Evolution.Contract.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Contract.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="T:Pastel.Evolution.Event">
            <summary>
            Represents a Contact Management sales evnt.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Event.#ctor">
            <summary>Creates a new instance of an evnt.</summary>
        </member>
        <member name="M:Pastel.Evolution.Event.#ctor(System.Int32)">
            <summary>Creates a new instance of an event.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.Event.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Event.AgentID">
            <summary>
            Gets the agent ID.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Event.Agent">
            <summary>
            Gets or sets the agent in whose calendar the event exists.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Event.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Event.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="T:Pastel.Evolution.EscalationGroup">
            <summary>
            Represents a Contact Management escalation group.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.EscalationGroup.#ctor">
            <summary>Creates a new instance of an escalation group.</summary>
        </member>
        <member name="M:Pastel.Evolution.EscalationGroup.#ctor(System.Int32)">
            <summary>Creates a new instance of an escalation group.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.EscalationGroup.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="M:Pastel.Evolution.EscalationGroup.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.EscalationGroup.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="T:Pastel.Evolution.IncidentCategory">
            <summary>
            Represents an incident category.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.IncidentCategory.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.IncidentCategory.Description">
            <summary>
            Gets or sets the record description.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.IncidentCategory.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.IncidentCategory.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="T:Pastel.Evolution._GroupCollection">
            <summary>
            Represents a collection of agent groups.
            </summary>
            <seealso cref="T:Pastel.Evolution.WarehouseContext"/>
        </member>
        <member name="P:Pastel.Evolution._GroupCollection.Item(System.String)">
            <summary>
            Gets the warehouse context object relating to the current item and the warehouse code specified.
            </summary>
            <param name="warehouseCode"></param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.AgentSession">
            <summary>
            Represents a project.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.#ctor">
            <summary>Creates a new instance of a retail agent session.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.#ctor(System.Int32)">
            <summary>Creates a new instance of a retail agent session.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.#ctor(System.Boolean)">
            <summary>Creates a new instance of a retail agent session.</summary>
            <param name="cashedup">Specifies the cashedup status of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.#ctor(System.Boolean,Pastel.Evolution.Agent)">
            <summary>Creates a new instance of a retail agent session.</summary>
            <param name="cashedup">Specifies the cashedup status of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.#ctor(System.String)">
            <summary>Creates a new instance of a retail agent session.</summary>
            <param name="agentName">Specifies the agent name of the existing record with a status of not cashed up..</param>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.#ctor(System.String,System.String)">
            <summary> Creates a new instance of a retail agent session. </summary>
            <param name="agentName">Specifies the agent name of the existing record with a status of not cashed up..</param>
            <param name="tillCode">Specifies the till cashup code.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.Exist(System.Boolean,Pastel.Evolution.Agent,Pastel.Evolution.RetailTill)">
            <summary> Finds a retail agent session ID.</summary>
            <param name="cashedUp">Specifies the cashedup status of the existing record.</param>
            <param name="agentName">Specifies the agent of the existing record with a status of not cashed up.</param>
            <param name="retailTill">Specifies the retail till.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.LogOff">
            <summary>Log the agent of a specific till.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.Find(System.String)">
            <summary>Finds a retail agent session ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. bCashedUp = 0</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.FindByStatus(System.Boolean)">
            <summary>
            Attempts to find a retail agent session by its cashed up status and returns its ID.
            </summary>
            <param name="cashedup">The cashed up status used to lookup the agent session.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.AgentSession.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. bCashedUp = 0</param>
            <seealso cref="M:Pastel.Evolution.AgentSession.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.AgentSession.#ctor(System.Boolean)" />
            <seealso cref="!:GetByCode(string)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentSession.GetByStatus(System.Boolean)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.AgentSession.Get(System.String)" />
            <seealso cref="M:Pastel.Evolution.AgentSession.#ctor(System.Boolean)" />
            <seealso cref="M:Pastel.Evolution.AgentSession.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.TradingSession">
            <summary>Gets the record's trading session.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.TradingSessionID">
            <summary>Gets the record's trading session id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.IsTillSession">
            <summary>Gets the record's is a till session status.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.TillSessionID">
            <summary>Gets the record's till session id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.Agent">
            <summary>Gets or sets the record's agent.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.AgentID">
            <summary>Gets or sets the record's agent id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.RetailTill">
            <summary>Gets or sets the record's till.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.RetailTillID">
            <summary>Gets or sets the record's till id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.AgentFloat">
            <summary>Gets the record's agent float amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.CurrentDate">
            <summary>Gets the record's current date.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.CashedUp">
            <summary>Gets the record's cashed up status.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.CashUpReference">
            <summary>Gets the record's cashup reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.CashupDate">
            <summary>Gets the record's cashup date.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.CashUpTill">
            <summary>Gets the record's cashup till.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.CashUpTillID">
            <summary>Gets the record's cashup till id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.CashUpFinalised">
            <summary>Gets the record's cashed up status.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.FinaliseAgent">
            <summary>Gets the record's finalise agent.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.FinaliseAgentID">
            <summary>Gets the record's finalise agent id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.CashupAgent">
            <summary>Gets the record's cashup agent.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.CashupAgentID">
            <summary>Gets the record's cashup agent id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.FinaliseDate">
            <summary>Gets the record's finalise date.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSession.FloatCounted">
            <summary>Gets the record's cashup float amount.</summary>
        </member>
        <member name="T:Pastel.Evolution.AgentSessionDenomination">
            <summary>
            Represents a agent session denomination.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionDenomination.#ctor">
            <summary>Creates a new instance of a agent session denomination.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionDenomination.#ctor(System.Int32)">
            <summary>Creates a new instance of a agent session denomination.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionDenomination.#ctor(Pastel.Evolution.CashupStatus)">
            <summary>Creates a new instance of a agent session denomination.</summary>
            <param name="status">Specifies the cashup status of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionDenomination.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionDenomination.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionDenomination.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionDenomination.Find(System.String)">
            <summary>Finds an agent session denomination ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. iAgentSessionID = 2</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionDenomination.FindByDenomination(Pastel.Evolution.AgentSession,Pastel.Evolution.Denomination)">
            <summary>
            Attempts to find a agent session denomination by its status and returns its ID.
            </summary>
            <param name="code">The status used to lookup the agent session denomination.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.AgentSessionDenomination.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionDenomination.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. iAgentSessionID = 2</param>
            <seealso cref="M:Pastel.Evolution.AgentSessionDenomination.Find(System.String)" />
            <seealso cref="!:AgentSession(string)" />
            <seealso cref="!:GetByName(string)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionDenomination.GetByDenomination(Pastel.Evolution.AgentSession,Pastel.Evolution.Denomination)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.AgentSessionDenomination.Get(System.String)" />
            <seealso cref="!:AgentSession(string)" />
            <seealso cref="M:Pastel.Evolution.AgentSessionDenomination.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionDenomination.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionDenomination.AgentSession">
            <summary>Gets or sets the agent session for the denomination.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionDenomination.AgentSessionID">
            <summary>Gets or sets the agent session for the denomination id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionDenomination.Denomination">
            <summary>Gets or sets the denomination.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionDenomination.DenominationID">
            <summary>Gets or sets the denomination id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionDenomination.FloatCount">
            <summary>Gets the record's float count.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionDenomination.CashCount">
            <summary>Gets the record's cash count.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionDenomination.FloatCountFinalised">
            <summary>Gets the record's status if float count has been finalised.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionDenomination.CashCountFinalised">
            <summary>Gets the record's status if float count has been finalised.</summary>
        </member>
        <member name="T:Pastel.Evolution.AgentSessionTenderTotals">
            <summary>
            Represents an agent session tender total.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionTenderTotals.#ctor">
            <summary>Creates a new instance of an agent session tender total.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionTenderTotals.#ctor(System.Int32)">
            <summary>Creates a new instance of an agent session tender total.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionTenderTotals.#ctor(Pastel.Evolution.AgentSession,Pastel.Evolution.TenderType)">
            <summary>Creates a new instance of an agent session tender total.</summary>
            <param name="status">Specifies the cashup status of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionTenderTotals.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionTenderTotals.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionTenderTotals.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionTenderTotals.Find(System.String)">
            <summary>Finds an agent session tender type total ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. iAgentSessionID = 2</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionTenderTotals.FindBySessionTender(Pastel.Evolution.AgentSession,Pastel.Evolution.TenderType)">
            <summary>
            Attempts to find an agent session tender type total by an agent session and tender type and returns its ID.
            </summary>
            <param name="code">The status used to lookup the agent session tender type total.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.AgentSessionTenderTotals.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionTenderTotals.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. iAgentSessionID = 2</param>
            <seealso cref="M:Pastel.Evolution.AgentSessionTenderTotals.Find(System.String)" />
            <seealso cref="!:AgentSession(string)" />
            <seealso cref="!:GetByName(string)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.AgentSessionTenderTotals.GetBySessionTender(Pastel.Evolution.AgentSession,Pastel.Evolution.TenderType)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.AgentSessionTenderTotals.Get(System.String)" />
            <seealso cref="!:AgentSession(string)" />
            <seealso cref="M:Pastel.Evolution.AgentSessionTenderTotals.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionTenderTotals.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionTenderTotals.AgentSession">
            <summary>Gets or sets the agent session for the tender type totals.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionTenderTotals.AgentSessionID">
            <summary>Gets or sets the agent session for the tender type totals id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionTenderTotals.TenderType">
            <summary>Gets or sets the tender type for the tender type totals.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionTenderTotals.TenderTypeID">
            <summary>Gets or sets the tender type for the tender type totals id.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionTenderTotals.CashTenderType">
            <summary>Gets the record's status if the tender is of type cash tender.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionTenderTotals.TenderCount">
            <summary>Gets the record's tender count.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionTenderTotals.TenderAmountSystem">
            <summary>Gets the record's system tender amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionTenderTotals.TenderAmountAdjusted">
            <summary>Gets the record's adjusted tender amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionTenderTotals.TenderAmountCounted">
            <summary>Gets the record's counted tender amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.AgentSessionTenderTotals.TenderAmountFinalised">
            <summary>Gets the record's finalised tender amount.</summary>
        </member>
        <member name="T:Pastel.Evolution.CashUp">
            <summary>
            Represents a project.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CashUp.#ctor">
            <summary>Creates a new instance of a retail cashup.</summary>
        </member>
        <member name="M:Pastel.Evolution.CashUp.#ctor(System.Int32)">
            <summary>Creates a new instance of a retail cashup.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CashUp.#ctor(System.Boolean)">
            <summary>Creates a new instance of a retail cashup.</summary>
            <param name="cashedup">Specifies the cashedup status of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CashUp.#ctor(System.Boolean,Pastel.Evolution.Agent)">
            <summary>Creates a new instance of a retail cashup.</summary>
            <param name="cashedup">Specifies the cashedup status of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CashUp.#ctor(System.String)">
            <summary>Creates a new instance of a retail cashup.</summary>
            <param name="agentName">Specifies the agent name of the existing record with a status of not cashed up.</param>
        </member>
        <member name="M:Pastel.Evolution.CashUp.#ctor(System.String,System.String)">
            <summary> Creates a new instance of a retail cashup. </summary>
            <param name="agentName">Specifies the agent name of the existing record with a status of not cashed up..</param>
            <param name="tillCode">Specifies the till cashup code.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.CashUp.Find(System.String)">
            <summary>Finds a retail cashup record ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. bCashedUp = 0</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.CashUp.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.CashUp.FindByStatus(System.Boolean)">
            <summary>
            Attempts to find a retail cashup by its cashed up status and returns its ID.
            </summary>
            <param name="cashedup">The cashed up status used to lookup the agent session.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.CashUp.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.CashUp.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. bCashedUp = 0</param>
            <seealso cref="M:Pastel.Evolution.CashUp.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.AgentSession.#ctor(System.Boolean)" />
            <seealso cref="!:GetByCode(string)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.CashUp.GetByStatus(System.Boolean)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.CashUp.Get(System.String)" />
            <seealso cref="M:Pastel.Evolution.AgentSession.#ctor(System.Boolean)" />
            <seealso cref="M:Pastel.Evolution.CashUp.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.CashUp.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashUp.CashUpEntry">
            <summary>Gets the cashup collection representing the cashup entry for the cashup process.</summary>
            <seealso cref="!:CashupEntry" />
        </member>
        <member name="T:Pastel.Evolution.CashUpBase">
            <summary>
            Represents a project.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CashUpBase.#ctor">
            <summary>Creates a new instance of a retail cashup.</summary>
        </member>
        <member name="M:Pastel.Evolution.CashUpBase.#ctor(System.Int32)">
            <summary>Creates a new instance of a retail cashup.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CashUpBase.#ctor(System.Boolean)">
            <summary>Creates a new instance of a retail cashup.</summary>
            <param name="cashedup">Specifies the cashedup status of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CashUpBase.#ctor(System.Boolean,Pastel.Evolution.Agent)">
            <summary>Creates a new instance of a retail cashup.</summary>
            <param name="cashedup">Specifies the cashedup status of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CashUpBase.#ctor(System.String)">
            <summary>Creates a new instance of a retail cashup.</summary>
            <param name="agentName">Specifies the agent name of the existing record with a status of not cashed up.</param>
        </member>
        <member name="M:Pastel.Evolution.CashUpBase.#ctor(System.String,System.String)">
            <summary> Creates a new instance of a retail cashup. </summary>
            <param name="agentName">Specifies the agent name of the existing record with a status of not cashed up..</param>
            <param name="tillCode">Specifies the till cashup code.</param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.CashUpEntry">
            <summary>
            Represents a collection of retail denominations.
            <seealso cref="!:DenominationTypeCollection"/>
            </summary>
        </member>
        <member name="P:Pastel.Evolution.CashUpEntry.Cash">
            <summary>Gets or sets a cash type for cashup.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashUpEntry.Type">
            <summary>Gets or sets a cash type for cashup.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashUpEntry.Denomination">
            <summary>Gets or sets the denomination.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashUpEntry.Count">
            <summary>Gets or sets the denomination count value.</summary>
        </member>
        <member name="P:Pastel.Evolution.CashUpEntry.Amount">
            <summary>Gets the denomination amount value.</summary>
        </member>
        <member name="T:Pastel.Evolution.CashUpCollection">
            <summary>
            Represents an inventory selling price collection.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.CashUpCollection.CollectionChanged">
            <summary>
            Occurs when tender type records are added or deleted.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CashUpCollection.Add(Pastel.Evolution.DenominationType,System.String,System.Double)">
            <summary>
            Appends a cash cashup entry record to the cashup. 
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CashUpCollection.Add(Pastel.Evolution.CashupType,System.Double)">
            <summary>
            Appends a non-cash cashup entry record to the cashup. 
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CashUpCollection.Remove(Pastel.Evolution.CashUpEntry)">
            <summary>
            Removes the specified cashup entry record from the collection
            </summary>
            <param name="cashupEntry"></param>
        </member>
        <member name="M:Pastel.Evolution.CashUpCollection.Process">
            <summary>
            Calls the Process method on each detail record
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Denomination">
            <summary>
            Represents a retail denomination.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Denomination.#ctor">
            <summary>Creates a new instance of a denomination.</summary>
        </member>
        <member name="M:Pastel.Evolution.Denomination.#ctor(System.Int32)">
            <summary>Creates a new instance of a denomination.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Denomination.#ctor(System.String)">
            <summary>Creates a new instance of a denomination.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Denomination.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Denomination.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.Denomination.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.Denomination.Find(System.String)">
            <summary>Finds a denomination ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cDominationCode = '50.00'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Denomination.FindByCode(System.String)">
            <summary>
            Attempts to find a retail denomination by its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the retail denomination.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.Denomination.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.Denomination.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cDenominationCode = '50.00'</param>
            <seealso cref="M:Pastel.Evolution.Denomination.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.Denomination.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.Denomination.GetByCode(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.Denomination.GetByCode(System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.Denomination.Get(System.String)" />
            <seealso cref="M:Pastel.Evolution.Denomination.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.Denomination.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.Denomination.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Denomination.Code">
            <summary>Gets the retail denomination code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Denomination.Multiple">
            <summary>Gets the retail denomination multiple.</summary>
        </member>
        <member name="P:Pastel.Evolution.Denomination.IsCoin">
            <summary>Gets the record's is a coin state.</summary>
        </member>
        <member name="P:Pastel.Evolution.Denomination.Active">
            <summary>Gets the record's active state.</summary>
        </member>
        <member name="M:Pastel.Evolution.DocketNumberManager.CommitDocketNumber(Pastel.Evolution.RetailTill,Pastel.Evolution.RetailTransactions)">
            <summary>
            Commits and returns the next retail docket number.  If automatic numbering is not used, a zero is returned.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.DocketNumberManager.Provision(Pastel.Evolution.RetailTill,Pastel.Evolution.RetailTransactions)">
            <summary>
            Generates and returns a reference number without committing the allocated reference number.
            </summary>
            <param name="till"></param>
            <param name="retailTrans"></param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.RetailCreditNoteDocket">
            <summary>
            Represents an Evolution sales credit note.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailCreditNoteDocket.#ctor">
            <summary>Creates a new instance of  a credit note.</summary>
        </member>
        <member name="M:Pastel.Evolution.RetailCreditNoteDocket.#ctor(System.Int64)">
            <summary>Creates a new instance of  a credit note.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.RetailCreditNoteDocket.Find(System.String)">
            <summary>Finds and returns the id of the first document matching the supplied criteria. E.g. InvNumber = 'CRN0001'</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailCreditNoteDocket.List(System.String)">
            <summary>Lists unprocessed documents for the supplied criteria.</summary>
            <remarks>Pseudo-tables: Core, Customer</remarks>
            <param name="criteria">E.g. Customer.Account = 'CASH001' and (OrderNum = 'SO209302')</param>
        </member>
        <member name="P:Pastel.Evolution.RetailCreditNoteDocket.InvoiceNumber">
            <summary>Gets or sets the credit note's invoice number.</summary>
            <remarks>The invoice number refers back to an original sale.</remarks>
        </member>
        <member name="T:Pastel.Evolution.RetailDocumentType">
            <summary>
            Describes a retail document type.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.RetailDocketBase">
            <summary>
            Includes functionality that is common to all inventory documents. Must be inherited.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.DefaultTaxMode">
            <summary>Gets the global default tax mode.</summary>
            <remarks>The default tax mode is Exclusive.  This is to provide backward compatibility with earlier implementations of the SDK.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.IsLoading">
            <summary>
            Will be true while the order is busy loading detail.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.IsProcessing">
            <summary>
            Will be true while the order is busy processing transactions.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.RetailDocketBase.processLedger">
            <summary>
            Should the document process to AR or AP ledger?
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Audit">
            <summary>Gets the audit number of the last transaction processed by this document.  This value defaults to 0, and will not be available on recalled documents.</summary>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.initialise">
            <summary>
            Reverts the order to an unsaved, version 0 (see remarks) state.
            </summary>
            <remarks>Version 0: When using the Revert method, the order is set to an unsaved state, allowing it to be saved as another order. It does not; however, revert back to the last saved state, but rather assumes the current state as far as order detail is concerned.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.UserFields">
            <summary>
            Gets access to the collection of user-defined fields on the record.  Note that the field name is case-sensitive.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Type">
            <summary>Gets the document type.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.State">
            <summary>Gets the document state.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Version">
            <summary>Gets the current version of the order, incremented on every save.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.OriginalDocument">
            <summary>Gets the original document.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Reference">
            <summary>Gets or sets the document reference (InvNumber).</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Reference2">
            <summary>Gets the 2nd document reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Account">
            <summary>Gets or sets the AR or AP account associated with the order.</summary>
            <seealso cref="T:Pastel.Evolution.Supplier" />
            <seealso cref="T:Pastel.Evolution.Customer" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.LedgerTransaction">
            <summary>Gets the last ledger transaction (AR/AP Transaction) posted.</summary>
            <remarks>This transaction reference is only available immediately after processing the document.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.AccountID">
            <summary>Gets or sets the ID of the AR or AP account associated with the order.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Description">
            <summary>Gets or sets the document description.  This will also be the description on any transactions posted.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.InvoiceDate">
            <summary>Gets or sets the invoice date.</summary>
            <remarks>The invoice date will determine the transaction date when posting the document.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.ApplyTaxPerLine">
            <summary>Gets or sets whether tax per line should be applied.</summary>
            <remarks>When tax per line is false the Tax amount will be calculated on the Total Order Exclusive amount, instead of each Line's Exclusive amount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.OrderDate">
            <summary>Gets or sets the order date.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.DueDate">
            <summary>Gets or sets the due date.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.DeliveryDate">
            <summary>Gets or sets the delivery date.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TaxMode">
            <summary>Gets or sets the tax mode.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.DeliverTo">
            <summary>Gets or sets the delivery address.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.InvoiceTo">
            <summary>Gets or sets the invoice address.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.OrderNo">
            <summary>Gets or sets the order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.DeliveryMethodID">
            <summary>Gets or sets the delivery method ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.DeliveryMethod">
            <summary>Gets or sets the delivery method.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.MessageLine1">
            <summary>Gets or sets the 1st message line.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.MessageLine2">
            <summary>Gets or sets the 2nd message line.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.MessageLine3">
            <summary>Gets or sets the 3rd message line.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.ProjectID">
            <summary>Gets or sets the project ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Project">
            <summary>Gets or sets the project.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.OrderStatusID">
            <summary>Gets or sets the order status ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.OrderStatus">
            <summary>Gets or sets the document's order status.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.OrderPriorityID">
            <summary>Gets or sets the order priority ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.OrderPriority">
            <summary>Gets or sets the order priority.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.ExternalOrderNo">
            <summary>Gets or sets the external order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.CurrencyID">
            <summary>Gets or sets the document's currency ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Currency">
            <summary>Gets or sets the currency.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.ExchangeRate">
            <summary>Gets or sets the exchange rate.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.PrintCount">
            <summary>Gets or sets the print count.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TaxNumber">
            <summary>Gets or sets the cash account's tax number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Detail">
            <summary>Gets the order detail collection representing the body of the document.</summary>
            <seealso cref="T:Pastel.Evolution.OrderDetail" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Tender">
            <summary>Gets the retail tender collection representing the payments of the retail docket.</summary>
            <seealso cref="T:Pastel.Evolution.OrderDetail" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.Discount">
            <summary>Gets or sets the document discount amount (applicable to tax excl. total),</summary>
            <remarks>Document discount is applied after line discount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.DiscountForeign">
            <summary>Gets or sets the document foreign discount amount (applicable to tax excl. total),</summary>
            <remarks>Document foreign discount is applied after line discount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.DiscountPercent">
            <summary>Gets or sets the document discount percentage.</summary>
            <remarks>Document discount is applied after line discount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.DiscountLastProcessed">
            <summary>Gets the document discount amount last processed.</summary>
            <remarks>Document discount is applied after line discount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.DiscountToProcess">
            <summary>Gets the document discount amount about to be processed (applicable to tax excl. total).</summary>
            <remarks>Document discount is applied after line discount.</remarks>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.ApplyDiscount(System.Double)">
            Utility function for calculating discount
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalDiscountAdjustedForeign">
            <summary>Gets the total discount adjusted foreign amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalDiscountAdjusted">
            <summary>Gets the total discount adjusted amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalExcl">
            <summary>Gets the total excl amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalExclForeign">
            <summary>Gets the total excl amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalTax">
            <summary>Gets the total tax amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalTaxForeign">
            <summary>Gets the total tax amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalInclBeforeInvoiceRounding">
            <summary>Gets the total incl amount before Invoice Rounding.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalIncl">
            <summary>Gets the total incl amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalInclForeignBeforeInvoiceRounding">
            <summary>Gets the total incl amount before Invoice Rounding.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalInclForeign">
            <summary>Gets the total incl amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalOutstandingExcl">
            <summary>Gets the total outstanding excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalOutstandingExclForeign">
            <summary>Gets the total outstanding excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalOutstandingTax">
            <summary>Gets the total outstanding tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalOutstandingTaxForeign">
            <summary>Gets the total outstanding tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalOutstandingIncl">
            <summary>Gets the total outstanding incl.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalOutstandingInclForeign">
            <summary>Gets the total outstanding incl.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalToProcessExcl">
            <summary>Gets the total amount to process excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalToProcessExclForeign">
            <summary>Gets the total amount to process excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalToProcessTax">
            <summary>Gets the total to process tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalToProcessTaxForeign">
            <summary>Gets the total to process tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalToProcessInclBeforeInvoiceRounding">
            <summary>Gets the total to process incl before Invoice Rounding.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalToProcessIncl">
            <summary>Gets the total to process incl.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalToProcessInclForeignBeforeInvoiceRounding">
            <summary>Gets the total to process incl before Invoice Rounding.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalToProcessInclForeign">
            <summary>Gets the total to process incl.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalLastProcessExcl">
            <summary>Gets the total last process excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalLastProcessExclForeign">
            <summary>Gets the total last process excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalLastProcessTax">
            <summary>Gets the total last process tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalLastProcessTaxForeign">
            <summary>Gets the total last process tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalLastProcessIncl">
            <summary>Gets the total last process incl.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketBase.TotalLastProcessInclForeign">
            <summary>Gets the total last process incl.</summary>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.CloneArchive">
            <summary>
            Returns an unsaved duplicate of the order - use for internal purposes only as it allows order number duplication
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.Process">
            <summary>Posts the document to the various accounts and ledgers applicable.</summary>
            <returns>The generated reference number.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.Process(System.String)">
            <summary>Posts the document to the various accounts and ledgers applicable.</summary>
            <remarks>Use this method when a document reference has already been generated outside the Evolution system.</remarks>
            <param name="reference">Specifies the transaction reference to use.  No duplication checking is performed.</param>
            <seealso cref="M:Pastel.Evolution.RetailDocketBase.Process" />
            <returns>The reference number supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.OnDelete">
            <summary>
            Not supported.  Use the delete facility from inside Evolution.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.Complete">
            <summary>Processes (invoices) all outstanding quantities on the order.  The entire invoice fails if one or more detail lines do not have sufficient stock available.  The CompleteMax method (SalesOrder only) is a variation on this method and attempts to confirm as much of the ordered stock as is available.</summary>
            <seealso cref="M:Pastel.Evolution.SalesOrder.CompleteMax" />
            <seealso cref="M:Pastel.Evolution.RetailDocketBase.Process" />
            <seealso cref="M:Pastel.Evolution.RetailDocketBase.Process(System.String)" />
            <returns>The generated reference number.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.Complete(System.String)">
            <summary>Process (invoice) all outstanding quantities on the order.  The entire invoice fails if one or more detail lines do not have sufficient stock available.  The  method is a variation on this method and attempts to confirm as much of the ordered stock as is available.</summary>
            <param name="reference">Specifies the transaction reference to use.  No duplication checking is performed</param>
            <seealso cref="M:Pastel.Evolution.SalesOrder.CompleteMax" />
            <returns>The supplied reference number.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.Clone">
            <summary>Creates an exact copy of an existing order.</summary>
            <returns>The cloned document.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketBase.BeforeAddDetail(Pastel.Evolution.RetailDocketDetail,System.ComponentModel.CancelEventArgs)">
            <summary>
            Called before adding an OrderDetail record to the collection.  This is not called while loading a record from the database.
            </summary>
            <param name="detailRecord"></param>
            <param name="e"></param>
        </member>
        <member name="T:Pastel.Evolution.RetailDocketMode">
            <summary>
            Describes a retail document type.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.RetailDocketDetail">
            <summary>
            Represents an inventory document detail record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.#ctor">
            <summary>Creates a new instance of a order detail record.</summary>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.#ctor(Pastel.Evolution.InventoryItem,System.String,System.Double,System.Double,Pastel.Evolution.TaxMode)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="item">Specifies the inventory item.</param>
            <param name="warehouseCode">Specifies the warehouse code.</param>
            <param name="quantity">Specifies the quantity.</param>
            <param name="price">Specifies the exclusive unit price.</param>
            <param name="taxMode">Specifies the tax mode.</param>
            <seealso cref="P:Pastel.Evolution.RetailDocketDetail.UnitSellingPrice" />
            <seealso cref="P:Pastel.Evolution.RetailDocketDetail.TaxMode" />
            <seealso cref="P:Pastel.Evolution.RetailDocketDetail.InventoryItem" />
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.#ctor(Pastel.Evolution.InventoryItem,System.String,System.Double,System.Double)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="item">Specifies the item.</param>
            <param name="warehouseCode">Specifies the warehouse code.</param>
            <param name="quantity">Specifies the quantity.</param>
            <param name="price">Specifies the exclusive unit price.</param>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.#ctor(Pastel.Evolution.InventoryItem,System.Double,System.Double)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="item">Specifies the item.</param>
            <param name="quantity">Specifies the quantity.</param>
            <param name="price">Specifies the price.</param>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.#ctor(Pastel.Evolution.InventoryItem,System.Double,System.Double,Pastel.Evolution.TaxMode)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="item">Specifies the item.</param>
            <param name="quantity">Specifies the quantity.</param>
            <param name="price">Specifies the exclusive unit price.</param>
            <param name="taxMode">Specifies the tax mode.</param>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.#ctor(System.String,System.Double,System.Double)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="itemCode">Specifies the item code.</param>
            <param name="quantity">Specifies the quantity.</param>
            <param name="price">Specifies the price.</param>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.#ctor(System.Int64)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.LongID">
            <summary>
            Transitional accessor.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.OriginalDetailLine">
            <summary>Gets the line's original detail record.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Account">
            <summary>Gets or sets the line's account (inventory item).</summary>
            <remarks>When setting the item, the unit cost price is also set.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.InventoryItem">
            <summary>Gets or sets the line's inventory item.</summary>
            <remarks>Setting this value will in effect set the Account.  When setting the item, the unit cost price is also set.</remarks>
            <seealso cref="P:Pastel.Evolution.RetailDocketDetail.Account" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.InventoryItemID">
            <summary>Gets or sets the stock item id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the InventoryItemID rather than the InventoryItem since
            setting the item ID actually instantiates an InventoryItem object for validation.
            <seealso cref="P:Pastel.Evolution.RetailDocketDetail.InventoryItem" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Description">
            <summary>Gets or sets the line description.</summary>
            <remarks>If the description field is blank on assignment of the  property, it will default to the inventory item description.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.SerialNumbers">
            <summary>Gets the collection of serial numbers pertaining to the order detail record.</summary>
            <seealso cref="T:Pastel.Evolution.SerialNumber" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Quantity">
            <summary>Gets or sets the quantity of product on order.</summary>
            <remarks>In an order scenario, this is the quantity of product expected to be moved.  This quantity gets rounded according to the rounding configuration set in inventory defaults.</remarks>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.updateToProcessQty">
            <summary>
            Overrides the ToProcess quantity to the value of Quantity when the document does not allow partial processing.
            This is not done during processing or loading.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Outstanding">
            <summary>Gets the quantity of stock that remains to be processed.</summary>
            <remarks>The calculation is Quantity - Processed.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Processed">
            <summary>Gets the quantity of stock processed on this line up until this document.</summary>
            <seealso cref="P:Pastel.Evolution.RetailDocketDetail.ToProcess" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Reserved">
            <summary>Gets or sets the quantity of stock to reserve for an order (only applies to sales orders).</summary>
            <remarks>Reserving stock ensures that items are not shipped on other orders.  Only stock on hand can be reserved, i.e. stock that is on purchase order cannot be reserved in advance.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.ToProcess">
            <summary>Gets or sets the quantity of stock to move when calling the  Process method.</summary>
            <remarks>This cannot exceed the outstanding quantity.</remarks>
            <remarks>This value also has to effect on credit notes and returns to suppliers.</remarks>
            <seealso cref="M:Pastel.Evolution.OrderBase.Process(System.String)" />
            <exception cref="T:Pastel.Evolution.EvolutionException">The quantity ToProcess exceeds the Quantity property value.  Increase the order quantity first.</exception>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.LastProcess">
            <summary>Gets the stock quantity moved during the last processing action.</summary>
            <seealso cref="P:Pastel.Evolution.RetailDocketDetail.ToProcess" />
            <seealso cref="P:Pastel.Evolution.RetailDocketDetail.Processed" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Note">
            <summary>Gets or sets the line note text.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.PriceListNameID">
            <summary>Gets or sets the line pricelistID.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.TaxMode">
            <summary>Gets or sets the line's tax mode.</summary>
            <remarks>When attaching a detail record to an order with a differrent tax mode, the line's tax mode will automatically switch and the price be recalculated.  New detail records default to tax exclusive mode and not to the mode set in inventory defaults.  This was done for backward compatibility with earlier implementations of the SDK.  Use the appropriate constructor for specifying the tax mode.</remarks>
            <seealso cref="M:Pastel.Evolution.OrderDetail.#ctor(Pastel.Evolution.InventoryItem,System.Double,System.Double,Pastel.Evolution.TaxMode)" />
            <exception cref="T:Pastel.Evolution.EvolutionException">The tax mode of a record linked to an order cannot be changed.</exception>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.UnitSellingPrice">
            <summary>Gets or sets the unit selling or purchase price.</summary>
            <seealso cref="P:Pastel.Evolution.OrderBase.TaxMode" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.UnitSellingPriceForeign">
            <summary>Gets or sets the foreign unit selling price - on sales orders this will be the product selling price as expected, but on purchase orders, it is the supplier's selling price.</summary>
            <seealso cref="P:Pastel.Evolution.OrderBase.TaxMode" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.UnitSellingPriceAfterDiscount">
            <summary>Gets the line's unit selling price after discount.</summary>
            <remarks>Unlike UnitSellingPriceExclAfterDiscount, this value is based on the tax mode.</remarks>
            <seealso cref="P:Pastel.Evolution.RetailDocketDetail.UnitSellingPriceExclAfterLineDiscount" />
            <seealso cref="P:Pastel.Evolution.RetailDocketDetail.TaxMode" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.UnitSellingPriceExclAfterLineDiscount">
            <summary>Gets the order detail's unit selling price excl after line discount (unrounded).</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.UnitSellingPriceAfterDocumentDiscountExcl">
            <summary>Gets the order detail's unit selling price excl after line and document discount (unrounded).</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.DiscountPercent">
            <summary>
            Gets or sets the line discount percentage as an integer value: 5% = 5, as opposed to 0.05
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Index">
            <summary>
            Gets the line number (1-based)
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Discount">
            <summary>
            Gets or sets the total line discount value (applies to tax excl. value)
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.DiscountForeign">
            <summary>
            Gets the total foreign line discount value (applies to tax excl. value)
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.WarehouseContext">
            <summary>
            Gets or sets the warehouse context of the inventory item specified.  Set the warehouse only after setting the inventory item.  The Warehouse and WarehouseContext properties are mapped to one another.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Warehouse">
            <summary>
            Gets or sets the warehouse relevant to this detail record.  Set the warehouse only after setting the inventory item.  The Warehouse and WarehouseContext properties are mapped to one another.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.WarehouseID">
            <summary>
            Gets the ID of the assigned warehouse (0 if N/A).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.LineDocketMode">
            <summary>
            Gets the retail line docket mode
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.TotalExcl">
            <summary>
            Gets the calculated, rounded line total exclusive amount, after discount.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.TotalTax">
            <summary>
            Gets or sets the line total tax amount.  Set this value as late as 
            possible as it gets recalculated on setting Quantity, UnitSellingPrice, DiscountPercent, Discount,
            TaxType, as well as when adding the order detail record to the orders's Detail collection. IMPORTANT:
            Be sure to only use the Process() method and not one of the Complete* methods if you wish to override 
            the tax amount.  Setting TotalTax also does not affect TotalToProcessTax.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.TotalTaxBeforeDiscount">
            <summary>
            Gets the tax amount before discount was applied.  If discount is 100% and the total tax amount is 0, 
            the tax rate is used to calculate a default tax amount.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.TotalIncl">
            <summary>
            Gets the calculated line total inclusive amount, after discount.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.TotalToProcessTax">
            <summary>
            Gets or sets the line total tax amount for the following invoice.  Set this value as late as 
            possible as it gets recalculated on setting ToProcess, UnitSellingPrice, DiscountPercent, Discount,
            TaxType, as well as when adding the order detail record to the orders's Detail collection. IMPORTANT:
            Be sure to only use the Process() method and not one of the Complete* methods only if you wish to override 
            the tax amount.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.UnitCostPrice">
            <summary>Gets or sets the unit cost price (used by credit notes only).</summary>
            <remarks>The unit cost price defaults to the current item cost price in the system but can be overridden if required.  Override only after setting the inventory item and warehouse.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.TotalAdditionalCost">
            <summary>Gets or sets the additional cost allocated to the line.</summary>
            <remarks>When processing, the total costs allocated to lines needs to match the 
            document additional cost allocation.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.TotalSalesCost">
            <summary>
            Gets the line total cost of sale; i.e. current unit cost * quantity
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.JobID">
            <summary>Gets or sets the order detail record's job id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.OverrideSalesAccount">
            <summary>Specifies the GL account to use when processing the document's sales transaction.</summary>
            <remarks>The sales account only applies to sales transactions (Sales order invoices and credit notes) 
            and overrides the contra account on theinvoice and credit note transaction types.  The GL account specified here also overrides the account defined on the item group or warehouse-specific group.  Note that this value does not get saved with unprocessed documents.  When set to null (as is the case when assigning a non-existing account via the GL Account's Get* methods), the default account will still be used.</remarks>
            <seealso cref="T:Pastel.Evolution.GLAccount" />
            <seealso cref="T:Pastel.Evolution.SalesOrder" />
            <seealso cref="T:Pastel.Evolution.CreditNote" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.OverrideCostOfSalesAccount">
            <summary>Specifies the GL account to use when processing the document's cost of goods sold transaction.</summary>
            <remarks>The cost of sales account only applies to sales transactions (Sales order invoices and credit notes) and overrides "account 1" on the"issue stock" and "receive stock" transaction types.  The GL account specified here also overrides the COS account defined on the item group or warehouse-specific group.  No COS transaction is posted when using the period GL integration method as set in Inventory Defaults.  Note that this value does not get saved with unprocessed documents.  When set to null (as is the case when assigning a non-existing account via the GL Account's Get* methods), the default account will still be used.</remarks>
            <seealso cref="T:Pastel.Evolution.GLAccount" />
            <seealso cref="T:Pastel.Evolution.SalesOrder" />
            <seealso cref="T:Pastel.Evolution.CreditNote" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.OverrideStockAccount">
            <summary>Specifies the GL account to use when processing the document's GL stock transaction.</summary>
            <remarks>The stock account only applies to sales transactions (Sales order invoices and credit notes) and overrides "account 2" on the"issue stock" and "receive stock" transaction types.  The GL account specified here also overrides the stock account defined on the item group or warehouse-specific group.  No stock transaction is posted when using the periodic GL integration method as set in Inventory Defaults.  Note that this value does not get saved with unprocessed documents.  When set to null (as is the case when assigning a non-existing account via the GL Account's Get* methods), the default account will still be used.  If this property is not set and during posting the stock account is overridden, it will reflect the overriding account after posting.</remarks>
            <seealso cref="T:Pastel.Evolution.GLAccount" />
            <seealso cref="T:Pastel.Evolution.SalesOrder" />
            <seealso cref="T:Pastel.Evolution.CreditNote" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.OverridePurchaseAccount">
            <summary>Specifies the purchases GL account to use when processing the document's GL transactions.  Currently this is merely an alias for</summary>
            <remarks>The purchases account only applies to purchases transactions (Purchase order invoices and returns) and overrides the contra account set on the"supplier invoice" and "return to supplier" transaction types.  The GL account specified here also overrides the purchaes account defined on the item group or warehouse-specific group.  Note that this value does not get saved with unprocessed documents.  When set to null (as is the case when assigning a non-existing account via the GL Account's Get* methods), the default account will still be used.</remarks>
            <seealso cref="T:Pastel.Evolution.GLAccount" />
            <seealso cref="T:Pastel.Evolution.SalesOrder" />
            <seealso cref="T:Pastel.Evolution.CreditNote" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Document">
            <summary>Gets the document to which the detail record belongs.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.ProjectID">
            <summary>Gets or sets the line's project id.</summary>
            <summary>Gets or sets the project id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Project">
            <summary>Gets or sets the line's project.</summary>
            <summary>Gets or sets the project.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Representative">
            <summary>Gets or sets the sales representative on the order line.  This only applies to sales transactions.  When not set, the representative will default to the rep specified (if any) on the order document.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.RepresentativeID">
            <summary>Gets or sets the representative id.</summary>
            <seealso cref="P:Pastel.Evolution.RetailDocketDetail.Representative" />
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetail.Module">
            <summary>Indicates the Evolution module of the Order Detail line.</summary>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.Detach">
            <summary>
            Detaches the object from its database record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.OnSave">
            <summary>Persists the record to the database.</summary>
            
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.OnDelete">
            <summary>Removes the detail record from the order document only, not from the database.  Save the order after calling Delete to delete the line from the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetail._Copy">
            <summary>
            Experimental Method
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.RetailDocketDetailCollection">
            <summary>
            Represents a collection of order detail items, typically owned by a given inventory document record.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.RetailDocketDetailCollection.CollectionChanged">
            <summary>
            Occurs when detail records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetailCollection.Item(System.Int32)">
            <summary>
            Gets an order detail object by its zero-based index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetailCollection.Add(Pastel.Evolution.RetailDocketDetail)">
            <summary>
            Appends an order detail object to the order.
            </summary>
            <remarks>Take note that upon being added to a document, the detail record will assume the document's sales representative and project.</remarks>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetailCollection.Add(Pastel.Evolution.InventoryItem,System.String,System.Double,System.Double)">
            <summary>
            Appends a detail line to the order.
            </summary>
            <param name="item">The code of the stock item.</param>
            <param name="warehouseCode">The code of the warehouse to use on this record.</param>
            <param name="quantity">The quantity to order.</param>
            <param name="price">The exclusive unit price.</param>
            <returns>The newly created detail record.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetailCollection.Add(System.String,System.String,System.Double,System.Double)">
            <summary>
            Appends a detail line to the order.
            </summary>
            <param name="itemCode">The code of the stock item</param>
            <param name="quantity">The quantity to order</param>
            <param name="warehouseCode">The code of the warehouse to use on this record.</param>
            <param name="price">The exclusive unit price</param>
            <returns>The newly created detail record.</returns>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetailCollection.TotalSalesCost">
            <summary>
            Gets the total cost of sale; i.e. current unit cost * quantity
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetailCollection.TotalDiscountAdjustment">
            <summary>
            Gets the total discount adjustment
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailDocketDetailCollection.TotalDiscountAdjustmentForeign">
            <summary>
            Gets the total discount adjustment foreign
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetailCollection.Remove(Pastel.Evolution.RetailDocketDetail)">
            <summary>
            Removes the specified order detail line from the collection
            </summary>
            <param name="detailRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetailCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an order detail line using its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetailCollection.Detach">
            <summary>
            Calls the Detach method on each detail record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetailCollection.Save">
            <summary>
            Calls the Save method on each detail record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailDocketDetailCollection.Process(System.Int64)">
            <summary>
            Calls the Process method on each detail record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailQuotationDocket.Find(System.String)">
            <summary>Finds and returns the id of the first order matching the supplied criteria. E.g. OrderNum = 'SO0001'</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailQuotationDocket.List(System.String)">
            <summary>Lists quotations for the supplied criteria.</summary>
            <remarks>Pseudo-tables: Core, Customer</remarks>
            <param name="criteria">E.g. Customer.Account = 'CASH001' and (OrderNum = 'SO209302')</param>
        </member>
        <member name="M:Pastel.Evolution.RetailQuotationDocket.ConvertToInvoice">
            <summary>
            Converts a quotation into an unprocessed sales order.  If automatic numbering is enabled and immediate processing required,
            this step may be omitted.  Otherwise, convert the quote, then set the order number and finally, process.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.RetailSalesDocket">
            <summary>
            An object representation of an Evolution Retail Sales Docket.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailSalesDocket.#ctor">
            <summary>Creates a new instance of a retail sales docket.</summary>
        </member>
        <member name="M:Pastel.Evolution.RetailSalesDocket.#ctor(System.Int64)">
            <summary>Creates a new instance of  a retail sales docket.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.RetailSalesDocket.#ctor(System.String)">
            <summary>Creates a new instance of  a retail sales docket.</summary>
            <param name="orderNumber">Specifies the order number of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.RetailSalesDocket.Find(System.String)">
            <summary>Finds and returns the id of the first retail docket matching the supplied criteria. E.g. InvNumber = 'Till1INV0001'</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailSalesDocket.List(System.String)">
            <summary>Lists outstanding retail dockets for the supplied criteria.</summary>
            <remarks>Pseudo-tables: Core, Customer</remarks>
            <param name="criteria">E.g. Customer.Account = 'CASH001' and (OrderNum = 'SO209302')</param>
        </member>
        <member name="M:Pastel.Evolution.RetailSalesDocket.ListArchived(System.String)">
            <summary>Lists archived retail dockets for the supplied criteria.</summary>
            <remarks>Pseudo-tables: Core, Customer</remarks>
            <param name="criteria">E.g. Customer.Account = 'CASH001' and (InvNumber = 'Till1INV0001')</param>
        </member>
        <member name="P:Pastel.Evolution.RetailSalesDocket.OriginalDocument">
            <summary>Gets the retail docket's original document.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailSalesDocket.DeliveryNote">
            <summary>Gets or sets the retail docket delivery note number</summary>
        </member>
        <member name="M:Pastel.Evolution.RetailSalesDocket.CompleteMax">
            <summary>Processes as much of the ordered stock as is available.  If an "all or nothing" approach is required, use the  method instead.</summary>
            <seealso cref="P:Pastel.Evolution.OrderDetail.ToProcess" />
            <seealso cref="M:Pastel.Evolution.OrderBase.Complete" />
            <returns>Invoice number</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailSalesDocket._SetMaxQtyToProcess">
            <summary>Experimental method</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailSalesDocketBase.Customer">
            <summary>Gets or sets the retail document's customer account (maps directly to Account).</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailSalesDocketBase.Representative">
            <summary>Gets or sets the retail document sales representative.</summary>
            <remarks>Be sure to set the document representative before adding detail records.  
            This will ensure the sales rep is set on the detail records.  Alternatively, the 
            sales rep can be specified for each detail record, or even overridden after adding 
            the detail record to the document.  Warning: when "Post sales rep per line" 
            inventory option is disabled, the representative on all detail records will be 
            replaced when setting the document representative.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailSalesDocketBase.RepresentativeID">
            <summary>Gets or sets the sales representative ID.</summary>
            <remarks>Use this property if the representative ID is readily available to gain a slight performance benefit.</remarks>
        </member>
        <member name="T:Pastel.Evolution.RetailTender">
            <summary>
            Represents a retail pos transaction.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailTender.Detach">
            <summary>
            Detaches the object from its database record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailTender.Find(System.String)">
            <summary>
            Finds the first record matching the criteria supplied
            </summary>
            <param name="criteria">E.g. iPOSTransactionID = 198</param>
            <returns>The id of the record</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTender.List(System.String)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="criteria">e.g. iPOSTransactionID = 198 and iTenderTypeID = 1 </param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTender.List(System.String,System.String)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="criteria">e.g. iPOSTransactionID = 198 and iTenderTypeID = 1 </param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTender.List(System.Int64,Pastel.Evolution.TenderType)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="posTransactionID">The retail transaction id.</param>
            <param name="tendertype">The tender type id.</param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.RetailTender.ID">
            <summary>Gets the transaction id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTender.POSTransactionID">
            <summary>Gets or sets the transaction tender type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTender.TenderType">
            <summary>Gets or sets the transaction tender type.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTender.TenderTypeID">
            <summary>Gets or sets the transaction tender type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTender.Amount">
            <summary>Gets or sets the transaction amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTender.Document">
            <summary>Gets the document to which the retail tender record belongs.</summary>
        </member>
        <member name="T:Pastel.Evolution.RetailTenderCollection">
            <summary>
            Represents a collection of tender type transactions, typically owned by a given retail docket record.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.RetailTenderCollection.CollectionChanged">
            <summary>
            Occurs when tender type records are added or deleted.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTenderCollection.Item(System.Int32)">
            <summary>
            Gets a retail tender transaction object by its zero-based index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTenderCollection.Add(Pastel.Evolution.RetailTender)">
            <summary>
            Appends an retail tender transaction object to the retail docket.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailTenderCollection.Add(System.String,System.Double)">
            <summary>
            Appends a retail tender to the retail docket.
            </summary>
            <param name="tenderTypeCode">The code of the tender type</param>
            <param name="amount">The amount paid</param>
            <returns>The newly created retail tender record.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTenderCollection.Add(Pastel.Evolution.TenderType,System.Double)">
            <summary>
            Appends a retail tender to the retail docket.
            </summary>
            <param name="tenderTypeCode">The code of the tender type</param>
            <param name="amount">The amount paid</param>
            <returns>The newly created retail tender record.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTenderCollection.Add(Pastel.Evolution.TenderType,System.String,System.Double)">
            <summary>
            Appends a retail tender to the retail docket.
            </summary>
            <param name="tenderTypeCode">The code of the tender type</param>
            <param name="amount">The amount paid</param>
            <param name="narrative">The narrative text</param>
            <returns>The newly created retail tender record.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTenderCollection.Add(Pastel.Evolution.TenderType,System.String,System.String,System.DateTime,System.String,System.Double)">
            <summary>
            Appends a retail tender to the retail docket.
            </summary>
            <param name="tenderTypeCode">The code of the tender type</param>
            <param name="amount">The amount paid</param>
            <param name="narrative">The narrative text</param>
            <returns>The newly created retail tender record.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTenderCollection.Remove(Pastel.Evolution.RetailTender)">
            <summary>
            Removes the specified retail tender line from the collection
            </summary>
            <param name="tenderRecord"></param>
        </member>
        <member name="M:Pastel.Evolution.RetailTenderCollection.RemoveAt(System.Int32)">
            <summary>
            Removes an retail tender line using its zero-based index.
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Pastel.Evolution.RetailTenderCollection.Detach">
            <summary>
            Calls the Detach method on each detail record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailTenderCollection.Process(System.Int64)">
            <summary>
            Calls the Process method on each detail record
            </summary>
        </member>
        <member name="T:Pastel.Evolution.RetailTill">
            <summary>
            Represents a project.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailTill.#ctor">
            <summary>Creates a new instance of a till.</summary>
        </member>
        <member name="M:Pastel.Evolution.RetailTill.#ctor(System.Int32)">
            <summary>Creates a new instance of a till.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.RetailTill.#ctor(System.String)">
            <summary>Creates a new instance of a till.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.RetailTill.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.RetailTill.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.RetailTill.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTill.Find(System.String)">
            <summary>Finds a retail till ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cTillCode = 'Till01'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTill.FindByCode(System.String)">
            <summary>
            Attempts to find a retail till by its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the retail till.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.RetailTill.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.RetailTill.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cTillCode = 'Till01'</param>
            <seealso cref="M:Pastel.Evolution.RetailTill.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.RetailTill.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.RetailTill.GetByCode(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTill.GetByCode(System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.RetailTill.Get(System.String)" />
            <seealso cref="M:Pastel.Evolution.RetailTill.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.RetailTill.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.Code">
            <summary>Gets or sets the retail till code.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.Active">
            <summary>Gets or sets the record's active state.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.CurrentAgentID">
            <summary>Gets the record's current agent id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumPrependBranch">
            <summary>Gets the record's state to allow for prepend branch auto number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumInvNext">
            <summary>Gets the record's next auto invoice number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumInvPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumInvPrefix">
            <summary>Gets the record's invoice document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumOrdNext">
            <summary>Gets the record's next auto order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumOrdPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumOrdPrefix">
            <summary>Gets the record's order document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCrnNext">
            <summary>Gets the record's next auto credit note number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCrnPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCrnPrefix">
            <summary>Gets the record's credit note document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumQuoNext">
            <summary>Gets the record's next auto quote number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumQuoPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumQuoPrefix">
            <summary>Gets the record's quote document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.Warehouse">
            <summary>Gets or sets the till's warehouse code.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCashUpNext">
            <summary>Gets the record's next auto cashup number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCashUpPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCashUpPrefix">
            <summary>Gets the record's cashup document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumPettyCashNext">
            <summary>Gets the record's next auto petty cash number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumPettyCashPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumPettyCashPrefix">
            <summary>Gets the record's petty cash document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCashPickupNext">
            <summary>Gets the record's next auto cash pickup number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCashPickupPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCashPickupPrefix">
            <summary>Gets the record's cash pickup document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumReceiptNext">
            <summary>Gets the record's next auto receipt number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumReceiptPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumReceiptPrefix">
            <summary>Gets the record's receipt document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumRefundNext">
            <summary>Gets the record's next auto refund number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumRefundPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumRefundPrefix">
            <summary>Gets the record's refund document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumLayByReceiptNext">
            <summary>Gets the record's next auto layby receipt number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumLayByReceiptPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumLayByReceiptPrefix">
            <summary>Gets the record's layby receipt document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumLayByRefundNext">
            <summary>Gets the record's next auto layby refund number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumLayByRefundPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumLayByRefundPrefix">
            <summary>Gets the record's layby refund document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumDeliveryNoteNext">
            <summary>Gets the record's next auto delivery note number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumDeliveryNotePad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumDeliveryNotePrefix">
            <summary>Gets the record's delivery note document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumLayByNext">
            <summary>Gets the record's next auto layby number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumLayByPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumLayByPrefix">
            <summary>Gets the record's layby document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumKeepAsideNext">
            <summary>Gets the record's next auto keep aside number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumKeepAsidePad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumKeepAsidePrefix">
            <summary>Gets the record's keep aside document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCashDrawerHandOverNext">
            <summary>Gets the record's next auto cash drawer handover number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCashDrawerHandOverPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCashDrawerHandOverPrefix">
            <summary>Gets the record's cash drawer handover document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumGoodsIssueVoucherNext">
            <summary>Gets the record's next auto goods issue voucher number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumGoodsIssueVoucherPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumGoodsIssueVoucherPrefix">
            <summary>Gets the record's goods issue voucher document prefix.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCustomerGoodsReturnNext">
            <summary>Gets the record's next auto customer goods return number.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCustomerGoodsReturnPad">
            <summary>Gets the record's pading structure.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTill.AutoNumCustomerGoodsReturnPrefix">
            <summary>Gets the record's customer goods return document prefix.</summary>
        </member>
        <member name="T:Pastel.Evolution.RetailTransaction">
            <summary>
            Represents a retail pos transaction.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.RetailTransaction.Find(System.String)">
            <summary>
            Finds the first record matching the criteria supplied
            </summary>
            <param name="criteria">E.g. cAuditNumber = '1.0001'</param>
            <returns>The id of the record</returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTransaction.List(System.String)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="criteria">e.g. iTillID = 1 and iAgentID = 2 </param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.RetailTransaction.List(Pastel.Evolution.RetailTill,Pastel.Evolution.Agent)">
            <summary>
            Returns a datatable containing the matching rows.
            </summary>
            <param name="till">The retail till.</param>
            <param name="agent">The agent whom processed the transaction.</param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.ID">
            <summary>Gets the transaction id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.Till">
            <summary>Gets or sets the transaction till.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.TillID">
            <summary>Gets or sets the transaction till id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.Date">
            <summary>Gets or sets the transaction date.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.Agent">
            <summary>Gets or sets the transaction agent.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.AgentID">
            <summary>Gets or sets the transaction agent id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.TransactionCode">
            <summary>Gets or sets the transaction code .</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.TransactionCodeID">
            <summary>Gets or sets the transaction code id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.Customer">
            <summary>Gets or sets the transaction customer account .</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.CustomerID">
            <summary>Gets or sets the transaction customer id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.TillTxType">
            <summary>Gets or sets the till transaction type.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.Audit">
            <summary>Gets the transaction's audit number.</summary>
            <remarks>The audit number is 0 when unposted.  After posting, it will reflect the transaction's posted audit number.</remarks>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.Amount">
            <summary>Gets or sets the transaction amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.AmountTendered">
            <summary>Gets or sets the transaction amount tendered.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.AmountChange">
            <summary>Gets or sets the transaction amount change given.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.Session">
            <summary>Gets or sets the transaction agent session .</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.SessionID">
            <summary>Gets or sets the transaction agent session id.</summary>
        </member>
        <member name="P:Pastel.Evolution.RetailTransaction.InvoiceID">
            <summary>Gets or sets the transaction invoice id.</summary>
        </member>
        <member name="T:Pastel.Evolution.TenderType">
            <summary>
            Represents a project.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.TenderType.#ctor">
            <summary>Creates a new instance of a tender type.</summary>
        </member>
        <member name="M:Pastel.Evolution.TenderType.#ctor(System.Int32)">
            <summary>Creates a new instance of a tender type.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.TenderType.#ctor(System.String)">
            <summary>Creates a new instance of a tender type.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.TenderType.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.TenderType.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.TenderType.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.TenderType.Find(System.String)">
            <summary>Finds a retail till ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cTenderTypeCode = 'CARD'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.TenderType.FindByCode(System.String)">
            <summary>
            Attempts to find a retail tender type by its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the retail tender type.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.TenderType.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.TenderType.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cTenderTypeCode = 'CASH'</param>
            <seealso cref="M:Pastel.Evolution.TenderType.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.TenderType.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.TenderType.GetByCode(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.TenderType.GetByCode(System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.TenderType.Get(System.String)" />
            <seealso cref="M:Pastel.Evolution.TenderType.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.TenderType.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.TenderType.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.TenderType.Code">
            <summary>Gets the retail tender type code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.Description">
            <summary>Gets the retail tender type code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.Active">
            <summary>Gets the record's active state.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.AllowOverTender">
            <summary>Gets the record's state to allow for over tender.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.HousLimit">
            <summary>Gets the record's house limit.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.RequireNarration">
            <summary>Gets the record's state to require narration.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.ReceiptTranCode">
            <summary>Gets the record's receipt transaction code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.ReceiptTranCodeID">
            <summary>Gets the record's receipt transaction code id.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.RefundTranCode">
            <summary>Gets the record's refund transaction code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.RefundTranCodeID">
            <summary>Gets the record's refund transaction code id.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.DepositTranCode">
            <summary>Gets the record's deposit transaction code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.DepositTranCodeID">
            <summary>Gets the record's deposit transaction code id.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.TypeOfTender">
            <summary>Gets the record's type of tender.</summary>
        </member>
        <member name="P:Pastel.Evolution.TenderType.ApplyDocketRounding">
            <summary>Gets the record's state to apply docket rounding.</summary>
        </member>
        <member name="T:Pastel.Evolution.TradingSession">
            <summary>
            Represents a project.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.TradingSession.#ctor">
            <summary>Creates a new instance of a trading session.</summary>
        </member>
        <member name="M:Pastel.Evolution.TradingSession.#ctor(System.Int32)">
            <summary>Creates a new instance of a trading session.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.TradingSession.#ctor(Pastel.Evolution.TradingSessionStatus)">
            <summary>Creates a new instance of a trading session.</summary>
            <param name="code">Specifies the trading session status of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.TradingSession.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.TradingSession.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.TradingSession.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.TradingSession.Find(System.String)">
            <summary>Finds a retail trading session ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. iSessionStatus = 2</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.TradingSession.FindByStatus(Pastel.Evolution.TradingSessionStatus)">
            <summary>
            Attempts to find a retail trading session by its status and returns its ID.
            </summary>
            <param name="code">The status used to lookup the trading session.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.TradingSession.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.TradingSession.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. iSessionStatus = 2</param>
            <seealso cref="M:Pastel.Evolution.TradingSession.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.RetailTill.#ctor(System.String)" />
            <seealso cref="!:GetByCode(string)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.TradingSession.GetByStatus(Pastel.Evolution.TradingSessionStatus)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.TradingSession.Get(System.String)" />
            <seealso cref="M:Pastel.Evolution.RetailTill.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.TradingSession.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.TradingSession.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.TradingSession.SessionStatus">
            <summary>Gets the record's session status.</summary>
        </member>
        <member name="P:Pastel.Evolution.TradingSession.TradingDate">
            <summary>Gets the record's trading date.</summary>
        </member>
        <member name="P:Pastel.Evolution.TradingSession.SessionDescription">
            <summary>Gets the record's session description.</summary>
        </member>
        <member name="P:Pastel.Evolution.TradingSession.StartAgent">
            <summary>Gets the record's start agent.</summary>
        </member>
        <member name="P:Pastel.Evolution.TradingSession.EndAgent">
            <summary>Gets the record's end agent.</summary>
        </member>
        <member name="P:Pastel.Evolution.TradingSession.FinaliseAgent">
            <summary>Gets the record's finalise agent.</summary>
        </member>
        <member name="P:Pastel.Evolution.TradingSession.ExpectedDuration">
            <summary>Gets the record's expected duration.</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesDocumentBase.Customer">
            <summary>Gets or sets the document's customer account (maps directly to Account).</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesDocumentBase.Representative">
            <summary>Gets or sets the document sales representative.</summary>
            <remarks>Be sure to set the document representative before adding detail records.  
            This will ensure the sales rep is set on the detail records.  Alternatively, the 
            sales rep can be specified for each detail record, or even overridden after adding 
            the detail record to the document.  Warning: when "Post sales rep per line" 
            inventory option is disabled, the representative on all detail records will be 
            replaced when setting the document representative.</remarks>
        </member>
        <member name="P:Pastel.Evolution.SalesDocumentBase.RepresentativeID">
            <summary>Gets or sets the sales representative ID.</summary>
            <remarks>Use this property if the representative ID is readily available to gain a slight performance benefit.</remarks>
        </member>
        <member name="M:Pastel.Evolution.SalesOrderQuotation.Find(System.String)">
            <summary>Finds and returns the id of the first order matching the supplied criteria. E.g. OrderNum = 'SO0001'</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.SalesOrderQuotation.List(System.String)">
            <summary>Lists quotations for the supplied criteria.</summary>
            <remarks>Pseudo-tables: Core, Customer</remarks>
            <param name="criteria">E.g. Customer.Account = 'CASH001' and (OrderNum = 'SO209302')</param>
        </member>
        <member name="M:Pastel.Evolution.SalesOrderQuotation.ConvertToOrder">
            <summary>
            Converts a quotation into an unprocessed sales order.  If automatic numbering is enabled and immediate processing required,
            this step may be omitted.  Otherwise, convert the quote, then set the order number and finally, process.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.SalesOrder">
            <summary>
            An object representation of an Evolution Sales Order.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SalesOrder.#ctor">
            <summary>Creates a new instance of a sales order.</summary>
        </member>
        <member name="M:Pastel.Evolution.SalesOrder.#ctor(System.Int64)">
            <summary>Creates a new instance of  a sales order.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SalesOrder.#ctor(System.String)">
            <summary>Creates a new instance of  a sales order.</summary>
            <param name="orderNumber">Specifies the order number of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SalesOrder.Find(System.String)">
            <summary>Finds and returns the id of the first order matching the supplied criteria. E.g. OrderNum = 'SO0001'</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.SalesOrder.List(System.String)">
            <summary>Lists outstanding orders for the supplied criteria.</summary>
            <remarks>Pseudo-tables: Core, Customer</remarks>
            <param name="criteria">E.g. Customer.Account = 'CASH001' and (OrderNum = 'SO209302')</param>
        </member>
        <member name="M:Pastel.Evolution.SalesOrder.ListArchived(System.String)">
            <summary>Lists archived orders for the supplied criteria.</summary>
            <remarks>Pseudo-tables: Core, Customer</remarks>
            <param name="criteria">E.g. Customer.Account = 'CASH001' and (OrderNum = 'SO209302')</param>
        </member>
        <member name="P:Pastel.Evolution.SalesOrder.OriginalDocument">
            <summary>Gets the order's original document.</summary>
        </member>
        <member name="P:Pastel.Evolution.SalesOrder.DeliveryNote">
            <summary>Gets or sets the document delivery note number</summary>
        </member>
        <member name="M:Pastel.Evolution.SalesOrder.CompleteMax">
            <summary>Processes as much of the ordered stock as is available.  If an "all or nothing" approach is required, use the  method instead.</summary>
            <seealso cref="P:Pastel.Evolution.OrderDetail.ToProcess" />
            <seealso cref="M:Pastel.Evolution.OrderBase.Complete" />
            <returns>Invoice number</returns>
        </member>
        <member name="M:Pastel.Evolution.SalesOrder._SetMaxQtyToProcess">
            <summary>Experimental method</summary>
        </member>
        <member name="T:Pastel.Evolution.SettlementTerms">
            <summary>
            Represents settlement terms.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SettlementTerms.#ctor">
            <summary>Creates a new instance of settlement terms.</summary>
        </member>
        <member name="M:Pastel.Evolution.SettlementTerms.#ctor(System.Int32)">
            <summary>Creates a new instance of settlement terms.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SettlementTerms.#ctor(System.String)">
            <summary>Creates a new instance of settlement terms.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.SettlementTerms.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.SettlementTerms.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.SettlementTerms.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.SettlementTerms.Find(System.String)">
            <summary>Finds a settlement terms record ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cSettlementCode = 'INT001' or cSettlementDescription like '%Internal%'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.SettlementTerms.FindByCode(System.String)">
            <summary>
            Attempts to find settlement terms by its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the settlement terms.</param>
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.SettlementTerms.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.SettlementTerms.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. cSettlementCode = 'INT001' or cSettlementDescription like '%Internal%'</param>
            <seealso cref="M:Pastel.Evolution.SettlementTerms.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.SettlementTerms.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.SettlementTerms.GetByCode(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.SettlementTerms.GetByCode(System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.SettlementTerms.Get(System.String)" />
            <seealso cref="M:Pastel.Evolution.SettlementTerms.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.SettlementTerms.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.SettlementTerms.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.SettlementTerms.Code">
            <summary>Gets or sets the SettlementTerms code.</summary>
        </member>
        <member name="P:Pastel.Evolution.SettlementTerms.Description">
            <summary>Gets or sets the settlement terms' description.</summary>
        </member>
        <member name="P:Pastel.Evolution.SettlementTerms.DiscountPercentage">
            <summary>Gets or sets the applicable discount as a value between 0 and 100.</summary>
        </member>
        <member name="T:Pastel.Evolution.DrCrAccount">
            <summary>
            A debtor and creditor account base class.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrAccount.AccountBalance">
            <summary>Gets the account's current balance.</summary>
        </member>
        <member name="P:Pastel.Evolution.DrCrAccount.ChargeTax">
            <summary>Gets or sets whether or not to charge the account VAT.</summary>
        </member>
        <member name="T:Pastel.Evolution.Person">
            <summary>
            Represents a person record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Person.#ctor">
            <summary>Creates a new instance of  a person.</summary>
        </member>
        <member name="M:Pastel.Evolution.Person.#ctor(System.Int32)">
            <summary>Creates a new instance of  a person.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Person.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Person.Find(System.String,System.Object[])">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause containing zero or more format items.</param>
            <param name="args">The arguments to pass to the String.Format function for replacing parameters in the criteria string.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Person.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Person.OnDelete">
            <summary>
            Removes the record from the database, provided it is not referenced by other records.
            </summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException"/>
        </member>
        <member name="M:Pastel.Evolution.Person.List(System.String)">
            <summary>
            Returns a System.Data.DataTable object containing the database records from the Client table matching the supplied criteria.
            </summary>
            <param name="criteria">The SQL criteria used to locate the record, e.g. <c>Account like '1___'</c></param>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to include 
            the single quotes around string literals and append additional criteria with <c>and</c>.</remarks>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="P:Pastel.Evolution.Person.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Person.Comments">
            <summary>Gets or sets comments for this person.</summary>
        </member>
        <member name="P:Pastel.Evolution.Person.FullName">
            <summary>Gets or sets the person's full name. (a.k.a. display name)</summary>
        </member>
        <member name="P:Pastel.Evolution.Person.FirstName">
            <summary>Gets or sets the person's first name.</summary>
        </member>
        <member name="P:Pastel.Evolution.Person.LastName">
            <summary>Gets or sets the person's last name.</summary>
        </member>
        <member name="P:Pastel.Evolution.Person.EmailAddress">
            <summary>Gets or sets the person's email address.</summary>
        </member>
        <member name="M:Pastel.Evolution.Person._CreateLink(Pastel.Evolution.BranchedRecordBase)">
            <summary>Temporary method for linking a person to either a customer, supplier, or prospective customer record.
            This will most likely become obsolete in future.</summary>
            <param name="record">
            </param>
        </member>
        <member name="T:Pastel.Evolution.Bank">
            <summary>
            Represents a bank record.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Bank.AccountType">
            <summary>
            Describes a bank account type.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Bank.#ctor">
            <summary>Creates a new instance of the Bank class.</summary>
        </member>
        <member name="M:Pastel.Evolution.Bank.#ctor(System.Int32)">
            <summary>Creates a new instance of the Bank class.</summary>
            <param name="id">Specifies the id.</param>
        </member>
        <member name="M:Pastel.Evolution.Bank.#ctor(System.String)">
            <summary>Creates a new instance of the Bank class.</summary>
            <param name="code">Specifies the code.</param>
        </member>
        <member name="M:Pastel.Evolution.Bank.Find(System.String)">
            <summary>Returns the id of the first record found matching the criteria. Eg. BankName = 'abc'</summary>
            <param name="criteria">
            </param>
            <returns>ID of the record found; if not found, -1</returns>
        </member>
        <member name="M:Pastel.Evolution.Bank.FindByName(System.String)">
            <summary>
            Attempts to find a bank by its code and returns its ID.
            </summary>
            <param name="name">The name used to lookup the specific bank.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.Bank.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.Bank.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Bank.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.Bank.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria in SQL format.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.Bank.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Bank.Name">
            <summary>Gets or sets the bank name.</summary>
        </member>
        <member name="P:Pastel.Evolution.Bank.BranchCode">
            <summary>Gets or sets the branch code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Bank.Active">
            <summary>Gets or sets the bank's state.</summary>
        </member>
        <member name="T:Pastel.Evolution.BusinessClass">
            <summary>
            Represents a business classification which can be assigned to accounts.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.BusinessClass.#ctor">
            <summary>Creates a new instance of a business category.</summary>
        </member>
        <member name="M:Pastel.Evolution.BusinessClass.#ctor(System.Int32)">
            <summary>Creates a new instance of a business category.</summary>
            <param name="id">The database ID of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.BusinessClass.#ctor(System.String)">
            <summary>Creates a new instance of a business category.</summary>
            <param name="name">The business category name of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.BusinessClass.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.BusinessClass.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.BusinessClass.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.BusinessClass.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the SQL criteria.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.BusinessClass.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.BusinessClass.Type">
            <summary>Gets or sets the business class' type.</summary>
        </member>
        <member name="T:Pastel.Evolution.BusinessType">
            <summary>
            Represents a business/industry type which can be assigned to accounts.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.BusinessType.#ctor">
            <summary>Creates a new instance of a business type.</summary>
        </member>
        <member name="M:Pastel.Evolution.BusinessType.#ctor(System.Int32)">
            <summary>Creates a new instance of a business type.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.BusinessType.#ctor(System.String)">
            <summary>Creates a new instance of a business type.</summary>
            <param name="type">Specifies the type of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.BusinessType.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.BusinessType.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.BusinessType.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.BusinessType.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.BusinessType.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.BusinessType.Type">
            <summary>Gets or sets the type description.</summary>
        </member>
        <member name="T:Pastel.Evolution.ComHelper">
            <summary>
            Provides various functions for overcoming the limitations of accessing the API via COM.
            This class gets extended as required.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.ModuleID">
            <summary>
            Evolution module ID as it appears in the posting tables.  Mainly used internally.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AutoPaymentMethod">
            <summary>
            Describes the automatic payment method available to supplier accounts.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AccountAgeingMethod">
            <summary>
            Describes an account's ageing method.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.AccountAgeingMethod.OpenItem">
            <summary>
            Each transaction on the account is allocated and aged individually.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.AccountAgeingMethod.BalanceForward">
            <summary>
            Transaction balances on the account are automatically offset by other transactions in the same or previous periods.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.AgeingDate">
            <summary>
            Specifies the date to use when ageing transactions on an ageing reports.</summary>
            <remarks><example>E.g. when a transaction is dated 31 January 2000, and a statement is generated for 31 March 2000, it will be aged under 30 Days if the invoice date is used, but 60 Days if statement date (month-end) is used.</example></remarks>
        </member>
        <member name="F:Pastel.Evolution.AgeingDate.InvoiceDate">
            <summary>
            The actual transaction date is used during age calculation.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.AgeingDate.StatementDate">
            <summary>
            The statement date (typically the last day of the month in which the transaction was processed) is used to determine transaction ages.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryCostingMethod">
            <summary>
            Inventory costing method.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.InventoryIntegrationMethod">
            <summary>
            Inventory costing method.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Country">
            <summary>
            Represents a country record.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Country.#ctor">
            <summary>Creates a new instance of a country.</summary>
        </member>
        <member name="M:Pastel.Evolution.Country.#ctor(System.Int32)">
            <summary>Creates a new instance of a country.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Country.#ctor(System.String)">
            <summary>Creates a new instance of a country.</summary>
            <param name="name">Specifies the name of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Country.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Country.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Country.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.Country.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.Country.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Country.Name">
            <summary>Gets or sets the country's name.</summary>
            <summary>Gets or sets the country name.</summary>
        </member>
        <member name="T:Pastel.Evolution.DeliveryMethod">
            <summary>
            Represents an order delivery method.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.DeliveryMethod.#ctor">
            <summary>Creates a new instance of a delivery method.</summary>
        </member>
        <member name="M:Pastel.Evolution.DeliveryMethod.#ctor(System.Int32)">
            <summary>Creates a new instance of a delivery method.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.DeliveryMethod.#ctor(System.String)">
            <summary>Creates a new instance of a delivery method.</summary>
            <param name="description">Specifies the description of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.DeliveryMethod.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.DeliveryMethod.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.DeliveryMethod.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.DeliveryMethod.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.DeliveryMethod.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.DeliveryMethod.Description">
            <summary>Gets or sets the delivery method's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.DeliveryMethod.Comment">
            <summary>Gets or sets the delivery method's comment.</summary>
        </member>
        <member name="T:Pastel.Evolution.JobCard">
            <summary>
            Represents an Evolution job card.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobCard.Audit">
            <summary>Gets the audit number of the last transaction processed by this document.  This value defaults to 0, and will not be available on recalled documents.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobCard.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobCard.OverrideWIPGLAccount">
            <summary>Gets or sets the Job Card override WIP GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobCard.OverrideCOSGLAccount">
            <summary>Gets or sets the Job Card override COS GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobCard.OverrideRecoveryGLAccount">
            <summary>Gets or sets the Job Card override Recovery GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobCard.OverrideSalesGLAccount">
            <summary>Gets or sets the Job Card override Sales GL Account.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobCard.QuoteAmount">
            <summary>Gets or sets the Job Card Quote Amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobCard.Detail">
            <summary>
            Gets the job detail collection to which detail lines can be added and from which lines can be deleted
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JobCard.FindByCode(System.String)">
            <summary>Attempts to find an inventory item by its code and returns its ID.</summary>
            <param name="code">The code used to lookup the account.</param>
            <seealso cref="M:Pastel.Evolution.JobCard.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.JobCard.OnSave">
            <summary>
            Persists the record to the database.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JobCard.ValidateForQuoteLines">
            <summary>Validate whether any quote lines exist on the job card.</summary>
        </member>
        <member name="M:Pastel.Evolution.JobCard.ProcessQuoteSourceDocument">
            <summary>Process a job card quote source document.</summary>
        </member>
        <member name="M:Pastel.Evolution.JobCard.OnDelete">
            <summary>
            Removes the record from the database, provided it is not referenced by other records.
            </summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException"/>
        </member>
        <member name="M:Pastel.Evolution.JobCard.SetUserField(System.String,System.Object)">
            <summary> Sets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <param name="fieldValue">Specifies the user defined field value.</param>
        </member>
        <member name="M:Pastel.Evolution.JobCard.GetUserField(System.String)">
            <summary> Gets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <returns>The user defined field value.</returns>
        </member>
        <member name="T:Pastel.Evolution.JobDetail">
            <summary>
            Represents a job transaction.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.LongID">
            <summary>
            Transitional accessor.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.InventoryItem">
            <summary>
            Gets or sets the line's inventory item. Maps directly to the Account property but null if invalid.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.InventoryItemID">
            <summary>Gets or sets the stock item id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the InventoryItemID rather than the InventoryItem since
            setting the item ID actually instantiates an InventoryItem object for validation.
            <seealso cref="P:Pastel.Evolution.JobDetail.InventoryItem" />
        </member>
        <member name="P:Pastel.Evolution.JobDetail.BinLocationID">
            <summary>Gets or sets the bin location id.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.BinLocation">
            <summary>Gets or sets the bin location.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.BinLocationContext">
            <summary> Gets or sets the bin location context of the inventory item and warehouse specified.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.xAttribute">
            <summary>Gets or sets the line attribute xml.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.AttributeTxQuantityGroup">
            <summary>Gets the collection of transaction quantities pertaining to the job card detail record.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.AttributeGroup">
            <summary>Indicates the attribute group of the inventory item specified on the job card detail line.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.SerialNumberGroupID">
            <summary>Gets the serial number group id.</summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.Worker">
            <summary>
            Gets or sets the line's worker. Maps directly to the Account property but null if invalid.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.WorkerID">
            <summary>Gets or sets the worker id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the WorkerID rather than the Worker since
            setting the item ID actually instantiates a Worker object for validation.
            <seealso cref="P:Pastel.Evolution.JobDetail.InventoryItem" />
        </member>
        <member name="M:Pastel.Evolution.JobDetail.Save">
            <summary>
            WIP: this only handles new quote and active lines; modified lines are ignored
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.SalesTotalExcl">
            <summary>
            Gets the calculated line total
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.SalesTotalTax">
            <summary>
            Gets the calculated line total
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.SalesTotalIncl">
            <summary>
            Gets the calculated line total
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.BudgetSalesTotalExcl">
            <summary>
            Gets the calculated line total
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.BudgetPurchasesTotalTax">
            <summary>
            Gets the calculated line total.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.PurchasesTotalTax">
            <summary>
            Gets the calculated line total tax.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.BudgetSalesTotalTax">
            <summary>
            Gets the calculated line total.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.BudgetSalesTotalIncl">
            <summary>
            Gets the calculated line total
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.Delete">
            <summary>
            Removes the record from the database, provided it is not referenced by other records.
            </summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException"/>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.Index">
            <summary>
            Gets the line number (1-based)
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.QuantityWIP">
            <summary>
            Gets the work in progress quantity held by given detail record.  This value gets increased when saving a new active inventory 
            line and decreased by adding negative lines (-Quantity).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.DiscountPercent">
            <summary>
            Gets or sets the line discount percentage: 5% = 5, as opposed to 0.05
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.Discount">
            <summary>
            Gets or sets the total line discount value (applies to tax excl. value)
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.WarehouseContext">
            <summary>
            Gets or sets the warehouse link of the stock item specified.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.Warehouse">
            <summary>
            Gets or sets the warehouse relevant to this detail record.  Set the warehouse only after setting the inventory item.  The Warehouse and WarehouseContext properties are mapped to one another.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.WarehouseID">
            <summary>
            Gets the ID of the assigned warehouse (0 if N/A).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.UnitSellingPrice">
            <summary>
            Gets or sets the tax exclusive unit selling price.  For new records, setting this value will also set <see cref="P:Pastel.Evolution.JobDetail.BudgetUnitSellingPrice"/>.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.LineStatusChange">
            <summary>Determine if the initial line status changed</summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.TransactionCode">
            <summary>
            Gets or sets the job costing transaction type associate with the detail record.  When setting the transaction type, 
            the cost and sales tax types will default to those set on the transaction type.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.UnitCostPrice">
            <summary>
            Gets or sets the tax exclusive unit cost price.  For new records, setting this value will also set <see cref="P:Pastel.Evolution.JobDetail.BudgetUnitCostPrice"/>.
            </summary>
            <remarks>Set positive, even for negative quantities.</remarks>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.Source">
            <summary>
            Gets the transaction source, decided by the Account.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobDetail.SalesTaxRate">
            <summary>
            Sales tax type
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.Detach">
            <summary>
            Detaches the object from its database record
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.SetUserField(System.String,System.Object)">
            <summary> Sets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <param name="fieldValue">Specifies the user defined field value.</param>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.GetUserField(System.String)">
            <summary> Gets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <returns>The user defined field value.</returns>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.ListAttributeQuantities">
            <summary>Returns the job card line attribute quantity group.</summary>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.SetAttributeQuantities(System.Double,Pastel.Evolution.AttributeTypeValue[])">
            <summary>Set attribute quantities for the job detail line.</summary>
            <param name="quantity">Quantity.</param>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.SetAttributeQuantities(System.Double,System.Collections.Generic.List{Pastel.Evolution.AttributeTypeValue})">
            <summary>Set attribute quantities for the job detail line.</summary>
            <param name="quantity">Quantity.</param>
            <param name="list">List of Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.ReturnTransactionQtyIndex(Pastel.Evolution.AttributeTypeValue[])">
            <summary>Returns the transaction quantity index for the specfic attribute type and value.</summary>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.ResetTransactionQty(System.Double,System.Int32)">
            <summary>Set transaction quantities for an existing attribute type and value.</summary>
            <param name="quantity">Quantity.</param>
            <param name="index">Index.</param>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.AddTransactionQty(System.Double,Pastel.Evolution.AttributeTypeValue[])">
            <summary>Set transaction quantities for an existing attribute type and value.</summary>
            <param name="quantity">Quantity.</param>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.ReCalcLineQuantity">
            <summary>Recalculate job card line quantities pertaining attributes.</summary>
        </member>
        <member name="M:Pastel.Evolution.JobDetail.ValidateAttributeQtyAvailable">
            <summary>Validate available attribute quantities per job detail line.</summary>
        </member>
        <member name="T:Pastel.Evolution.JobTransactionCode">
            <summary>
            Represents a job costing transaction code.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.JobTransactionCode.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JobTransactionCode.FindByCode(Pastel.Evolution.JobDetail.TransactionSource,System.String)">
            <summary>
            Attempts to find a record by its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the record.</param>
            <param name="source">The transaction source by which to filter the transaction listing.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.JobTransactionCode.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.JobTransactionCode.FindByCode(System.String)">
            <summary>
            Attempts to find a record by its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the record.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.JobTransactionCode.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.JobTransactionCode.Get(System.String)">
            <summary>
            Returns the [first] inventory item object with the criteria specified; otherwise, returns <i>null</i>.
            </summary>
            <param name="criteria"> Eg. Code = 'STO0021' or Description like '%Stone%'</param>
            <returns></returns>
            <seealso cref="M:Pastel.Evolution.JobTransactionCode.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.JobTransactionCode.GetByCode(Pastel.Evolution.JobDetail.TransactionSource,System.String)">
            <summary>
            Returns a transaction type object corresponding to the code and transaction source specified; otherwise, returns <i>null</i>.
            </summary>
            <param name="source">The transaction source by which to limit code search.</param>
            <param name="code">The transaction code.</param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.JobTransactionCode.OnSave">
            <summary>
            Persists the record to the database.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.JobTransactionCode.OnDelete">
            <summary>
            Removes the record from the database, provided it is not referenced by other records.
            </summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException"/>
        </member>
        <member name="T:Pastel.Evolution.DocumentState">
            <summary>
            Describes an inventory document's state.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.DocumentType">
            <summary>
            Describes an inventory document's type.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.PropertyDirection">
            <summary>
            Describes whether a Property's Direction is a Value or Percentage.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.UniqueDocumentNumber">
            <summary>
            Describes an unique document number type
            </summary>
        </member>
        <member name="T:Pastel.Evolution.OrderBase">
            <summary>
            Includes functionality that is common to all inventory documents. Must be inherited.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.DefaultTaxMode">
            <summary>Gets the global default tax mode.</summary>
            <remarks>The default tax mode is Exclusive.  This is to provide backward compatibility with earlier implementations of the SDK.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.IsLoading">
            <summary>
            Will be true while the order is busy loading detail.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.IsProcessing">
            <summary>
            Will be true while the order is busy processing transactions.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.OrderBase.processLedger">
            <summary>
            Should the document process to AR or AP ledger?
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.Audit">
            <summary>Gets the audit number of the last transaction processed by this document.  This value defaults to 0, and will not be available on recalled documents.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.initialise">
            <summary>
            Reverts the order to an unsaved, version 0 (see remarks) state.
            </summary>
            <remarks>Version 0: When using the Revert method, the order is set to an unsaved state, allowing it to be saved as another order. It does not; however, revert back to the last saved state, but rather assumes the current state as far as order detail is concerned.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.Type">
            <summary>Gets the order's document type.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.State">
            <summary>Gets the document state.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.Version">
            <summary>Gets the current version of the order, incremented on every save.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.OriginalDocument">
            <summary>Gets the original document.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.Reference">
            <summary>Gets or sets the document reference (InvNumber).</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.Reference2">
            <summary>Gets the 2nd document reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.Account">
            <summary>Gets or sets the AR or AP account associated with the order.</summary>
            <seealso cref="T:Pastel.Evolution.Supplier" />
            <seealso cref="T:Pastel.Evolution.Customer" />
        </member>
        <member name="P:Pastel.Evolution.OrderBase.LedgerTransaction">
            <summary>Gets the last ledger transaction (AR/AP Transaction) posted.</summary>
            <remarks>This transaction reference is only available immediately after processing the document.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.AccountID">
            <summary>Gets or sets the ID of the AR or AP account associated with the order.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.Description">
            <summary>Gets or sets the document description.  This will also be the description on any transactions posted.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.InvoiceDate">
            <summary>Gets or sets the invoice date.</summary>
            <remarks>The invoice date will determine the transaction date when posting the document.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.ApplyTaxPerLine">
            <summary>Gets or sets whether tax per line should be applied.</summary>
            <remarks>When tax per line is false the Tax amount will be calculated on the Total Order Exclusive amount, instead of each Line's Exclusive amount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.OrderDate">
            <summary>Gets or sets the order date.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.DueDate">
            <summary>Gets or sets the due date.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.DeliveryDate">
            <summary>Gets or sets the delivery date.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TaxMode">
            <summary>Gets or sets the tax mode.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.DeliverTo">
            <summary>Gets or sets the delivery address.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.InvoiceTo">
            <summary>Gets or sets the invoice address.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.OrderNo">
            <summary>Gets or sets the order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.DeliveryMethodID">
            <summary>Gets or sets the delivery method ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.DeliveryMethod">
            <summary>Gets or sets the delivery method.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.MessageLine1">
            <summary>Gets or sets the 1st message line.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.MessageLine2">
            <summary>Gets or sets the 2nd message line.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.MessageLine3">
            <summary>Gets or sets the 3rd message line.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.ProjectID">
            <summary>Gets or sets the project ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.Project">
            <summary>Gets or sets the project.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.OrderStatusID">
            <summary>Gets or sets the order status ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.OrderStatus">
            <summary>Gets or sets the document's order status.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.OrderPriorityID">
            <summary>Gets or sets the order priority ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.OrderPriority">
            <summary>Gets or sets the order priority.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.ExternalOrderNo">
            <summary>Gets or sets the external order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.CurrencyID">
            <summary>Gets or sets the document's currency ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.Currency">
            <summary>Gets or sets the currency.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.ExchangeRate">
            <summary>Gets or sets the exchange rate.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.PrintCount">
            <summary>Gets or sets the print count.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TaxNumber">
            <summary>Gets or sets the cash account's tax number.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.Detail">
            <summary>Gets the order detail collection representing the body of the document.</summary>
            <seealso cref="T:Pastel.Evolution.OrderDetail" />
        </member>
        <member name="P:Pastel.Evolution.OrderBase.UserDefinedFields">
            <summary>Gets the user defined field collection.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.Discount">
            <summary>Gets or sets the document discount amount (applicable to tax excl. total),</summary>
            <remarks>Document discount is applied after line discount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.DiscountForeign">
            <summary>Gets or sets the document foreign discount amount (applicable to tax excl. total),</summary>
            <remarks>Document foreign discount is applied after line discount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.DiscountPercent">
            <summary>Gets or sets the document discount percentage.</summary>
            <remarks>Document discount is applied after line discount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.DiscountLastProcessed">
            <summary>Gets the document discount amount last processed.</summary>
            <remarks>Document discount is applied after line discount.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.DiscountToProcess">
            <summary>Gets the document discount amount about to be processed (applicable to tax excl. total).</summary>
            <remarks>Document discount is applied after line discount.</remarks>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.ApplyDiscount(System.Double)">
            Utility function for calculating discount
            <param name="originalValue"></param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalDiscountAdjustedForeign">
            <summary>Gets the total discount adjusted foreign amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalDiscountAdjusted">
            <summary>Gets the total discount adjusted amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalExcl">
            <summary>Gets the total excl amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalExclForeign">
            <summary>Gets the total excl amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalTax">
            <summary>Gets the total tax amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalTaxForeign">
            <summary>Gets the total tax amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalInclBeforeInvoiceRounding">
            <summary>Gets the total incl amount before Invoice Rounding.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalIncl">
            <summary>Gets the total incl amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalInclForeignBeforeInvoiceRounding">
            <summary>Gets the total incl amount before Invoice Rounding.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalInclForeign">
            <summary>Gets the total incl amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalOutstandingExcl">
            <summary>Gets the total outstanding excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalOutstandingExclForeign">
            <summary>Gets the total outstanding excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalOutstandingTax">
            <summary>Gets the total outstanding tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalOutstandingTaxForeign">
            <summary>Gets the total outstanding tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalOutstandingIncl">
            <summary>Gets the total outstanding incl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalOutstandingInclForeign">
            <summary>Gets the total outstanding incl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalToProcessExcl">
            <summary>Gets the total amount to process excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalToProcessExclForeign">
            <summary>Gets the total amount to process excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalToProcessTax">
            <summary>Gets the total to process tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalToProcessTaxForeign">
            <summary>Gets the total to process tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalToProcessInclBeforeInvoiceRounding">
            <summary>Gets the total to process incl before Invoice Rounding.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalToProcessIncl">
            <summary>Gets the total to process incl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalToProcessInclForeignBeforeInvoiceRounding">
            <summary>Gets the total to process incl before Invoice Rounding.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalToProcessInclForeign">
            <summary>Gets the total to process incl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalLastProcessExcl">
            <summary>Gets the total last process excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalLastProcessExclForeign">
            <summary>Gets the total last process excl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalLastProcessTax">
            <summary>Gets the total last process tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalLastProcessTaxForeign">
            <summary>Gets the total last process tax.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalLastProcessIncl">
            <summary>Gets the total last process incl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.TotalLastProcessInclForeign">
            <summary>Gets the total last process incl.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderBase.ProcessOnHold">
            <summary>Gets or sets the process to an on hold customer.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.CloneArchive">
            <summary>
            Returns an unsaved duplicate of the order - use for internal purposes only as it allows order number duplication
            </summary>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.Process">
            <summary>Posts the document to the various accounts and ledgers applicable.</summary>
            <returns>The generated reference number.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.Process(System.String)">
            <summary>Posts the document to the various accounts and ledgers applicable.</summary>
            <remarks>Use this method when a document reference has already been generated outside the Evolution system.</remarks>
            <param name="reference">Specifies the transaction reference to use.  No duplication checking is performed.</param>
            <seealso cref="M:Pastel.Evolution.OrderBase.Process" />
            <returns>The reference number supplied.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.OnDelete">
            <summary>
            Not supported.  Use the delete facility from inside Evolution.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.Complete">
            <summary>Processes (invoices) all outstanding quantities on the order.  The entire invoice fails if one or more detail lines do not have sufficient stock available.  The CompleteMax method (SalesOrder only) is a variation on this method and attempts to confirm as much of the ordered stock as is available.</summary>
            <seealso cref="M:Pastel.Evolution.SalesOrder.CompleteMax" />
            <seealso cref="M:Pastel.Evolution.OrderBase.Process" />
            <seealso cref="M:Pastel.Evolution.OrderBase.Process(System.String)" />
            <returns>The generated reference number.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.Complete(System.String)">
            <summary>Process (invoice) all outstanding quantities on the order.  The entire invoice fails if one or more detail lines do not have sufficient stock available.  The  method is a variation on this method and attempts to confirm as much of the ordered stock as is available.</summary>
            <param name="reference">Specifies the transaction reference to use.  No duplication checking is performed</param>
            <seealso cref="M:Pastel.Evolution.SalesOrder.CompleteMax" />
            <returns>The supplied reference number.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.SetUserField(System.String,System.Object)">
            <summary> Sets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <param name="fieldValue">Specifies the user defined field value.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.GetUserField(System.String)">
            <summary> Gets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <returns>The user defined field value.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.Clone">
            <summary>Creates an exact copy of an existing order.</summary>
            <returns>The cloned document.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderBase.BeforeAddDetail(Pastel.Evolution.OrderDetail,System.ComponentModel.CancelEventArgs)">
            <summary>
            Called before adding an OrderDetail record to the collection.  This is not called while loading a record from the database.
            </summary>
            <param name="detailRecord"></param>
            <param name="e"></param>
        </member>
        <member name="T:Pastel.Evolution.MethodType">
            <summary> Describes the type of method which can be called from an inventory document detail record. </summary>
        </member>
        <member name="T:Pastel.Evolution.QuantityDirection">
            <summary> Describes whether the quantity is to be reset or updated. </summary>
        </member>
        <member name="T:Pastel.Evolution.QuantityEntryType">
            <summary> Describes whether the quantity is entered on the document line or via quantity matrix. </summary>
        </member>
        <member name="T:Pastel.Evolution.OrderDetail">
            <summary>Represents an inventory document detail record.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.#ctor">
            <summary>Creates a new instance of a order detail record.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.#ctor(Pastel.Evolution.InventoryItem,System.String,System.Double,System.Double,Pastel.Evolution.TaxMode)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="item">Specifies the inventory item.</param>
            <param name="warehouseCode">Specifies the warehouse code.</param>
            <param name="quantity">Specifies the quantity.</param>
            <param name="price">Specifies the exclusive unit price.</param>
            <param name="taxMode">Specifies the tax mode.</param>
            <seealso cref="P:Pastel.Evolution.OrderDetail.UnitSellingPrice" />
            <seealso cref="P:Pastel.Evolution.OrderDetail.TaxMode" />
            <seealso cref="P:Pastel.Evolution.OrderDetail.InventoryItem" />
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.#ctor(Pastel.Evolution.InventoryItem,System.String,System.Double,System.Double)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="item">Specifies the item.</param>
            <param name="warehouseCode">Specifies the warehouse code.</param>
            <param name="quantity">Specifies the quantity.</param>
            <param name="price">Specifies the exclusive unit price.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.#ctor(Pastel.Evolution.InventoryItem,System.Double,System.Double)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="item">Specifies the item.</param>
            <param name="quantity">Specifies the quantity.</param>
            <param name="price">Specifies the price.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.#ctor(Pastel.Evolution.InventoryItem,System.Double,System.Double,Pastel.Evolution.TaxMode)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="item">Specifies the item.</param>
            <param name="quantity">Specifies the quantity.</param>
            <param name="price">Specifies the exclusive unit price.</param>
            <param name="taxMode">Specifies the tax mode.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.#ctor(System.String,System.Double,System.Double)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="itemCode">Specifies the item code.</param>
            <param name="quantity">Specifies the quantity.</param>
            <param name="price">Specifies the price.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.#ctor(System.Int64)">
            <summary>Creates a new instance of  an order detail record.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.LongID">
            <summary>Transitional accessor.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Document">
            <summary>Gets the document to which the detail record belongs.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Account">
            <summary>Gets or sets the line's account (inventory item or GL account [in near future]).</summary>
            <remarks>When setting the item, the unit cost price is also set.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Description">
            <summary>Gets or sets the line description.</summary>
            <remarks>If the description field is blank on assignment of the  property, it will default to the inventory item description.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.GrvLineID">
            <summary>Gets the grv line id.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Index">
            <summary>
            Gets the line number (1-based)
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.OriginalDetailLine">
            <summary>Gets the line's original detail record.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Note">
            <summary>Gets or sets the line note text.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.PriceListNameID">
            <summary>Gets or sets the line pricelistID.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Module">
            <summary>Indicates the Evolution module of the Order Detail line.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.QuantityEntryMethod">
            <summary> Describes whether the quantity is entered on the document line or via quantity matrix. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.InventoryItem">
            <summary>Gets or sets the line's inventory item.</summary>
            <remarks>Setting this value will in effect set the Account.  When setting the item, the unit cost price is also set.</remarks>
            <seealso cref="P:Pastel.Evolution.OrderDetail.Account" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.InventoryItemID">
            <summary>Gets or sets the stock item id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the InventoryItemID rather than the InventoryItem since
            setting the item ID actually instantiates an InventoryItem object for validation.
            <seealso cref="P:Pastel.Evolution.OrderDetail.InventoryItem" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.WarehouseContext">
            <summary>
            Gets or sets the warehouse context of the inventory item specified.  Set the warehouse only after setting the inventory item.  The Warehouse and WarehouseContext properties are mapped to one another.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Warehouse">
            <summary>
            Gets or sets the warehouse relevant to this detail record.  Set the warehouse only after setting the inventory item.  The Warehouse and WarehouseContext properties are mapped to one another.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.WarehouseID">
            <summary> Gets the ID of the assigned warehouse (0 if N/A).</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.GLAccount">
            <summary>Gets or sets the line's GLAccount.</summary>
            <remarks>Setting this value will in effect set the Account. </remarks>
            <seealso cref="P:Pastel.Evolution.OrderDetail.Account" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.GLAccountID">
            <summary>Gets or sets the GLAccount item id.</summary>
            <remarks></remarks>Note that there is no performace benefit in setting the GLAccountID rather than the GLAccount since
            setting the item ID actually instantiates an GLAccount object for validation.
            <seealso cref="P:Pastel.Evolution.OrderDetail.GLAccount" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.OverrideSalesAccount">
            <summary>Specifies the GL account to use when processing the document's sales transaction.</summary>
            <remarks>The sales account only applies to sales transactions (Sales order invoices and credit notes) 
            and overrides the contra account on theinvoice and credit note transaction types.  The GL account specified here also overrides the account defined on the item group or warehouse-specific group.  Note that this value does not get saved with unprocessed documents.  When set to null (as is the case when assigning a non-existing account via the GL Account's Get* methods), the default account will still be used.</remarks>
            <seealso cref="P:Pastel.Evolution.OrderDetail.GLAccount" />
            <seealso cref="T:Pastel.Evolution.SalesOrder" />
            <seealso cref="T:Pastel.Evolution.CreditNote" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.OverrideCostOfSalesAccount">
            <summary>Specifies the GL account to use when processing the document's cost of goods sold transaction.</summary>
            <remarks>The cost of sales account only applies to sales transactions (Sales order invoices and credit notes) and overrides "account 1" on the"issue stock" and "receive stock" transaction types.  The GL account specified here also overrides the COS account defined on the item group or warehouse-specific group.  No COS transaction is posted when using the period GL integration method as set in Inventory Defaults.  Note that this value does not get saved with unprocessed documents.  When set to null (as is the case when assigning a non-existing account via the GL Account's Get* methods), the default account will still be used.</remarks>
            <seealso cref="P:Pastel.Evolution.OrderDetail.GLAccount" />
            <seealso cref="T:Pastel.Evolution.SalesOrder" />
            <seealso cref="T:Pastel.Evolution.CreditNote" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.OverrideStockAccount">
            <summary>Specifies the GL account to use when processing the document's GL stock transaction.</summary>
            <remarks>The stock account only applies to sales transactions (Sales order invoices and credit notes) and overrides "account 2" on the"issue stock" and "receive stock" transaction types.  The GL account specified here also overrides the stock account defined on the item group or warehouse-specific group.  No stock transaction is posted when using the periodic GL integration method as set in Inventory Defaults.  Note that this value does not get saved with unprocessed documents.  When set to null (as is the case when assigning a non-existing account via the GL Account's Get* methods), the default account will still be used.  If this property is not set and during posting the stock account is overridden, it will reflect the overriding account after posting.</remarks>
            <seealso cref="P:Pastel.Evolution.OrderDetail.GLAccount" />
            <seealso cref="T:Pastel.Evolution.SalesOrder" />
            <seealso cref="T:Pastel.Evolution.CreditNote" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.OverridePurchaseAccount">
            <summary>Specifies the purchases GL account to use when processing the document's GL transactions.  Currently this is merely an alias for</summary>
            <remarks>The purchases account only applies to purchases transactions (Purchase order invoices and returns) and overrides the contra account set on the"supplier invoice" and "return to supplier" transaction types.  The GL account specified here also overrides the purchaes account defined on the item group or warehouse-specific group.  Note that this value does not get saved with unprocessed documents.  When set to null (as is the case when assigning a non-existing account via the GL Account's Get* methods), the default account will still be used.</remarks>
            <seealso cref="P:Pastel.Evolution.OrderDetail.GLAccount" />
            <seealso cref="T:Pastel.Evolution.SalesOrder" />
            <seealso cref="T:Pastel.Evolution.CreditNote" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.TaxMode">
            <remarks>When attaching a detail record to an order with a differrent tax mode, the line's tax mode will automatically switch and the price be recalculated.  New detail records default to tax exclusive mode and not to the mode set in inventory defaults.  This was done for backward compatibility with earlier implementations of the SDK.  Use the appropriate constructor for specifying the tax mode.</remarks>
            <seealso cref="M:Pastel.Evolution.OrderDetail.#ctor(Pastel.Evolution.InventoryItem,System.Double,System.Double,Pastel.Evolution.TaxMode)" />
            <exception cref="T:Pastel.Evolution.EvolutionException">The tax mode of a record linked to an order cannot be changed.</exception>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.ProjectID">
            <summary>Gets or sets the line's project id.</summary>
            <summary>Gets or sets the project id.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Project">
            <summary>Gets or sets the line's project.</summary>
            <summary>Gets or sets the project.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Representative">
            <summary>Gets or sets the sales representative on the order line.  This only applies to sales transactions.  When not set, the representative will default to the rep specified (if any) on the order document.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.RepresentativeID">
            <summary>Gets or sets the representative id.</summary>
            <seealso cref="P:Pastel.Evolution.OrderDetail.Representative" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.BinLocationID">
            <summary>Gets or sets the bin location id.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.BinLocation">
            <summary>Gets or sets the bin location.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.JobID">
            <summary>Gets or sets the order detail record's job id.</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Quantity">
            <summary>Gets or sets the quantity of product on order.</summary>
            <remarks>In an order scenario, this is the quantity of product expected to be moved.  This quantity gets rounded according to the rounding configuration set in inventory defaults.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Outstanding">
            <summary>Gets the quantity of stock that remains to be processed.</summary>
            <remarks>The calculation is Quantity - Processed.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Processed">
            <summary>Gets the quantity of stock processed on this line up until this document.</summary>
            <seealso cref="P:Pastel.Evolution.OrderDetail.ToProcess" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Reserved">
            <summary>Gets or sets the quantity of stock to reserve for an order (only applies to sales orders).</summary>
            <remarks>Reserving stock ensures that items are not shipped on other orders.  Only stock on hand can be reserved, i.e. stock that is on purchase order cannot be reserved in advance.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.ToProcess">
            <summary>Gets or sets the quantity of stock to move when calling the  Process method.</summary>
            <remarks>This cannot exceed the outstanding quantity.</remarks>
            <remarks>This value also has to effect on credit notes and returns to suppliers.</remarks>
            <seealso cref="M:Pastel.Evolution.OrderBase.Process(System.String)" />
            <exception cref="T:Pastel.Evolution.EvolutionException">The quantity ToProcess exceeds the Quantity property value.  Increase the order quantity first.</exception>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.LastProcess">
            <summary>Gets the stock quantity moved during the last processing action.</summary>
            <seealso cref="P:Pastel.Evolution.OrderDetail.ToProcess" />
            <seealso cref="P:Pastel.Evolution.OrderDetail.Processed" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.UnitCostPrice">
            <summary>Gets or sets the unit cost price (used by credit notes only).</summary>
            <remarks>The unit cost price defaults to the current item cost price in the system but can be overridden if required.  Override only after setting the inventory item and warehouse.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.TotalAdditionalCost">
            <summary>Gets or sets the additional cost allocated to the line.</summary>
            <remarks>When processing, the total costs allocated to lines needs to match the 
            document additional cost allocation.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.TotalAdditionalCostForeign">
            <summary>Gets or sets the additional cost allocated to the line.</summary>
            <remarks>When processing, the total costs allocated to lines needs to match the 
            document additional cost allocation.</remarks>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.TotalSalesCost">
            <summary>
            Gets the line total cost of sale; i.e. current unit cost * quantity
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.UnitSellingPrice">
            <summary>Gets or sets the unit selling or purchase price.</summary>
            <seealso cref="P:Pastel.Evolution.OrderBase.TaxMode" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.UnitSellingPriceForeign">
            <summary>Gets or sets the foreign unit selling price - on sales orders this will be the product selling price as expected, but on purchase orders, it is the supplier's selling price.</summary>
            <seealso cref="P:Pastel.Evolution.OrderBase.TaxMode" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.UnitSellingPriceAfterDiscount">
            <summary>Gets the line's unit selling price after discount.</summary>
            <remarks>Unlike UnitSellingPriceExclAfterDiscount, this value is based on the tax mode.</remarks>
            <seealso cref="P:Pastel.Evolution.OrderDetail.UnitSellingPriceExclAfterLineDiscount" />
            <seealso cref="P:Pastel.Evolution.OrderDetail.TaxMode" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.UnitSellingPriceExclAfterLineDiscount">
            <summary>Gets the order detail's unit selling price excl after line discount (unrounded).</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.UnitSellingPriceAfterDocumentDiscountExcl">
            <summary>Gets the order detail's unit selling price excl after line and document discount (unrounded).</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.DiscountPercent">
            <summary>
            Gets or sets the line discount percentage as an integer value: 5% = 5, as opposed to 0.05
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.Discount">
            <summary>
            Gets or sets the total line discount value (applies to tax excl. value)
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.DiscountForeign">
            <summary>
            Gets the total foreign line discount value (applies to tax excl. value)
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.TotalExcl">
            <summary> Gets the calculated, rounded line total exclusive amount, after discount. </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.TotalTax">
            <summary>
            Gets or sets the line total tax amount.  Set this value as late as 
            possible as it gets recalculated on setting Quantity, UnitSellingPrice, DiscountPercent, Discount,
            TaxType, as well as when adding the order detail record to the orders's Detail collection. IMPORTANT:
            Be sure to only use the Process() method and not one of the Complete* methods if you wish to override 
            the tax amount.  Setting TotalTax also does not affect TotalToProcessTax.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.TotalTaxBeforeDiscount">
            <summary>
            Gets the tax amount before discount was applied.  If discount is 100% and the total tax amount is 0, 
            the tax rate is used to calculate a default tax amount.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.TotalIncl">
            <summary>
            Gets the calculated line total inclusive amount, after discount.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.TotalToProcessTax">
            <summary>
            Gets or sets the line total tax amount for the following invoice.  Set this value as late as 
            possible as it gets recalculated on setting ToProcess, UnitSellingPrice, DiscountPercent, Discount,
            TaxType, as well as when adding the order detail record to the orders's Detail collection. IMPORTANT:
            Be sure to only use the Process() method and not one of the Complete* methods only if you wish to override 
            the tax amount.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.Detach(System.Boolean)">
            <summary> Detaches the object from its database record </summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.updateToProcessQty">
            <summary>
            Overrides the ToProcess quantity to the value of Quantity when the document does not allow partial processing.
            This is not done during processing or loading.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.SetAttributeQuantities(System.Double,System.Double,System.Double,Pastel.Evolution.AttributeTypeValue[])">
            <summary>Set attribute quantities for the detail line.</summary>
            <param name="quantity">Quantity.</param>
            <param name="toProcess">ToProcess.</param>
            <param name="reserved">Reserved.</param>
            <param name="args">Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.SetAttributeQuantities(System.Double,System.Double,System.Double,System.Collections.Generic.List{Pastel.Evolution.AttributeTypeValue})">
            <summary>Set attribute quantities for the detail line.</summary>
            <param name="quantity">Quantity.</param>
            <param name="toProcess">ToProcess.</param>
            <param name="reserved">Reserved.</param>
            <param name="list">List of Attribute Type and Value.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.ListAttributeQuantities">
            <summary>Returns the detail attribute quantity group.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.ValidateNegativeAttributeQuantities(System.String[]@)">
            <summary>Validate for negative attribute quantities per document line.</summary>
            /// <param name="arrayNegativeAttributes">ArrayNegativeAttributes.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.SetUserField(System.String,System.Object)">
            <summary> Sets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <param name="fieldValue">Specifies the user defined field value.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.GetUserField(System.String)">
            <summary> Gets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <returns>The user defined field value.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.OnSave">
            <summary>Persists the record to the database.</summary>
            
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.OnDelete">
            <summary>Removes the detail record from the order document only, not from the database.  Save the order after calling Delete to delete the line from the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.SerialNumbers">
            <summary>Gets the collection of serial numbers pertaining to the order detail record.</summary>
            <seealso cref="T:Pastel.Evolution.SerialNumber" />
        </member>
        <member name="P:Pastel.Evolution.OrderDetail.LineDetail">
            <summary>Gets the line detail collection representing the order line of the document.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail._Copy">
            <summary>Experimental Method</summary>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail._Copy(System.Boolean)">
            <summary>Experimental Method</summary>
            <param name="clearSerialNumbers">Specify whether serial numbers should be cleared.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderDetail.BeforeAddLineDetail(Pastel.Evolution.OrderLineDetail,System.ComponentModel.CancelEventArgs)">
            <summary>Called before adding an OrderLineDetail record to the collection. This is not called while loading a record from the database.</summary>
            <param name="lineDetail"></param>
            <param name="e"></param>
        </member>
        <member name="T:Pastel.Evolution.OrderStatus">
            <summary>
            Represents a user-definable inventory document status.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.OrderStatus.#ctor">
            <summary>Creates a new instance of  an order status.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderStatus.#ctor(System.Int32)">
            <summary>Creates a new instance of  an order status.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderStatus.#ctor(System.String)">
            <summary>Creates a new instance of  an order status.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.OrderStatus.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.OrderStatus.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.OrderStatus.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="M:Pastel.Evolution.OrderStatus.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.OrderStatus.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.OrderStatus.Description">
            <summary>
            Gets or sets the record description.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.PrintGroup">
            <summary>
            Represents a print group, which is a collection of inventory documents enabling batch printing.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.PrintGroup.#ctor(System.String,Pastel.Evolution.DocumentType)">
            <summary>Creates a new instance of  a print group.</summary>
            <param name="description">Specifies the description of the existing record.</param>
            <param name="documentType">Specifies the document type of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.PrintGroup.#ctor(System.Int32)">
            <summary>Creates a new instance of  a print group.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.PrintGroup.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.PrintGroup.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.PrintGroup.AddDocument(Pastel.Evolution.OrderBase)">
            <summary>Appends a document to the print group.</summary>
            <param name="document">Specifies the document.</param>
        </member>
        <member name="M:Pastel.Evolution.PrintGroup.RemoveDocument(Pastel.Evolution.OrderBase)">
            <summary>Removes a document from the print group.</summary>
            <param name="document">
            </param>
        </member>
        <member name="M:Pastel.Evolution.PrintGroup.OnDelete">
            <summary>Not supported.</summary>
        </member>
        <member name="M:Pastel.Evolution.PrintGroup.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.PrintGroup.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.PrintGroup.Description">
            <summary>Gets or sets the record description.</summary>
        </member>
        <member name="P:Pastel.Evolution.PrintGroup.DocumentIDs">
            <summary>Gets the print group's ArrayList of document ID's.</summary>
            <remarks>This list is updated by AddDocument and RemoveDocument.</remarks>
            <seealso cref="M:Pastel.Evolution.PrintGroup.AddDocument(Pastel.Evolution.OrderBase)" />
            <seealso cref="M:Pastel.Evolution.PrintGroup.RemoveDocument(Pastel.Evolution.OrderBase)" />
        </member>
        <member name="P:Pastel.Evolution.PrintGroup.DocumentType">
            <summary>Gets the print group's document type.</summary>
            <remarks>Only documents with a matching document type can be added to the print group.</remarks>
        </member>
        <member name="T:Pastel.Evolution.Priority">
            <summary>
            Represents an incident priority.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Priority.#ctor">
            <summary>Creates a new instance of  a priority.</summary>
        </member>
        <member name="M:Pastel.Evolution.Priority.#ctor(System.Int32)">
            <summary>Creates a new instance of  a priority.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Priority.#ctor(System.String)">
            <summary>Creates a new instance of  a priority.</summary>
            <param name="description">Specifies the description of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Priority.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Priority.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Priority.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.Priority.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="P:Pastel.Evolution.Priority.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Priority.Description">
            <summary>Gets or sets the record description.</summary>
        </member>
        <member name="P:Pastel.Evolution.Priority.Colour">
            <summary>Gets or sets the priority's colour.</summary>
            <remarks>Accepts a value between 0 and 255.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Priority.IsDefault">
            <summary>Gets whether or not the priority is the default priority.</summary>
        </member>
        <member name="T:Pastel.Evolution.Project">
            <summary>
            Represents a project.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Project.#ctor">
            <summary>Creates a new instance of  a project.</summary>
        </member>
        <member name="M:Pastel.Evolution.Project.#ctor(System.Int32)">
            <summary>Creates a new instance of  a project.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Project.#ctor(System.String)">
            <summary>Creates a new instance of  a project.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Project.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Project.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.Project.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.Project.Find(System.String)">
            <summary>Finds a project ID.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. ProjectCode = 'INT001' or ProjectName like '%Internal%'</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.Project.FindByCode(System.String)">
            <summary>
            Attempts to find a project by its code and returns its ID.
            </summary>
            <param name="code">The code used to lookup the project.</param>
            <returns>-1 if no record was found, else the id of the first record matching the criteria supplied.</returns>
            <seealso cref="M:Pastel.Evolution.Project.Find(System.String)"/>
        </member>
        <member name="M:Pastel.Evolution.Project.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">The criteria passed to the SQL query.  Eg. ProjectCode = 'INT001' or ProjectName like '%Internal%'</param>
            <seealso cref="M:Pastel.Evolution.Project.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.Project.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.Project.GetByCode(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.Project.GetByCode(System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <seealso cref="M:Pastel.Evolution.Project.Get(System.String)" />
            <seealso cref="M:Pastel.Evolution.Project.#ctor(System.String)" />
            <seealso cref="M:Pastel.Evolution.Project.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="P:Pastel.Evolution.Project.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Project.Code">
            <summary>Gets or sets the project code.</summary>
        </member>
        <member name="P:Pastel.Evolution.Project.Description">
            <summary>Gets or sets the project description (name, in this case).</summary>
        </member>
        <member name="P:Pastel.Evolution.Project.ProjectDescription">
            <summary>Gets or sets the project's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.Project.Active">
            <summary>Gets or sets the record's operational state.</summary>
        </member>
        <member name="T:Pastel.Evolution.Competitor">
            <summary>
            Represents a Contact Management competitor.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Competitor.#ctor">
            <summary>Creates a new instance of an opportunity.</summary>
        </member>
        <member name="M:Pastel.Evolution.Competitor.#ctor(System.Int32)">
            <summary>Creates a new instance of  a prospect.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.Competitor.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="M:Pastel.Evolution.Competitor.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Competitor.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="T:Pastel.Evolution.DocumentCategory">
            <summary>
            Represents a contact management document category.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.DocumentCategory.OnSave">
            <summary>
            Persists the record to the database.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.DocumentCategory.OnDelete">
            <summary>
            Removes the record from the database, provided it is not referenced by other records.
            </summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException"/>
        </member>
        <member name="M:Pastel.Evolution.DocumentCategory.List(System.String)">
            <summary>
            Returns a System.Data.DataTable object containing the database records from the _rtblDocStore table matching the supplied criteria.
            </summary>
            <param name="criteria">The SQL criteria used to locate the record, e.g. <c>cDocName like '1___'</c></param>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to include 
            the single quotes around string literals and append additional criteria with <c>and</c>.</remarks>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="P:Pastel.Evolution.DocumentCategory.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="T:Pastel.Evolution.OpportunityStage">
            <summary>
            Represents a Contact Management sales opportunity stage.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.OpportunityStage.#ctor">
            <summary>Creates a new instance of an opportunity.</summary>
        </member>
        <member name="M:Pastel.Evolution.OpportunityStage.#ctor(System.Int32)">
            <summary>Creates a new instance of  a prospect.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.OpportunityStage.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.OpportunityStage.State">
            <summary>Gets or sets the opportunity status.</summary>
        </member>
        <member name="P:Pastel.Evolution.OpportunityStage.Probability">
            <summary>Gets or sets the probability percentage.</summary>
        </member>
        <member name="M:Pastel.Evolution.OpportunityStage.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.OpportunityStage.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="T:Pastel.Evolution.OpportunityState">
            <summary>
            Represents a Contact Management opportunity status.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.OpportunityState.#ctor">
            <summary>Creates a new instance of an opportunity.</summary>
        </member>
        <member name="M:Pastel.Evolution.OpportunityState.#ctor(System.Int32)">
            <summary>Creates a new instance of  a prospect.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.OpportunityState.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.OpportunityState.IsFinal">
            <summary>
            Gets or sets whether or not this state terminates an opportunity.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.OpportunityState.GetByName(System.String)">
            <summary>Returns an opportunity state object corresponding to the name specified; otherwise, returns null.</summary>
            <param name="code">
            </param>
        </member>
        <member name="M:Pastel.Evolution.OpportunityState.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.OpportunityState.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="T:Pastel.Evolution.Opportunity">
            <summary>
            Represents a Contact Management sales opportunity.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Opportunity.#ctor">
            <summary>Creates a new instance of an opportunity.</summary>
        </member>
        <member name="M:Pastel.Evolution.Opportunity.#ctor(System.Int32)">
            <summary>Creates a new instance of an opportunity.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.Opportunity.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Opportunity.State">
            <summary>
            Gets the opportunity's status. WARNING: this may be renamed to status in future.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Opportunity.Person">
            <summary>Gets or sets the person record related to the opportunity.</summary>
        </member>
        <member name="P:Pastel.Evolution.Opportunity.IsPublic">
            <summary>
            Gets or sets whether or not the prospect is visible to agents other than the assigned agent.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Opportunity.GetByRefNum(System.String)">
            <summary>Returns an opportunity object corresponding to the reference number specified; otherwise, returns null.</summary>
            <remarks>Only returns an opportunity object linked to an existing customer.</remarks>
            <param name="refNumber">
            </param>
        </member>
        <member name="M:Pastel.Evolution.Opportunity.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Opportunity.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="T:Pastel.Evolution.Prospect">
            <summary>
            Represents a Contact Management prospective customer.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Prospect.#ctor">
            <summary>Creates a new instance of a prospect.</summary>
        </member>
        <member name="M:Pastel.Evolution.Prospect.#ctor(System.Int32)">
            <summary>Creates a new instance of  a prospect.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Prospect.#ctor(System.String)">
            <summary>Creates a new instance of  a prospect.</summary>
            <param name="companyName">Specifies the companyName of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.Prospect.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Prospect.PhysicalAddress">
            <summary>Gets or sets the account's physical address.</summary>
        </member>
        <member name="P:Pastel.Evolution.Prospect.PostalAddress">
            <summary>Gets or sets the account's postal address.</summary>
        </member>
        <member name="P:Pastel.Evolution.Prospect.Agent">
            <summary>Gets or sets the agent to whom the prospect belongs. Prospects can be hidden from other agents by setting <see cref="P:Pastel.Evolution.Prospect.IsPublic"/> to false.</summary>
        </member>
        <member name="P:Pastel.Evolution.Prospect.IsPublic">
            <summary>
            Gets or sets whether or not the prospect is visible to agents other than the assigned agent.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Prospect.ChargeTax">
            <summary>
            Gets or sets whether the account is taxed (on quotations etc.)
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Prospect.FindByCompanyName(System.String)">
            <summary>Attempts to find a Prospect by its Company Name and returns its ID.</summary>
            <param name="companyName">The Company Name used to lookup the prospect.</param>
            <seealso cref="M:Pastel.Evolution.Prospect.Find(System.String)" />
            <returns>-1 if no record was found, else the id of the first account matching the criteria supplied.</returns>
        </member>
        <member name="P:Pastel.Evolution.Prospect.Representative">
            <summary>
            Gets or sets the Sales Representative.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Prospect.RepresentativeID">
            <summary>
            Gets or sets the Sales Representative ID.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Prospect.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.Prospect.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException">
            </exception>
        </member>
        <member name="T:Pastel.Evolution.Incident">
            <summary>
            Represents an Evolution Contact Management incident.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Incident.IncidentStatus">
            <summary>
            Describes the status of the incident.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.Incident.IncidentStatus.NotStarted">
            <summary>
            The incident has been logged but not yet actioned.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.Incident.IncidentStatus.InProgress">
            <summary>
            The indicent has been actioned by not yet closed.
            </summary>
        </member>
        <member name="F:Pastel.Evolution.Incident.IncidentStatus.Complete">
            <summary>
            The incident has been closed.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Incident.#ctor">
            <summary>Creates a new instance of  an incident.</summary>
        </member>
        <member name="M:Pastel.Evolution.Incident.#ctor(System.Int32)">
            <summary>Creates a new instance of  an incident.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.Incident.#ctor(System.String)">
            <summary>Creates a new instance of  an incident.</summary>
            <param name="reference">Specifies the reference of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.Incident.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Status">
            <summary>Gets or sets the incident's status.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Customer">
            <summary>Gets or sets the customer account linked to the incident.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Supplier">
            <summary>Gets or sets the supplier account linked to the incident.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Prospect">
            <summary>Gets or sets the prospective client related to the incident.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Person">
            <summary>Gets or sets the person record related to the incident.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.JobCard">
            <summary>Gets or sets the job card linked to the incident.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Opportunity">
            <summary>Gets or sets the sales opportunity linked to the incident.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Contract">
            <summary>Gets or sets the sales opportunity linked to the incident.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.CurrentAgent">
            <summary>Gets the agent to whom the incident is currently assigned to.  The current agent can only be changed by posting a re-assignment action.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Reference">
            <summary>Gets or sets the internal incident reference.</summary>
            <remarks>If no reference is set at the time of posting the incident, one will be generated.  If number generationis not configured, an exception will be thrown since each incident must have a reference.</remarks>
        </member>
        <member name="P:Pastel.Evolution.Incident.CustomerReference">
            <summary>Gets or sets the customer's reference number.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Outline">
            <summary>Gets or sets the incident's outline - the summary description.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.DueBy">
            <summary>Gets or sets the incident's due date/time.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.CreatedDate">
            <summary>
            Gets the original creation date/time that the incident was created.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.ModifiedDate">
            <summary>
            Gets the last date/time that the incident was modified.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Priority">
            <summary>Gets or sets the incident's due date/time.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.IncidentTypeID">
            <summary>Gets or sets the incident's incident type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.IncidentType">
            <summary>Gets or sets the incident type.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.AgentGroupID">
            <summary>Gets the agent group's incident type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.CategoryID">
            <summary>Gets or sets the incident's category id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Category">
            <summary>Gets or sets the incident's assigned category.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.ProjectID">
            <summary>Gets or sets the incident's project id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.Project">
            <summary>Gets or sets the incident's assigned project.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.EscalationGroupID">
            <summary>Gets or sets the incident's escalation group id.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.EscalationGroup">
            <summary>Gets or sets the incident's assigned escalation group.  Note that while Evolution will automatically assign an agent if only an escalation group is supplier, the API requires that an agent be specified.</summary>
        </member>
        <member name="P:Pastel.Evolution.Incident.RequireAcknowledgement">
            <summary>Gets or sets whether or not the incident requires acknowledgement.</summary>
            <remarks>When set to true, new incident logs posted will create a notification for the creator of the incident.</remarks>
        </member>
        <member name="M:Pastel.Evolution.Incident.Post(Pastel.Evolution.IncidentLogEntry)">
            <summary>Posts an incident log entry.</summary>
            <param name="log">Specifies the log entry to post.</param>
        </member>
        <member name="M:Pastel.Evolution.Incident.Post(Pastel.Evolution.IncidentLogEntry,System.Boolean,System.Boolean)">
            <summary>Posts a incident log entry.</summary>
            <param name="log">Specifies the log entry to post.</param>
            <param name="close">Specifies whether the incident is to be closed.</param>
            <param name="notify">Specifies whether or not notification is required.</param>
        </member>
        <member name="M:Pastel.Evolution.Incident.SetUserField(System.String,System.Object)">
            <summary> Sets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <param name="fieldValue">Specifies the user defined field value.</param>
        </member>
        <member name="M:Pastel.Evolution.Incident.GetUserField(System.String)">
            <summary> Gets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <returns>The user defined field value.</returns>
        </member>
        <member name="T:Pastel.Evolution.IncidentLogEntry">
            <summary>
            Represents an incident log entry.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.IncidentLogEntry.Action">
            <summary>
            Gets the log entry action.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.IncidentLogEntry.SetUserField(System.String,System.Object)">
            <summary> Sets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <param name="fieldValue">Specifies the user defined field value.</param>
        </member>
        <member name="M:Pastel.Evolution.IncidentLogEntry.GetUserField(System.String)">
            <summary> Gets the user defined field value.  Note that the field name is case-sensitive. </summary>
            <param name="fieldName">Specifies the user defined field name.</param>
            <returns>The user defined field value.</returns>
        </member>
        <member name="T:Pastel.Evolution.IncidentLogNotification">
            <summary>
            Represents an incident notification.  These appear in My Desktop\Notifications.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Document">
            <summary>
            Represents a contact management document.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Document.OnSave">
            <summary>
            Persists the record to the database.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Document.Path">
            <summary>
            Gets the document's physical path.  An empty string is returned if no file location is set.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Document.IsUnc(System.String)">
            <summary>
            Determine if path is Unc or Mapped drive format. 
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Document.OnDelete">
            <summary>
            Removes the record from the database, provided it is not referenced by other records.
            </summary>
            <exception cref="T:Pastel.Evolution.IntegrityViolationException"/>
        </member>
        <member name="M:Pastel.Evolution.Document.List(System.String)">
            <summary>
            Returns a System.Data.DataTable object containing the database records from the _rtblDocStore table matching the supplied criteria.
            </summary>
            <param name="criteria">The SQL criteria used to locate the record, e.g. <c>cDocName like '1___'</c></param>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to include 
            the single quotes around string literals and append additional criteria with <c>and</c>.</remarks>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="P:Pastel.Evolution.Document.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Document.Save(System.String)">
            <summary>
            Saves the document to the database after copying the physical file from the specified path and storing it in the central storage directory.
            </summary>
            <param name="path">The full path to the file that needs to be copied.</param>
        </member>
        <member name="M:Pastel.Evolution.Document._CreateLink(Pastel.Evolution.Incident)">
            <summary>Temporary Method</summary>
            <param name="record">
            </param>
        </member>
        <member name="M:Pastel.Evolution.Document._CreateLink(Pastel.Evolution.Opportunity)">
            <summary>Temporary Method</summary>
            <param name="record">
            </param>
        </member>
        <member name="T:Pastel.Evolution.IncidentType">
            <summary>
            Represents an incident type.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.IncidentType.ID">
            <summary>
            Gets the internal record ID (0 for new, unsaved records).
            </summary>
        </member>
        <member name="P:Pastel.Evolution.IncidentType.Description">
            <summary>
            Gets or sets the record description.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.IncidentType.EscalationGroupID">
            <summary>
            Gets or sets the record description.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.Resources.GenericFile">
            <summary>
              Looks up a localized resource of type System.Drawing.Icon similar to (Icon).
            </summary>
        </member>
        <member name="T:Pastel.Evolution.CreditNote">
            <summary>
            Represents an Evolution sales credit note.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CreditNote.#ctor">
            <summary>Creates a new instance of  a credit note.</summary>
        </member>
        <member name="M:Pastel.Evolution.CreditNote.#ctor(System.Int64)">
            <summary>Creates a new instance of  a credit note.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.CreditNote.Find(System.String)">
            <summary>Finds and returns the id of the first document matching the supplied criteria. E.g. InvNumber = 'CRN0001'</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.CreditNote.List(System.String)">
            <summary>Lists unprocessed documents for the supplied criteria.</summary>
            <remarks>Pseudo-tables: Core, Customer</remarks>
            <param name="criteria">E.g. Customer.Account = 'CASH001' and (OrderNum = 'SO209302')</param>
        </member>
        <member name="P:Pastel.Evolution.CreditNote.InvoiceNumber">
            <summary>Gets or sets the credit note's invoice number.</summary>
            <remarks>The invoice number refers back to an original sale.</remarks>
        </member>
        <member name="T:Pastel.Evolution.SplitAllocation">
            <summary>
            Describes a transaction split allocation used when splitting a transaction's contra entry.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="amount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,System.Double,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="amount"></param>
            /// <param name="foreignAmount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,System.String,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="description">The description to use.</param>
            <param name="amount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,System.String,System.Double,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="description">The description to use.</param>
            <param name="amount"></param>
            <param name="foreignAmount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,Pastel.Evolution.TaxRate,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="taxRate">The tax type to use.</param>
            <param name="amount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,Pastel.Evolution.TaxRate,System.Double,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="taxRate">The tax type to use.</param>
            <param name="amount"></param>
            <param name="foreignAmount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,System.String,Pastel.Evolution.TaxRate,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="description">The description to use.</param>
            <param name="taxRate">The tax type to use.</param>
            <param name="amount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,System.String,Pastel.Evolution.TaxRate,System.Double,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="description">The description to use.</param>
            <param name="taxRate">The tax type to use.</param>
            <param name="amount"></param>
            <param name="foreignAmount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,Pastel.Evolution.Project,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="project">The project to use.</param>
            <param name="amount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,Pastel.Evolution.Project,System.Double,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="project">The project to use.</param>
            <param name="amount"></param>
            <param name="foreignAmount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,System.String,Pastel.Evolution.Project,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="description">The description to use.</param>
            <param name="project">The project to use.</param>
            <param name="amount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,System.String,Pastel.Evolution.Project,System.Double,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="description">The description to use.</param>
            <param name="project">The project to use.</param>
            <param name="amount"></param>
            <param name="foreignAmount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,Pastel.Evolution.TaxRate,Pastel.Evolution.Project,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="taxRate">The tax type to use.</param>
            <param name="project">The project to use.</param>
            <param name="amount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,Pastel.Evolution.TaxRate,Pastel.Evolution.Project,System.Double,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="taxRate">The tax type to use.</param>
            <param name="project">The project to use.</param>
            <param name="amount"></param>
            <param name="foreignAmount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,System.String,Pastel.Evolution.TaxRate,Pastel.Evolution.Project,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="description">The description to use.</param>
            <param name="taxRate">The tax type to use.</param>
            <param name="project">The project to use.</param>
            <param name="amount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitAllocation.#ctor(Pastel.Evolution.GLAccount,System.String,Pastel.Evolution.TaxRate,Pastel.Evolution.Project,System.Double,System.Double)">
            <summary>
            Creates a new instance of a transaction split allocation entry.
            </summary>
            <param name="account">The GL account to use.</param>
            <param name="description">The description to use.</param>
            <param name="taxRate">The tax type to use.</param>
            <param name="project">The project to use.</param>
            <param name="amount"></param>
            <param name="foreignAmount"></param>
        </member>
        <member name="P:Pastel.Evolution.SplitAllocation.Account">
            <summary>
            Gets or sets the GL account to post to.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SplitAllocation.TaxType">
            <summary>
            Gets or sets the tax type to use.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SplitAllocation.Amount">
            <summary>
            Gets or sets the value of this split allocation.  Note that the Amount and Foreign amount properties are mutually exclusive. Setting one value will zero the other.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SplitAllocation.ForeignAmount">
            <summary>
            Gets or sets the foreign value of this split allocation.  Note that the Amount and Foreign amount properties are mutually exclusive. Setting one value will zero the other.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SplitAllocation.TaxAmount">
            <summary>
            Gets or sets the tax value of this split allocation.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SplitAllocation.ForeignTaxAmount">
            <summary>
            Gets or sets the foreign tax value of this split allocation.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.SplitAllocationCollection.CollectionChanged">
            <summary>
            Occurs when split allocation records are added or deleted.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.SplitTaxAllocation">
            <summary>
            Describes a transaction split allocation used when splitting a transaction's vat entry.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.SplitTaxAllocation.#ctor(Pastel.Evolution.GLAccount,System.Double)">
            <summary>
            Creates a new instance of a transaction split tax allocation entry.
            </summary>
            <param name="taxAccount">The GL tax account to use.</param>
            <param name="amount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitTaxAllocation.#ctor(Pastel.Evolution.GLAccount,Pastel.Evolution.TaxRate,System.Double)">
            <summary>
            Creates a new instance of a transaction split tax allocation entry.
            </summary>
            <param name="taxAccount">The GL tax account to use.</param>
            <param name="taxRate">The tax type to use.</param>
            <param name="amount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitTaxAllocation.#ctor(Pastel.Evolution.GLAccount,Pastel.Evolution.Project,System.Double)">
            <summary>
            Creates a new instance of a transaction split tax allocation entry.
            </summary>
            <param name="taxAccount">The GL tax account to use.</param>
            <param name="project">The project to use.</param>
            <param name="amount"></param>
        </member>
        <member name="M:Pastel.Evolution.SplitTaxAllocation.#ctor(Pastel.Evolution.GLAccount,Pastel.Evolution.TaxRate,Pastel.Evolution.Project,System.Double)">
            <summary>
            Creates a new instance of a transaction split tax allocation entry.
            </summary>
            <param name="taxAccount">The GL tax account to use.</param>
            <param name="taxRate">The tax type to use.</param>
            <param name="project">The project to use.</param>
            <param name="amount"></param>
        </member>
        <member name="P:Pastel.Evolution.SplitTaxAllocation.TaxAccount">
            <summary>
            Gets or sets the GL tax account to post to.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SplitTaxAllocation.TaxType">
            <summary>
            Gets or sets the tax type to use.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SplitTaxAllocation.Amount">
            <summary>
            Gets or sets the value of this split tax allocation.  Note that the Amount and Foreign amount properties are mutually exclusive. Setting one value will zero the other.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SplitTaxAllocation.ForeignAmount">
            <summary>
            Gets or sets the foreign value of this split allocation.  Note that the Amount and Foreign amount properties are mutually exclusive. Setting one value will zero the other.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.SplitTaxAllocation.TaxAmount">
            <summary>
            Gets or sets the tax value of this split tax allocation.
            </summary>
        </member>
        <member name="E:Pastel.Evolution.SplitTaxAllocationCollection.CollectionChanged">
            <summary>
            Occurs when split tax allocation records are added or deleted.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.CommonRecordBase">
            <summary>
            Embodies an Evolution record in the common database, such as statistical logging.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CommonRecordBase.Delete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="P:Pastel.Evolution.CommonRecordBase.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.CommonRecordBase.LongID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="M:Pastel.Evolution.CommonRecordBase.RejectUnsaved(Pastel.Evolution.CommonRecordBase,System.String)">
            <summary>
            Ensures that the record has a non-zero ID.  Null references are ignored.
            </summary>
            <param name="record">The record to test.</param>
            <param name="message">The exception message, should the record have a zero ID. If null or empty, a generic message will be provided.</param>
        </member>
        <member name="M:Pastel.Evolution.CommonRecordBase.RejectUnsaved(Pastel.Evolution.CommonRecordBase)">
            <summary>
            Ensures that the recordBase has a non-zero ID.  Null references are ignored.
            </summary>
            <param name="record"></param>
        </member>
        <member name="M:Pastel.Evolution.CommonRecordBase.AreEqual(Pastel.Evolution.CommonRecordBase,Pastel.Evolution.CommonRecordBase)">
            <summary>
            Determines whether the specified records are considered equal, the condition being that their ID's agree (even if both are 0) or that both are null.
            </summary>
            <param name="record1"></param>
            <param name="record2"></param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.CommonTransactionBase">
            <summary>
            Embodies an Evolution transaction posted to the common database.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.CommonTransactionBase.Post">
            <summary>Posts the statistical log transaction.</summary>
        </member>
        <member name="P:Pastel.Evolution.CommonTransactionBase.SDKVersionNumber">
            <summary>Gets the SDK version numebr.</summary>
        </member>
        <member name="P:Pastel.Evolution.CommonTransactionBase.EvolutionVersionNumber">
            <summary>Gets the Evolution version number.</summary>
        </member>
        <member name="P:Pastel.Evolution.CommonTransactionBase.EvolutionDatabaseName">
            <summary>Gets the Evolution database name.</summary>
        </member>
        <member name="P:Pastel.Evolution.CommonTransactionBase.UserName">
            <summary>Gets the Evolution agent.</summary>
        </member>
        <member name="P:Pastel.Evolution.CommonTransactionBase.Serial">
            <summary>Gets the api serial number.</summary>
        </member>
        <member name="P:Pastel.Evolution.CommonTransactionBase.CallerAssembly">
            <summary>Gets the api caller assembly.</summary>
        </member>
        <member name="P:Pastel.Evolution.CommonTransactionBase.DateTimeStamp">
            <summary>Gets or sets the transaction date.</summary>
        </member>
        <member name="P:Pastel.Evolution.CommonTransactionBase.Container">
            <summary>Gets or sets the transaction date.</summary>
        </member>
        <member name="P:Pastel.Evolution.CommonTransactionBase.ID">
            <summary>Gets the transaction id.</summary>
            <remarks>The ID is 0 when unposted; once posted, it will reflect the transaction's internal database ID.</remarks>
        </member>
        <member name="M:Pastel.Evolution.CommonTransactionBase.Validate">
            <summary>Validates the transaction.</summary>
            <returns>The Validate.</returns>
        </member>
        <member name="P:Pastel.Evolution.CommonTransactionBase.IsPosted">
            <summary>
            Determines whether a transaction has been posted.  In cases where transactions can be re-posted, this will obviously not be reliable after the initial post.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.EvolutionStatsSerialization">
            <summary>
            Represents the serialization of an Evolution statistical log entry.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.EvolutionStatsSerialization.Deserialize(System.String)">
            <summary>Deserialize an Evolution statistical log entry.</summary>
            <param name="xmlString">The xml string to be deserialized to an Evolution statistical log entry.</param>
        </member>
        <member name="M:Pastel.Evolution.EvolutionStatsSerialization.Serialize(EvolutionStats)">
            <summary>Serialize an Evolution statistical log entry.</summary>
            <param name="stats">The Evolution statistical log entry to be serialized to a xml string.</param>
        </member>
        <member name="M:Pastel.Evolution.EvolutionStatsSerialization.EncryptSerializeLogEntry(System.Object)">
            <summary>Serialize an Evolution statistical log entry.</summary>
            <param name="stats">The Evolution statistical log entry information.</param>
        </member>
        <member name="T:Pastel.Evolution.StatClientType">
            <summary>
            Describes the client initiating statistical log.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.StatLogType">
            <summary>
            Describes the type of statistical log.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.LogStatistics">
            <summary>
            Represents an Evolution common log transaction.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.LogStatistics.#ctor">
            <summary>Creates a new instance of a log transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.LogStatistics.#ctor(Pastel.Evolution.StatLogType)">
            <summary>Creates a new instance of a log transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.LogStatistics.GetDescription(System.Object,System.String)">
            <summary>Return enum description attribute.</summary>
        </member>
        <member name="M:Pastel.Evolution.LogStatistics.InitiateLogIn">
            <summary>Initiate a login information transaction type.</summary>
        </member>
        <member name="M:Pastel.Evolution.LogStatistics.InitiateLogInStat">
            <summary>Initiate a statistical information.</summary>
        </member>
        <member name="M:Pastel.Evolution.LogStatistics.Validate">
            <summary>Validates the transaction.</summary>
        </member>
        <member name="M:Pastel.Evolution.LogStatistics.GetSDKFileVersionInfo">
            <summary>Return the sdk file version information.</summary>
        </member>
        <member name="M:Pastel.Evolution.LogStatistics.GetEvolutionVersionInfo">
            <summary>Return the evolution application version information.</summary>
        </member>
        <member name="M:Pastel.Evolution.LogStatistics.GetEvolutionCompanyDatabase">
            <summary>Return the evolution company database name.</summary>
        </member>
        <member name="M:Pastel.Evolution.LogStatistics.GetCallerAssembly">
            <summary>Return the api caller assembly name.</summary>
        </member>
        <member name="T:Pastel.Evolution.TaxIndustryCode">
            <summary>
            Represents a major tax industry code.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.#ctor">
            <summary>Creates a new instance of a tax industry code.</summary>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.#ctor(System.Int32)">
            <summary>Creates a new instance of a tax industry code.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.#ctor(System.String)">
            <summary>Creates a new instance of a tax industry code.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.TaxIndustryCode.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.TaxIndustryCode.Code">
            <summary>Gets or sets the tax industry code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TaxIndustryCode.Description">
            <summary>Gets or sets the tax industry's description.</summary>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.ToString">
            <summary>Gets the record's string representation.</summary>
            <remarks>Useful while debugging.</remarks>
            <returns>The object's string representation.</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.FindByCode(System.String)">
            <summary>Finds the database ID of a record matching the specified code.</summary>
            <param name="code">Specifies the code.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <seealso cref="M:Pastel.Evolution.TaxIndustryCode.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.GetByCode(System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.List(System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the Client table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Account like '1___'</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.List(System.String,System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the Client table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Account like '1___'</param>
            <param name="sortOrder">The SQL order by clause to use, e.g. DCBalance desc, Account</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxIndustryCode.Clone">
            <summary>Creates an exact copy of an existing tax industry code.</summary>
            <returns>The cloned tax industry code.</returns>
        </member>
        <member name="T:Pastel.Evolution.TaxRate">
            <summary>
            Represents a tax rate.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.#ctor">
            <summary>Creates a new instance of  a tax type.</summary>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.#ctor(System.Int32)">
            <summary>Creates a new instance of  a tax type.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.#ctor(System.String)">
            <summary>Creates a new instance of  a tax type.</summary>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.FindByCode(System.String)">
            <summary>Finds the database ID of a record matching the specified code.</summary>
            <param name="code">Specifies the code.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <seealso cref="M:Pastel.Evolution.TaxRate.Find(System.String)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.GetByCode(System.String)">
            <summary>Returns an instance of the first record with the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxRate._Select(System.String)">
            <summary>
            Experimental Method
            </summary>
            <param name="criteria"></param>
            <returns></returns>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.List(System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the Client table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Account like '1___'</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.List(System.String,System.String)">
            <summary>Returns a System.Data.DataTable object containing the database records from the Client table matching the supplied criteria.</summary>
            <remarks>The criteria is passed to an SQL query so use the appropriate syntax.  Remember to includethe single quotes around string literals and append additional criteria with and.</remarks>
            <param name="criteria">The SQL criteria used to locate the record, e.g. Account like '1___'</param>
            <param name="sortOrder">The SQL order by clause to use, e.g. DCBalance desc, Account</param>
            <returns>A System.Data.DataTable object containing matching records.</returns>
        </member>
        <member name="P:Pastel.Evolution.TaxRate.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.TaxRate.Code">
            <summary>Gets or sets the tax type's code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TaxRate.Description">
            <summary>Gets or sets the tax type's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.TaxRate.Rate">
            <summary>Gets or sets the tax type's rate.</summary>
            <remarks>Valid values 0-100</remarks>
        </member>
        <member name="M:Pastel.Evolution.TaxRate.ToString">
            <summary>Gets the record's string representation.</summary>
            <remarks>Useful while debugging.</remarks>
            <returns>The object's string representation.</returns>
        </member>
        <member name="T:Pastel.Evolution.TransactionBase">
            <summary>
            Embodies a common Evolution transaction.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.TransactionBase.Post">
            <summary>Posts the transaction to appropriate ledgers.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.Module">
            <summary>Gets the transaction's Evolution module.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.Account">
            <summary>Gets or sets the transaction's account.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.AccountID">
            <summary>Gets or sets the transaction's account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.Date">
            <summary>Gets or sets the transaction date.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.TransactionCode">
            <summary>Gets or sets the transaction's transaction code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.TransactionCodeID">
            <summary>Gets or sets the transaction code id.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.OrderNo">
            <summary>Gets or sets the transaction's order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.ExtOrderNo">
            <summary>Gets or sets the transaction's external order number.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.Project">
            <summary>Sets the transaction's project.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.ProjectID">
            <summary>Gets or sets the transaction's project id.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.Description">
            <summary>Gets or sets the transaction description.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.Reference">
            <summary>Gets or sets the transaction reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.Reference2">
            <summary>Gets or sets the 2nd transaction reference.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.Debit">
            <summary>Gets or sets the transaction's debit value.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.Credit">
            <summary>Gets or sets the transaction's credit value.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.TaxRate">
            <summary>Gets or sets the transaction's tax type.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.TaxRateID">
            <summary>Gets or sets the transaction's tax type id.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.Tax">
            <summary>Gets or sets the transaction tax amount.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.Audit">
            <summary>Gets the transaction's audit number.</summary>
            <remarks>The audit number is 0 when unposted.  After posting, it will reflect the transaction's posted audit number.</remarks>
        </member>
        <member name="M:Pastel.Evolution.TransactionBase.SetDocumentKey(System.Int64)">
            <param name="id">
            </param>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.ID">
            <summary>Gets the transaction id.</summary>
            <remarks>The ID is 0 when unposted; once posted, it will reflect the transaction's internal database ID.</remarks>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.ModID">
            <summary>Gets or sets the transaction's Evolution module ID.</summary>
        </member>
        <member name="M:Pastel.Evolution.TransactionBase.Validate">
            <summary>Validates the transaction.</summary>
            <returns>The Validate.</returns>
        </member>
        <member name="M:Pastel.Evolution.TransactionBase.onPostingGLDebit(Pastel.Evolution.GLTransaction)">
            <returns>Returns true if the transaction has already been handled.</returns>
        </member>
        <member name="M:Pastel.Evolution.TransactionBase.onPostingGLCredit(Pastel.Evolution.GLTransaction)">
            <returns>Returns true if the transaction has already been handled.</returns>
        </member>
        <member name="P:Pastel.Evolution.TransactionBase.IsPosted">
            <summary>
            Determines whether a transaction has been posted.  In cases where transactions can be re-posted, this will obviously not be reliable after the initial post.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.TransactionCode">
            <summary>
            Represents an Evolution transaction code.  Transaction codes dictate the nature (debit/credit) of a transaction as well as the GL accounts to post to.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.#ctor">
            <summary>Creates a new instance of a transaction code.</summary>
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.#ctor(System.Int32)">
            <summary>Creates a new instance of a transaction code.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.#ctor(Pastel.Evolution.Module,System.String)">
            <summary>Creates a new instance of a transaction code.</summary>
            <param name="module">Specifies the module of the existing record.</param>
            <param name="code">Specifies the code of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.DebitAccountID">
            <summary>Gets the transaction code's debit GL account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.CreditAccountID">
            <summary>Gets the transaction code's credit GL account id.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.DebitAccount">
            <summary>Gets the transaction code's debit GL account.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.CreditAccount">
            <summary>Gets the transaction code's credit GL account.</summary>
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <remarks>WARNING: be sure to filter on both code andmodule when using this method since some transaction type codes are duplicated between modules.  Using the alternative overloaded find method is highly recommended.</remarks>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <seealso cref="M:Pastel.Evolution.TransactionCode.Find(System.String,Pastel.Evolution.Module)" />
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.Find(System.String,Pastel.Evolution.Module)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <param name="module">Specifies the module.</param>
            <returns>The Find.</returns>
            <seealso cref="M:Pastel.Evolution.TransactionCode.Find(System.String)" />
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.FindByCode(System.String,Pastel.Evolution.Module)">
            <summary>Finds the database ID of a record matching the specified code.</summary>
            <param name="code">Specifies the code.</param>
            <param name="module">Specifies the module.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.Get(System.String,Pastel.Evolution.Module)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <param name="module">Specifies the module.</param>
            <seealso cref="M:Pastel.Evolution.TransactionCode.Find(System.String)" />
            <seealso cref="M:Pastel.Evolution.TransactionCode.GetByCode(System.String,Pastel.Evolution.Module)" />
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.GetByCode(System.String,Pastel.Evolution.Module)">
            <summary>Returns a transaction type object corresponding to the code specified; otherwise, returns null.</summary>
            <param name="code">Specifies the code.</param>
            <param name="module">Specifies the module.</param>
            <returns>The ByCode.</returns>
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.OnSave">
            <summary>Persists the record to the database.</summary>
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.OnDelete">
            <summary>Removes the record from the database, provided it is not referenced by other records.Removes the record from the database, provided it is not referenced by other records.</summary>
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.List(System.String,Pastel.Evolution.Module)">
            <summary>Executes the List method.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <param name="module">Specifies the module.</param>
            <returns>The List.</returns>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.Account1ID">
            <summary>Gets or sets the transaction code's account1 id.</summary>
            <summary>Gets or sets the transaction code's account1 id.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.Account2ID">
            <summary>Gets or sets the transaction code's account2 id.</summary>
            <summary>Gets or sets the transaction code's account2 id.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.AllowSubAccTrans">
            <summary>Gets or sets whether transactions to sub accounts (linked debtor accounts) are allowed when using this transaction code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.SalesFilter">
            <summary>Gets or sets whether this transaction is a "sales" transaction code.</summary>
            <remarks>Used in debtors/inventory reporting.</remarks>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.SettlementDiscFilter">
            <summary>Gets or sets whether this transaction allows for settlement discount.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.Code">
            <summary>Gets or sets the transaction code's code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.IsDebitTrans">
            <summary>Gets or sets whether this transaction code is a debit transaction type.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.Description">
            <summary>Gets or sets the transaction code's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.GLPrompt">
            <summary>Gets or sets whether or not to prompt for a GL account.</summary>
            <remarks>Only relevant when transacting inside of Evolution.</remarks>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.ID">
            <summary>Gets the internal record ID (0 for new, unsaved records).</summary>
            <remarks>Once saved, the ID will reflect the record's internal database identifier.</remarks>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.Module">
            <summary>Gets or sets the transaction code's Evolution module.</summary>
            <remarks>Transaction codes can be duplicated as long as they belong to distinct modules.</remarks>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.LinkedTrCodeID">
            <summary>Gets the transaction code's linked transaction code ID.</summary>
            <remarks>See the default INV transaction code for an example of how linked transactions are configured.</remarks>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.LinkedTrCode">
            <summary>Gets the transaction code's linked transaction code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.Rep">
            <summary>Gets or sets the transaction code's default representative.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.Taxable">
            <summary>Gets or sets the transaction code's taxable status.</summary>
            <remarks>A taxable transaction codes must specify a tax account.</remarks>
            <seealso cref="P:Pastel.Evolution.TransactionCode.TaxAccountID" />
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.TaxAccountID">
            <summary>Gets or sets the transaction code's tax account id.</summary>
            <seealso cref="P:Pastel.Evolution.TransactionCode.Taxable" />
        </member>
        <member name="P:Pastel.Evolution.TransactionCode.TaxRateID">
            <summary>Gets or sets the transaction code's default tax type id.</summary>
            <remarks>If a default type is not set, a tax type must be specified when posting a transaction.</remarks>
            <seealso cref="P:Pastel.Evolution.TransactionBase.TaxRate" />
        </member>
        <member name="M:Pastel.Evolution.TransactionCode.Find(Pastel.Evolution.Module,System.String)">
            <summary>Executes the Find method.</summary>
            <param name="module">Specifies the module.</param>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The Find.</returns>
        </member>
        <member name="T:Pastel.Evolution.DeliveryAddressCollection">
            <summary>
            Represents a collection of warehouse context records.
            </summary>
            <seealso cref="T:Pastel.Evolution.DeliveryAddress"/>
        </member>
        <member name="M:Pastel.Evolution.DeliveryAddressCollection.SetDefault(Pastel.Evolution.DeliveryAddress)">
            <summary>
            Sets the new default delivery address for an account.  Remember to call Save() when done.
            </summary>
            <param name="newDefaultAddress"></param>
        </member>
        <member name="P:Pastel.Evolution.DeliveryAddressCollection.Item(System.String)">
            <summary>
            Gets the delivery address object relating to the current account and the address code specified.
            </summary>
            <param name="code">The delivery address code to return.</param>
            <returns></returns>
        </member>
        <member name="P:Pastel.Evolution.DeliveryAddressCollection.Item(System.Int32)">
            <summary>
            Gets a delivery address by index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="T:Pastel.Evolution.TransactionCodeBase">
            <summary>
            Embodies common Evolution transaction code functionality.
            </summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCodeBase.Code">
            <summary>Gets or sets the transaction code's code.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCodeBase.Description">
            <summary>Gets or sets the transaction code's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.TransactionCodeBase.AsTransactionCode">
            <summary>Gets the basic transaction code object (of type TransactionCodeBase), cast as a proper TransactionCode object.</summary>
        </member>
        <member name="T:Pastel.Evolution.UserDefinedFieldCollection">
            <summary>
            Represents an user defined field collection.
            </summary>
        </member>
        <member name="T:Pastel.Evolution.UserDefinedValue">
            <summary>
            Represents an user defined value.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedValue.#ctor">
            <summary>Creates a new instance of a user defined value.</summary>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedValue.#ctor(System.Int64)">
            <summary>Creates a new instance of a user defined value.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedValue.#ctor(System.Int32,System.Int64)">
            <summary>Creates a new instance of a user defined value.</summary>
            <param name="userFieldID">Specifies the user field ID of the existing record.</param>
            <param name="tableID">Specifies the table ID of the existing record.</param>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedValue.ID">
            <summary>Gets the internal record ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedValue.LongID">
            <summary>Gets the internal record ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedValue.Field">
            <summary>Gets the user defined field this value belongs to.</summary>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedValue.TableID">
            <summary>Gets the user defined field's table ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedValue.Value">
            <summary>Gets the user defined field's value.</summary>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedValue.LastModifiedDate">
            <summary>Gets the last modfied date.</summary>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedValue.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedValue.FindByFieldAndTableID(System.Int32,System.Int64)">
            <summary>Executes the FindByFieldAndTableID method.</summary>
            <param name="userFieldID">Specifies the user field ID of the existing record.</param>
            <param name="tableID">Specifies the table ID of the existing record.</param>
            <returns>The FindByFieldAndTableID.</returns>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedValue.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedValue.GetByFieldAndTableID(System.Int32,System.Int64)">
            <summary>Gets the user defined field by field name.</summary>
            <param name="userFieldID">Specifies the user field ID of the existing record.</param>
            <param name="tableID">Specifies the table ID of the existing record.</param>
            <returns>The ByFieldAndTableID.</returns>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedValue.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>
        </member>
        <member name="T:Pastel.Evolution.UserDefinedField">
            <summary>
            Represents an user defined field.
            </summary>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.#ctor">
            <summary>Creates a new instance of a user defined field.</summary>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.#ctor(System.Int32)">
            <summary>Creates a new instance of a user defined field.</summary>
            <param name="id">Specifies the id of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.#ctor(System.Int32,System.Int64)">
            <summary>Creates a new instance of a user defined field.</summary>
            <param name="id">Specifies the id of the existing record.</param>
            <param name="tableID">Specifies the table id.</param>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.#ctor(System.String)">
            <summary>Creates a new instance of a user defined field.</summary>
            <param name="fieldName">Specifies the field name of the existing record.</param>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.SetTypeCast(System.Object)">
            <summary>Cast the object to the correct user defined data type.</summary>
            <param name="fieldName">Specifies the field value.</param>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.GetTypeCast(System.Object)">
            <summary>Cast the object to the correct user defined data type.</summary>
            <param name="fieldName">Specifies the field value.</param>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedField.ID">
            <summary>Gets the internal record ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedField.LongID">
            <summary>Gets the internal record ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedField.FieldName">
            <summary>Gets the user defined field's name.</summary>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedField.Description">
            <summary>Gets the user defined field's description.</summary>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedField.Value">
            <summary>Gets and sets the user defined field's value.</summary>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedField.TableID">
            <summary>Gets the user defined field's table ID.</summary>
        </member>
        <member name="P:Pastel.Evolution.UserDefinedField.FieldType">
            <summary>Gets the user defined field's type.</summary>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.Find(System.String)">
            <summary>Finds a record's database ID.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The ID of the first record found; -1 if not record was found.</returns>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.FindByFieldName(System.String)">
            <summary>Executes the FindByFieldName method.</summary>
            <param name="fieldName">Specifies the field name.</param>
            <returns>The FindByFieldName.</returns>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.Get(System.String)">
            <summary>Returns an instance of the first record satisfying the criteria specified; otherwise, returns null.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>The record found; otherwise null</returns>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.GetByFieldName(System.String)">
            <summary>Gets the user defined field by field name.</summary>
            <param name="fieldName">Specifies the field name.</param>
            <returns>The ByFieldName.</returns>
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.List(System.String)">
            <summary>Gets a list of database records.</summary>
            <param name="criteria">Specifies the criteria as a SQL where clause.</param>
            <returns>Table containing selected records.</returns>Tekom
        </member>
        <member name="M:Pastel.Evolution.UserDefinedField.ListByTableName(System.String,Pastel.Evolution.DocumentType)">
            <summary>Gets a list of user defined fields by table name.</summary>
            <param name="tableName">Specifies the table name.</param>
            <returns>The ListByTableName.</returns>
        </member>
        <member name="M:Pastel.Evolution.Utils.SqlEscape(System.String,System.String)">
            <summary>
            Formats a sql string and escapes the argument (only).
            </summary>
        </member>
        <member name="M:Pastel.Evolution.Utils.GetEnumDescription(System.Enum)">
            <summary> Returns an enumerator's description attribute value </summary>
        </member>
        <member name="M:Pastel.Evolution.Utils.GetAttributeOfType``1(System.Enum)">
            <summary> Gets an attribute on an enum field value </summary>
            <typeparam name="T">The type of the attribute you want to retrieve</typeparam>
            <param name="enumVal">The enum value</param>
            <returns>The attribute of type T that exists on the enum value</returns>
        </member>
        <member name="T:AttributeModule">
            <remarks/>
        </member>
        <member name="F:AttributeModule.GeneralLedger">
            <remarks/>
        </member>
        <member name="F:AttributeModule.Inventory">
            <remarks/>
        </member>
        <member name="T:AttributeEntryType">
            <remarks/>
        </member>
        <member name="F:AttributeEntryType.None">
            <remarks/>
        </member>
        <member name="F:AttributeEntryType.Fixed">
            <remarks/>
        </member>
        <member name="F:AttributeEntryType.Variable">
            <remarks/>
        </member>
        <member name="T:AttributeGroup">
            <remarks/>
        </member>
        <member name="P:AttributeGroup.Version">
            <remarks/>
        </member>
        <member name="P:AttributeGroup.GroupID">
            <remarks/>
        </member>
        <member name="P:AttributeGroup.GroupCode">
            <remarks/>
        </member>
        <member name="P:AttributeGroup.GroupDescription">
            <remarks/>
        </member>
        <member name="P:AttributeGroup.Module">
            <remarks/>
        </member>
        <member name="P:AttributeGroup.AttributeModule">
            <remarks/>
        </member>
        <member name="P:AttributeGroup.Attribute">
            <remarks/>
        </member>
        <member name="P:AttributeGroup.AttributeBalanceGroup">
            <remarks/>
        </member>
        <member name="P:AttributeGroup.AttributeQuantityGroup">
            <remarks/>
        </member>
        <member name="P:AttributeGroup.AttributeTxQuantityGroup">
            <remarks/>
        </member>
        <member name="T:Attribute">
            <remarks/>
        </member>
        <member name="P:Attribute.Version">
            <remarks/>
        </member>
        <member name="P:Attribute.Entry">
            <remarks/>
        </member>
        <member name="P:Attribute.AttributeEntryType">
            <remarks/>
        </member>
        <member name="P:Attribute.AttributeEntryTypeSpecified">
            <remarks/>
        </member>
        <member name="P:Attribute.TypeID">
            <remarks/>
        </member>
        <member name="P:Attribute.TypeName">
            <remarks/>
        </member>
        <member name="P:Attribute.ValueID">
            <remarks/>
        </member>
        <member name="P:Attribute.Value">
            <remarks/>
        </member>
        <member name="P:Attribute.TrackBalances">
            <remarks/>
        </member>
        <member name="P:Attribute.TrackBalancesSpecified">
            <remarks/>
        </member>
        <member name="P:Attribute.TrackQuantity">
            <remarks/>
        </member>
        <member name="P:Attribute.TrackQuantitySpecified">
            <remarks/>
        </member>
        <member name="P:Attribute.TrackCost">
            <remarks/>
        </member>
        <member name="P:Attribute.TrackCostSpecified">
            <remarks/>
        </member>
        <member name="T:AttributeBalanceGroup">
            <remarks/>
        </member>
        <member name="P:AttributeBalanceGroup.Version">
            <remarks/>
        </member>
        <member name="P:AttributeBalanceGroup.DebitTotal">
            <remarks/>
        </member>
        <member name="P:AttributeBalanceGroup.DebitTotalSpecified">
            <remarks/>
        </member>
        <member name="P:AttributeBalanceGroup.CreditTotal">
            <remarks/>
        </member>
        <member name="P:AttributeBalanceGroup.CreditTotalSpecified">
            <remarks/>
        </member>
        <member name="P:AttributeBalanceGroup.AttributeBalance">
            <remarks/>
        </member>
        <member name="T:AttributeBalance">
            <remarks/>
        </member>
        <member name="P:AttributeBalance.Version">
            <remarks/>
        </member>
        <member name="P:AttributeBalance.Debit">
            <remarks/>
        </member>
        <member name="P:AttributeBalance.Credit">
            <remarks/>
        </member>
        <member name="P:AttributeBalance.Attribute">
            <remarks/>
        </member>
        <member name="T:AttributeQuantityGroup">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.Version">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyOnHand">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyOnSO">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyOnPO">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyReserved">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyToDeliver">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyJCWIP">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyMFPWIP">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyLastGrvCount">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyIBTToIssue">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyIBTToReceive">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyIBTIssued">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.TotalQtyIBTReceived">
            <remarks/>
        </member>
        <member name="P:AttributeQuantityGroup.AttributeQuantity">
            <remarks/>
        </member>
        <member name="T:AttributeQuantity">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.Version">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyOnHand">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyOnSO">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyOnPO">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyReserved">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyToDeliver">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyJCWIP">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyMFPWIP">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyLastGrvCount">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyIBTToIssue">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyIBTToReceive">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyIBTIssued">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.QtyIBTReceived">
            <remarks/>
        </member>
        <member name="P:AttributeQuantity.Attribute">
            <remarks/>
        </member>
        <member name="T:AttributeTxQuantityGroup">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.Version">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQty">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyPrevious">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyToProcess">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyLastProcessed">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyProcessed">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyReserved">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyReservedPrevious">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyDeliver">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyForDeliver">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyIn">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyOut">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyIssued">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyReceived">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyDamaged">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyVariance">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyOverDelivered">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyOverDamaged">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyRequired">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyApproved">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyMFPWIP">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyMFPAvail">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyMFPUnManuf">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyMFPManufactured">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyJCTrans">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyJCWIPAvail">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyJCInvoiced">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyJCToInvoice">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.TotalQtyJCAdjusted">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantityGroup.AttributeTxQuantity">
            <remarks/>
        </member>
        <member name="T:AttributeTxQuantity">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.Version">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.Qty">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyPrevious">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyToProcess">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyLastProcessed">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyProcessed">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyReserved">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyReservedPrevious">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyDeliver">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyForDeliver">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyIn">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyOut">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyIssued">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyReceived">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyDamaged">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyVariance">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyOverDelivered">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyOverDamaged">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyRequired">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyApproved">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyMFPWIP">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyMFPAvail">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyMFPUnManuf">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyMFPManufactured">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyJCTrans">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyJCWIPAvail">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyJCInvoiced">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyJCToInvoice">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.QtyJCAdjusted">
            <remarks/>
        </member>
        <member name="P:AttributeTxQuantity.Attribute">
            <remarks/>
        </member>
        <member name="T:AttributeFilter">
            <remarks/>
        </member>
        <member name="P:AttributeFilter.Version">
            <remarks/>
        </member>
        <member name="P:AttributeFilter.AttributeFilterGroups">
            <remarks/>
        </member>
        <member name="T:AttributeFilterGroups">
            <remarks/>
        </member>
        <member name="P:AttributeFilterGroups.Version">
            <remarks/>
        </member>
        <member name="P:AttributeFilterGroups.GroupID">
            <remarks/>
        </member>
        <member name="P:AttributeFilterGroups.GroupName">
            <remarks/>
        </member>
        <member name="P:AttributeFilterGroups.AttributeFilterTypes">
            <remarks/>
        </member>
        <member name="T:AttributeFilterTypes">
            <remarks/>
        </member>
        <member name="P:AttributeFilterTypes.Version">
            <remarks/>
        </member>
        <member name="P:AttributeFilterTypes.TypeID">
            <remarks/>
        </member>
        <member name="P:AttributeFilterTypes.TypeName">
            <remarks/>
        </member>
        <member name="P:AttributeFilterTypes.AttributeFilterValues">
            <remarks/>
        </member>
        <member name="T:AttributeFilterValues">
            <remarks/>
        </member>
        <member name="P:AttributeFilterValues.Version">
            <remarks/>
        </member>
        <member name="P:AttributeFilterValues.ValueID">
            <remarks/>
        </member>
        <member name="P:AttributeFilterValues.ValueName">
            <remarks/>
        </member>
        <member name="T:ClientType">
            <remarks/>
        </member>
        <member name="F:ClientType.Item1">
            <remarks/>
        </member>
        <member name="F:ClientType.Item2">
            <remarks/>
        </member>
        <member name="F:ClientType.Item3">
            <remarks/>
        </member>
        <member name="T:EvolutionStats">
            <remarks/>
        </member>
        <member name="P:EvolutionStats.StatsVersion">
            <remarks/>
        </member>
        <member name="P:EvolutionStats.ClientType">
            <remarks/>
        </member>
        <member name="P:EvolutionStats.ClientVersion">
            <remarks/>
        </member>
        <member name="P:EvolutionStats.Database">
            <remarks/>
        </member>
        <member name="P:EvolutionStats.StatsType">
            <remarks/>
        </member>
        <member name="P:EvolutionStats.LoginStats">
            <remarks/>
        </member>
        <member name="P:EvolutionStats.UIAddinStats">
            <remarks/>
        </member>
        <member name="P:EvolutionStats.DataStats">
            <remarks/>
        </member>
        <member name="T:LoginStats">
            <remarks/>
        </member>
        <member name="P:LoginStats.StatsVersion">
            <remarks/>
        </member>
        <member name="P:LoginStats.CompanyName">
            <remarks/>
        </member>
        <member name="P:LoginStats.CompanyID">
            <remarks/>
        </member>
        <member name="P:LoginStats.RegistrationKey">
            <remarks/>
        </member>
        <member name="P:LoginStats.EvolutionVersion">
            <remarks/>
        </member>
        <member name="P:LoginStats.SQLVersion">
            <remarks/>
        </member>
        <member name="P:LoginStats.LastUpgradeDone">
            <remarks/>
        </member>
        <member name="P:LoginStats.Serial">
            <remarks/>
        </member>
        <member name="P:LoginStats.APICaller">
            <remarks/>
        </member>
        <member name="T:UIAddinStats">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.StatsVersion">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.Name">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.Guid">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.Publisher">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.Contact">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.HomePage">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.Tel">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.Email">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.AddinVersion">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.Enabled">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.DllFullName">
            <remarks/>
        </member>
        <member name="P:UIAddinStats.Status">
            <remarks/>
        </member>
        <member name="T:DataStats">
            <remarks/>
        </member>
        <member name="P:DataStats.StatsVersion">
            <remarks/>
        </member>
        <member name="P:DataStats.CustomerCount">
            <remarks/>
        </member>
        <member name="P:DataStats.SupplierCount">
            <remarks/>
        </member>
        <member name="P:DataStats.InventoryCount">
            <remarks/>
        </member>
        <member name="P:DataStats.WarehouseCount">
            <remarks/>
        </member>
        <member name="P:DataStats.DatabaseFileSize">
            <remarks/>
        </member>
        <member name="P:DataStats.DatabaseLogFileSize">
            <remarks/>
        </member>
        <member name="P:DataStats.PaymentBasedTax">
            <remarks/>
        </member>
        <member name="P:DataStats.NegativeQty">
            <remarks/>
        </member>
        <member name="P:DataStats.PerpetualStock">
            <remarks/>
        </member>
        <member name="P:DataStats.CostPerWarehouse">
            <remarks/>
        </member>
        <member name="P:DataStats.AllowPOSTender">
            <remarks/>
        </member>
        <member name="P:DataStats.UseDimensions">
            <remarks/>
        </member>
        <member name="P:DataStats.ThreeStageInvoice">
            <remarks/>
        </member>
        <member name="P:DataStats.GeneralLedgerSegmented">
            <remarks/>
        </member>
        <member name="P:DataStats.GeneralLedgerNumeric">
            <remarks/>
        </member>
        <member name="P:DataStats.InventorySegmented">
            <remarks/>
        </member>
        <member name="P:DataStats.DatabaseUnicode">
            <remarks/>
        </member>
        <member name="P:DataStats.DatabaseOffline">
            <remarks/>
        </member>
    </members>
</doc>
